{"id":"ac619804c19942e36b5b07115dde9b9d","_format":"hh-sol-build-info-1","solcVersion":"0.8.28","solcLongVersion":"0.8.28+commit.7893614a","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n            // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2²⁵⁶ + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        uint256 exp;\n        unchecked {\n            exp = 128 * SafeCast.toUint(value > (1 << 128) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 64 * SafeCast.toUint(value > (1 << 64) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 32 * SafeCast.toUint(value > (1 << 32) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 16 * SafeCast.toUint(value > (1 << 16) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 8 * SafeCast.toUint(value > (1 << 8) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 4 * SafeCast.toUint(value > (1 << 4) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 2 * SafeCast.toUint(value > (1 << 2) - 1);\n            value >>= exp;\n            result += exp;\n\n            result += SafeCast.toUint(value > 1);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        uint256 isGt;\n        unchecked {\n            isGt = SafeCast.toUint(value > (1 << 128) - 1);\n            value >>= isGt * 128;\n            result += isGt * 16;\n\n            isGt = SafeCast.toUint(value > (1 << 64) - 1);\n            value >>= isGt * 64;\n            result += isGt * 8;\n\n            isGt = SafeCast.toUint(value > (1 << 32) - 1);\n            value >>= isGt * 32;\n            result += isGt * 4;\n\n            isGt = SafeCast.toUint(value > (1 << 16) - 1);\n            value >>= isGt * 16;\n            result += isGt * 2;\n\n            result += SafeCast.toUint(value > (1 << 8) - 1);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"},"contracts/MockToken.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/math/Math.sol\";\n\n/**\n * @title DealToken\n * @dev ERC20 token with a dynamic pricing mechanism based on token supply\n */\ncontract DealToken is ERC20, Ownable {\n    // Base price in wei\n    uint256 public basePrice = 0.001 ether;\n\n    // Price increase factor (multiplied by 1e18 for precision)\n    uint256 public priceIncreaseFactor = 1.2 * 1e18;\n\n    // Total ETH collected\n    uint256 public totalEthCollected;\n\n    // Initial supply\n    uint256 private constant INITIAL_SUPPLY = 1_000_000 * 1e18;\n\n    // Max supply\n    uint256 private constant MAX_SUPPLY = 10_000_000 * 1e18;\n\n    // Events\n    event TokensPurchased(\n        address indexed buyer,\n        uint256 ethAmount,\n        uint256 tokenAmount\n    );\n\n    constructor() ERC20(\"DEAL Token\", \"DEAL\") Ownable(msg.sender) {\n        // Mint initial supply to the contract creator\n        _mint(msg.sender, INITIAL_SUPPLY);\n    }\n\n    /**\n     * @dev Returns the current token price based on the current supply\n     * Price increases as more tokens are purchased\n     */\n    function getCurrentPrice() public view returns (uint256) {\n        uint256 currentSupply = totalSupply();\n\n        // If we're at max supply, return a very high price\n        if (currentSupply >= MAX_SUPPLY) {\n            return type(uint256).max;\n        }\n\n        // Calculate price based on current supply\n        // The more tokens in circulation, the higher the price\n        uint256 supplyFactor = (currentSupply * 1e18) / MAX_SUPPLY;\n        uint256 priceMultiplier = basePrice +\n            (supplyFactor * (priceIncreaseFactor - 1e18)) /\n            1e18;\n\n        return priceMultiplier;\n    }\n\n    /**\n     * @dev Buy tokens with ETH\n     */\n    function buy() external payable {\n        require(msg.value > 0, \"Must send ETH to buy tokens\");\n\n        uint256 currentPrice = getCurrentPrice();\n        require(currentPrice > 0, \"Price calculation error\");\n\n        // Calculate tokens to mint based on ETH sent and current price\n        uint256 tokensToMint = (msg.value * 1e18) / currentPrice;\n\n        // Check if this would exceed max supply\n        uint256 currentSupply = totalSupply();\n        if (currentSupply + tokensToMint > MAX_SUPPLY) {\n            tokensToMint = MAX_SUPPLY - currentSupply;\n        }\n\n        require(tokensToMint > 0, \"Not enough ETH sent to buy any tokens\");\n\n        // Update total ETH collected\n        totalEthCollected += msg.value;\n\n        // Mint tokens to buyer\n        _mint(msg.sender, tokensToMint);\n\n        emit TokensPurchased(msg.sender, msg.value, tokensToMint);\n    }\n\n    /**\n     * @dev Withdraw ETH from the contract (owner only)\n     */\n    function withdrawETH() external onlyOwner {\n        uint256 balance = address(this).balance;\n        require(balance > 0, \"No ETH to withdraw\");\n\n        (bool success, ) = payable(owner()).call{value: balance}(\"\");\n        require(success, \"ETH transfer failed\");\n    }\n\n    /**\n     * @dev Update base price (owner only)\n     */\n    function updateBasePrice(uint256 _newBasePrice) external onlyOwner {\n        basePrice = _newBasePrice;\n    }\n\n    /**\n     * @dev Update price increase factor (owner only)\n     * @param _newFactor New factor multiplied by 1e18 (e.g., 1.5 * 1e18 for 50% increase)\n     */\n    function updatePriceIncreaseFactor(uint256 _newFactor) external onlyOwner {\n        require(_newFactor >= 1e18, \"Factor must be at least 1.0\");\n        priceIncreaseFactor = _newFactor;\n    }\n}\n"}},"settings":{"evmVersion":"paris","optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[933],"Ownable":[147]},"id":148,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":148,"sourceUnit":934,"src":"128:45:0","symbolAliases":[{"foreign":{"id":2,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":933,"src":"136:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5,"name":"Context","nameLocations":["692:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":933,"src":"692:7:0"},"id":6,"nodeType":"InheritanceSpecifier","src":"692:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"175:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":147,"linearizedBaseContracts":[147,933],"name":"Ownable","nameLocation":"681:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":8,"mutability":"mutable","name":"_owner","nameLocation":"722:6:0","nodeType":"VariableDeclaration","scope":147,"src":"706:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"735:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":13,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:0","nodeType":"ErrorDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11,"mutability":"mutable","name":"account","nameLocation":"866:7:0","nodeType":"VariableDeclaration","scope":13,"src":"858:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:0"},"src":"825:50:0"},{"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"881:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":18,"name":"OwnableInvalidOwner","nameLocation":"974:19:0","nodeType":"ErrorDefinition","parameters":{"id":17,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16,"mutability":"mutable","name":"owner","nameLocation":"1002:5:0","nodeType":"VariableDeclaration","scope":18,"src":"994:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:0"},"src":"968:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":24,"name":"OwnershipTransferred","nameLocation":"1021:20:0","nodeType":"EventDefinition","parameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:0","nodeType":"VariableDeclaration","scope":24,"src":"1042:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":22,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:0","nodeType":"VariableDeclaration","scope":24,"src":"1073:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:0"},"src":"1015:84:0"},{"body":{"id":49,"nodeType":"Block","src":"1259:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":30,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1273:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":33,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":32,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":31,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:0","typeDescriptions":{}}},"id":34,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":44,"nodeType":"IfStatement","src":"1269:95:0","trueBody":{"id":43,"nodeType":"Block","src":"1301:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":39,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":38,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":37,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:0","typeDescriptions":{}}},"id":40,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":36,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"1322:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":42,"nodeType":"RevertStatement","src":"1315:38:0"}]}},{"expression":{"arguments":[{"id":46,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1392:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":45,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"1373:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":47,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48,"nodeType":"ExpressionStatement","src":"1373:32:0"}]},"documentation":{"id":25,"nodeType":"StructuredDocumentation","src":"1105:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":50,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:0","nodeType":"VariableDeclaration","scope":50,"src":"1237:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:0"},"returnParameters":{"id":29,"nodeType":"ParameterList","parameters":[],"src":"1259:0:0"},"scope":147,"src":"1225:187:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":57,"nodeType":"Block","src":"1521:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":53,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"1531:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":55,"nodeType":"ExpressionStatement","src":"1531:13:0"},{"id":56,"nodeType":"PlaceholderStatement","src":"1554:1:0"}]},"documentation":{"id":51,"nodeType":"StructuredDocumentation","src":"1418:77:0","text":" @dev Throws if called by any account other than the owner."},"id":58,"name":"onlyOwner","nameLocation":"1509:9:0","nodeType":"ModifierDefinition","parameters":{"id":52,"nodeType":"ParameterList","parameters":[],"src":"1518:2:0"},"src":"1500:62:0","virtual":false,"visibility":"internal"},{"body":{"id":66,"nodeType":"Block","src":"1693:30:0","statements":[{"expression":{"id":64,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"1710:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":63,"id":65,"nodeType":"Return","src":"1703:13:0"}]},"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"1568:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":67,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:0","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"1652:2:0"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":67,"src":"1684:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:0"},"scope":147,"src":"1638:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":83,"nodeType":"Block","src":"1841:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":71,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"1855:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":73,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"1866:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":74,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":82,"nodeType":"IfStatement","src":"1851:101:0","trueBody":{"id":81,"nodeType":"Block","src":"1880:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":77,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"1928:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1901:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":79,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":80,"nodeType":"RevertStatement","src":"1894:47:0"}]}}]},"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"1729:62:0","text":" @dev Throws if the sender is not the owner."},"id":84,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:0","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[],"src":"1816:2:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"1841:0:0"},"scope":147,"src":"1796:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":97,"nodeType":"Block","src":"2347:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":93,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":92,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":91,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:0","typeDescriptions":{}}},"id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":90,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2357:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":96,"nodeType":"ExpressionStatement","src":"2357:30:0"}]},"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"1964:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":98,"implemented":true,"kind":"function","modifiers":[{"id":88,"kind":"modifierInvocation","modifierName":{"id":87,"name":"onlyOwner","nameLocations":["2337:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2337:9:0"},"nodeType":"ModifierInvocation","src":"2337:9:0"}],"name":"renounceOwnership","nameLocation":"2302:17:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"2319:2:0"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"2347:0:0"},"scope":147,"src":"2293:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":125,"nodeType":"Block","src":"2613:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":106,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2627:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:0","typeDescriptions":{}}},"id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2623:91:0","trueBody":{"id":119,"nodeType":"Block","src":"2651:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:0","typeDescriptions":{}}},"id":116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":112,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"2672:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":118,"nodeType":"RevertStatement","src":"2665:38:0"}]}},{"expression":{"arguments":[{"id":122,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2742:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":121,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2723:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":124,"nodeType":"ExpressionStatement","src":"2723:28:0"}]},"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"2400:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":126,"implemented":true,"kind":"function","modifiers":[{"id":104,"kind":"modifierInvocation","modifierName":{"id":103,"name":"onlyOwner","nameLocations":["2603:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2603:9:0"},"nodeType":"ModifierInvocation","src":"2603:9:0"}],"name":"transferOwnership","nameLocation":"2552:17:0","nodeType":"FunctionDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:0","nodeType":"VariableDeclaration","scope":126,"src":"2570:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:0"},"returnParameters":{"id":105,"nodeType":"ParameterList","parameters":[],"src":"2613:0:0"},"scope":147,"src":"2543:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":145,"nodeType":"Block","src":"2975:124:0","statements":[{"assignments":[133],"declarations":[{"constant":false,"id":133,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:0","nodeType":"VariableDeclaration","scope":145,"src":"2985:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":135,"initialValue":{"id":134,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3004:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:0"},{"expression":{"id":138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":136,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3020:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":137,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3029:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":139,"nodeType":"ExpressionStatement","src":"3020:17:0"},{"eventCall":{"arguments":[{"id":141,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"3073:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":142,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3083:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":140,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3052:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":144,"nodeType":"EmitStatement","src":"3047:45:0"}]},"documentation":{"id":127,"nodeType":"StructuredDocumentation","src":"2764:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":146,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:0","nodeType":"FunctionDefinition","parameters":{"id":130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":129,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:0","nodeType":"VariableDeclaration","scope":146,"src":"2940:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:0"},"returnParameters":{"id":131,"nodeType":"ParameterList","parameters":[],"src":"2975:0:0"},"scope":147,"src":"2912:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":148,"src":"663:2438:0","usedErrors":[13,18],"usedEvents":[24]}],"src":"102:3000:0"},"id":0},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[284],"IERC20Errors":[189],"IERC721Errors":[237]},"id":285,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":149,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":150,"nodeType":"StructuredDocumentation","src":"138:141:1","text":" @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."},"fullyImplemented":true,"id":189,"linearizedBaseContracts":[189],"name":"IERC20Errors","nameLocation":"290:12:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":151,"nodeType":"StructuredDocumentation","src":"309:309:1","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":159,"name":"ERC20InsufficientBalance","nameLocation":"629:24:1","nodeType":"ErrorDefinition","parameters":{"id":158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":153,"mutability":"mutable","name":"sender","nameLocation":"662:6:1","nodeType":"VariableDeclaration","scope":159,"src":"654:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":152,"name":"address","nodeType":"ElementaryTypeName","src":"654:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":155,"mutability":"mutable","name":"balance","nameLocation":"678:7:1","nodeType":"VariableDeclaration","scope":159,"src":"670:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":154,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":157,"mutability":"mutable","name":"needed","nameLocation":"695:6:1","nodeType":"VariableDeclaration","scope":159,"src":"687:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":156,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"653:49:1"},"src":"623:80:1"},{"documentation":{"id":160,"nodeType":"StructuredDocumentation","src":"709:152:1","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":164,"name":"ERC20InvalidSender","nameLocation":"872:18:1","nodeType":"ErrorDefinition","parameters":{"id":163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":162,"mutability":"mutable","name":"sender","nameLocation":"899:6:1","nodeType":"VariableDeclaration","scope":164,"src":"891:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":161,"name":"address","nodeType":"ElementaryTypeName","src":"891:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"890:16:1"},"src":"866:41:1"},{"documentation":{"id":165,"nodeType":"StructuredDocumentation","src":"913:159:1","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":169,"name":"ERC20InvalidReceiver","nameLocation":"1083:20:1","nodeType":"ErrorDefinition","parameters":{"id":168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":167,"mutability":"mutable","name":"receiver","nameLocation":"1112:8:1","nodeType":"VariableDeclaration","scope":169,"src":"1104:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":166,"name":"address","nodeType":"ElementaryTypeName","src":"1104:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1103:18:1"},"src":"1077:45:1"},{"documentation":{"id":170,"nodeType":"StructuredDocumentation","src":"1128:345:1","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":178,"name":"ERC20InsufficientAllowance","nameLocation":"1484:26:1","nodeType":"ErrorDefinition","parameters":{"id":177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":172,"mutability":"mutable","name":"spender","nameLocation":"1519:7:1","nodeType":"VariableDeclaration","scope":178,"src":"1511:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":171,"name":"address","nodeType":"ElementaryTypeName","src":"1511:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":174,"mutability":"mutable","name":"allowance","nameLocation":"1536:9:1","nodeType":"VariableDeclaration","scope":178,"src":"1528:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":173,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":176,"mutability":"mutable","name":"needed","nameLocation":"1555:6:1","nodeType":"VariableDeclaration","scope":178,"src":"1547:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":175,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1510:52:1"},"src":"1478:85:1"},{"documentation":{"id":179,"nodeType":"StructuredDocumentation","src":"1569:174:1","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":183,"name":"ERC20InvalidApprover","nameLocation":"1754:20:1","nodeType":"ErrorDefinition","parameters":{"id":182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":181,"mutability":"mutable","name":"approver","nameLocation":"1783:8:1","nodeType":"VariableDeclaration","scope":183,"src":"1775:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":180,"name":"address","nodeType":"ElementaryTypeName","src":"1775:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1774:18:1"},"src":"1748:45:1"},{"documentation":{"id":184,"nodeType":"StructuredDocumentation","src":"1799:195:1","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":188,"name":"ERC20InvalidSpender","nameLocation":"2005:19:1","nodeType":"ErrorDefinition","parameters":{"id":187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":186,"mutability":"mutable","name":"spender","nameLocation":"2033:7:1","nodeType":"VariableDeclaration","scope":188,"src":"2025:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":185,"name":"address","nodeType":"ElementaryTypeName","src":"2025:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2024:17:1"},"src":"1999:43:1"}],"scope":285,"src":"280:1764:1","usedErrors":[159,164,169,178,183,188],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":190,"nodeType":"StructuredDocumentation","src":"2046:143:1","text":" @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."},"fullyImplemented":true,"id":237,"linearizedBaseContracts":[237],"name":"IERC721Errors","nameLocation":"2200:13:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":191,"nodeType":"StructuredDocumentation","src":"2220:219:1","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":195,"name":"ERC721InvalidOwner","nameLocation":"2450:18:1","nodeType":"ErrorDefinition","parameters":{"id":194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":193,"mutability":"mutable","name":"owner","nameLocation":"2477:5:1","nodeType":"VariableDeclaration","scope":195,"src":"2469:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":192,"name":"address","nodeType":"ElementaryTypeName","src":"2469:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2468:15:1"},"src":"2444:40:1"},{"documentation":{"id":196,"nodeType":"StructuredDocumentation","src":"2490:132:1","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":200,"name":"ERC721NonexistentToken","nameLocation":"2633:22:1","nodeType":"ErrorDefinition","parameters":{"id":199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":198,"mutability":"mutable","name":"tokenId","nameLocation":"2664:7:1","nodeType":"VariableDeclaration","scope":200,"src":"2656:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":197,"name":"uint256","nodeType":"ElementaryTypeName","src":"2656:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2655:17:1"},"src":"2627:46:1"},{"documentation":{"id":201,"nodeType":"StructuredDocumentation","src":"2679:289:1","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":209,"name":"ERC721IncorrectOwner","nameLocation":"2979:20:1","nodeType":"ErrorDefinition","parameters":{"id":208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":203,"mutability":"mutable","name":"sender","nameLocation":"3008:6:1","nodeType":"VariableDeclaration","scope":209,"src":"3000:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":202,"name":"address","nodeType":"ElementaryTypeName","src":"3000:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":205,"mutability":"mutable","name":"tokenId","nameLocation":"3024:7:1","nodeType":"VariableDeclaration","scope":209,"src":"3016:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":204,"name":"uint256","nodeType":"ElementaryTypeName","src":"3016:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":207,"mutability":"mutable","name":"owner","nameLocation":"3041:5:1","nodeType":"VariableDeclaration","scope":209,"src":"3033:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":206,"name":"address","nodeType":"ElementaryTypeName","src":"3033:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2999:48:1"},"src":"2973:75:1"},{"documentation":{"id":210,"nodeType":"StructuredDocumentation","src":"3054:152:1","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":214,"name":"ERC721InvalidSender","nameLocation":"3217:19:1","nodeType":"ErrorDefinition","parameters":{"id":213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":212,"mutability":"mutable","name":"sender","nameLocation":"3245:6:1","nodeType":"VariableDeclaration","scope":214,"src":"3237:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":211,"name":"address","nodeType":"ElementaryTypeName","src":"3237:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3236:16:1"},"src":"3211:42:1"},{"documentation":{"id":215,"nodeType":"StructuredDocumentation","src":"3259:159:1","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":219,"name":"ERC721InvalidReceiver","nameLocation":"3429:21:1","nodeType":"ErrorDefinition","parameters":{"id":218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":217,"mutability":"mutable","name":"receiver","nameLocation":"3459:8:1","nodeType":"VariableDeclaration","scope":219,"src":"3451:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":216,"name":"address","nodeType":"ElementaryTypeName","src":"3451:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3450:18:1"},"src":"3423:46:1"},{"documentation":{"id":220,"nodeType":"StructuredDocumentation","src":"3475:247:1","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":226,"name":"ERC721InsufficientApproval","nameLocation":"3733:26:1","nodeType":"ErrorDefinition","parameters":{"id":225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":222,"mutability":"mutable","name":"operator","nameLocation":"3768:8:1","nodeType":"VariableDeclaration","scope":226,"src":"3760:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":221,"name":"address","nodeType":"ElementaryTypeName","src":"3760:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":224,"mutability":"mutable","name":"tokenId","nameLocation":"3786:7:1","nodeType":"VariableDeclaration","scope":226,"src":"3778:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":223,"name":"uint256","nodeType":"ElementaryTypeName","src":"3778:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3759:35:1"},"src":"3727:68:1"},{"documentation":{"id":227,"nodeType":"StructuredDocumentation","src":"3801:174:1","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":231,"name":"ERC721InvalidApprover","nameLocation":"3986:21:1","nodeType":"ErrorDefinition","parameters":{"id":230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":229,"mutability":"mutable","name":"approver","nameLocation":"4016:8:1","nodeType":"VariableDeclaration","scope":231,"src":"4008:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":228,"name":"address","nodeType":"ElementaryTypeName","src":"4008:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4007:18:1"},"src":"3980:46:1"},{"documentation":{"id":232,"nodeType":"StructuredDocumentation","src":"4032:197:1","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":236,"name":"ERC721InvalidOperator","nameLocation":"4240:21:1","nodeType":"ErrorDefinition","parameters":{"id":235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":234,"mutability":"mutable","name":"operator","nameLocation":"4270:8:1","nodeType":"VariableDeclaration","scope":236,"src":"4262:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":233,"name":"address","nodeType":"ElementaryTypeName","src":"4262:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4261:18:1"},"src":"4234:46:1"}],"scope":285,"src":"2190:2092:1","usedErrors":[195,200,209,214,219,226,231,236],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":238,"nodeType":"StructuredDocumentation","src":"4284:145:1","text":" @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."},"fullyImplemented":true,"id":284,"linearizedBaseContracts":[284],"name":"IERC1155Errors","nameLocation":"4440:14:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":239,"nodeType":"StructuredDocumentation","src":"4461:361:1","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":249,"name":"ERC1155InsufficientBalance","nameLocation":"4833:26:1","nodeType":"ErrorDefinition","parameters":{"id":248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":241,"mutability":"mutable","name":"sender","nameLocation":"4868:6:1","nodeType":"VariableDeclaration","scope":249,"src":"4860:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":240,"name":"address","nodeType":"ElementaryTypeName","src":"4860:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":243,"mutability":"mutable","name":"balance","nameLocation":"4884:7:1","nodeType":"VariableDeclaration","scope":249,"src":"4876:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":242,"name":"uint256","nodeType":"ElementaryTypeName","src":"4876:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":245,"mutability":"mutable","name":"needed","nameLocation":"4901:6:1","nodeType":"VariableDeclaration","scope":249,"src":"4893:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":244,"name":"uint256","nodeType":"ElementaryTypeName","src":"4893:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":247,"mutability":"mutable","name":"tokenId","nameLocation":"4917:7:1","nodeType":"VariableDeclaration","scope":249,"src":"4909:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":246,"name":"uint256","nodeType":"ElementaryTypeName","src":"4909:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4859:66:1"},"src":"4827:99:1"},{"documentation":{"id":250,"nodeType":"StructuredDocumentation","src":"4932:152:1","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":254,"name":"ERC1155InvalidSender","nameLocation":"5095:20:1","nodeType":"ErrorDefinition","parameters":{"id":253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":252,"mutability":"mutable","name":"sender","nameLocation":"5124:6:1","nodeType":"VariableDeclaration","scope":254,"src":"5116:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":251,"name":"address","nodeType":"ElementaryTypeName","src":"5116:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5115:16:1"},"src":"5089:43:1"},{"documentation":{"id":255,"nodeType":"StructuredDocumentation","src":"5138:159:1","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":259,"name":"ERC1155InvalidReceiver","nameLocation":"5308:22:1","nodeType":"ErrorDefinition","parameters":{"id":258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":257,"mutability":"mutable","name":"receiver","nameLocation":"5339:8:1","nodeType":"VariableDeclaration","scope":259,"src":"5331:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":256,"name":"address","nodeType":"ElementaryTypeName","src":"5331:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5330:18:1"},"src":"5302:47:1"},{"documentation":{"id":260,"nodeType":"StructuredDocumentation","src":"5355:256:1","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":266,"name":"ERC1155MissingApprovalForAll","nameLocation":"5622:28:1","nodeType":"ErrorDefinition","parameters":{"id":265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":262,"mutability":"mutable","name":"operator","nameLocation":"5659:8:1","nodeType":"VariableDeclaration","scope":266,"src":"5651:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":261,"name":"address","nodeType":"ElementaryTypeName","src":"5651:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":264,"mutability":"mutable","name":"owner","nameLocation":"5677:5:1","nodeType":"VariableDeclaration","scope":266,"src":"5669:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":263,"name":"address","nodeType":"ElementaryTypeName","src":"5669:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5650:33:1"},"src":"5616:68:1"},{"documentation":{"id":267,"nodeType":"StructuredDocumentation","src":"5690:174:1","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":271,"name":"ERC1155InvalidApprover","nameLocation":"5875:22:1","nodeType":"ErrorDefinition","parameters":{"id":270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":269,"mutability":"mutable","name":"approver","nameLocation":"5906:8:1","nodeType":"VariableDeclaration","scope":271,"src":"5898:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":268,"name":"address","nodeType":"ElementaryTypeName","src":"5898:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5897:18:1"},"src":"5869:47:1"},{"documentation":{"id":272,"nodeType":"StructuredDocumentation","src":"5922:197:1","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":276,"name":"ERC1155InvalidOperator","nameLocation":"6130:22:1","nodeType":"ErrorDefinition","parameters":{"id":275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":274,"mutability":"mutable","name":"operator","nameLocation":"6161:8:1","nodeType":"VariableDeclaration","scope":276,"src":"6153:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":273,"name":"address","nodeType":"ElementaryTypeName","src":"6153:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6152:18:1"},"src":"6124:47:1"},{"documentation":{"id":277,"nodeType":"StructuredDocumentation","src":"6177:280:1","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":283,"name":"ERC1155InvalidArrayLength","nameLocation":"6468:25:1","nodeType":"ErrorDefinition","parameters":{"id":282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":279,"mutability":"mutable","name":"idsLength","nameLocation":"6502:9:1","nodeType":"VariableDeclaration","scope":283,"src":"6494:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":278,"name":"uint256","nodeType":"ElementaryTypeName","src":"6494:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":281,"mutability":"mutable","name":"valuesLength","nameLocation":"6521:12:1","nodeType":"VariableDeclaration","scope":283,"src":"6513:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":280,"name":"uint256","nodeType":"ElementaryTypeName","src":"6513:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6493:41:1"},"src":"6462:73:1"}],"scope":285,"src":"4430:2107:1","usedErrors":[249,254,259,266,271,276,283],"usedEvents":[]}],"src":"112:6426:1"},"id":1},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[933],"ERC20":[799],"IERC20":[877],"IERC20Errors":[189],"IERC20Metadata":[903]},"id":800,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":286,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:2"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":288,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":800,"sourceUnit":878,"src":"131:36:2","symbolAliases":[{"foreign":{"id":287,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":877,"src":"139:6:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":290,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":800,"sourceUnit":904,"src":"168:63:2","symbolAliases":[{"foreign":{"id":289,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":903,"src":"176:14:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":292,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":800,"sourceUnit":934,"src":"232:48:2","symbolAliases":[{"foreign":{"id":291,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":933,"src":"240:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":294,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":800,"sourceUnit":285,"src":"281:65:2","symbolAliases":[{"foreign":{"id":293,"name":"IERC20Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":189,"src":"289:12:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":296,"name":"Context","nameLocations":["1133:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":933,"src":"1133:7:2"},"id":297,"nodeType":"InheritanceSpecifier","src":"1133:7:2"},{"baseName":{"id":298,"name":"IERC20","nameLocations":["1142:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":877,"src":"1142:6:2"},"id":299,"nodeType":"InheritanceSpecifier","src":"1142:6:2"},{"baseName":{"id":300,"name":"IERC20Metadata","nameLocations":["1150:14:2"],"nodeType":"IdentifierPath","referencedDeclaration":903,"src":"1150:14:2"},"id":301,"nodeType":"InheritanceSpecifier","src":"1150:14:2"},{"baseName":{"id":302,"name":"IERC20Errors","nameLocations":["1166:12:2"],"nodeType":"IdentifierPath","referencedDeclaration":189,"src":"1166:12:2"},"id":303,"nodeType":"InheritanceSpecifier","src":"1166:12:2"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":295,"nodeType":"StructuredDocumentation","src":"348:757:2","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."},"fullyImplemented":true,"id":799,"linearizedBaseContracts":[799,189,903,877,933],"name":"ERC20","nameLocation":"1124:5:2","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":307,"mutability":"mutable","name":"_balances","nameLocation":"1229:9:2","nodeType":"VariableDeclaration","scope":799,"src":"1185:53:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":306,"keyName":"account","keyNameLocation":"1201:7:2","keyType":{"id":304,"name":"address","nodeType":"ElementaryTypeName","src":"1193:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1185:35:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":305,"name":"uint256","nodeType":"ElementaryTypeName","src":"1212:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":313,"mutability":"mutable","name":"_allowances","nameLocation":"1317:11:2","nodeType":"VariableDeclaration","scope":799,"src":"1245:83:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":312,"keyName":"account","keyNameLocation":"1261:7:2","keyType":{"id":308,"name":"address","nodeType":"ElementaryTypeName","src":"1253:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1245:63:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":311,"keyName":"spender","keyNameLocation":"1288:7:2","keyType":{"id":309,"name":"address","nodeType":"ElementaryTypeName","src":"1280:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1272:35:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":310,"name":"uint256","nodeType":"ElementaryTypeName","src":"1299:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":315,"mutability":"mutable","name":"_totalSupply","nameLocation":"1351:12:2","nodeType":"VariableDeclaration","scope":799,"src":"1335:28:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":314,"name":"uint256","nodeType":"ElementaryTypeName","src":"1335:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":317,"mutability":"mutable","name":"_name","nameLocation":"1385:5:2","nodeType":"VariableDeclaration","scope":799,"src":"1370:20:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":316,"name":"string","nodeType":"ElementaryTypeName","src":"1370:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":319,"mutability":"mutable","name":"_symbol","nameLocation":"1411:7:2","nodeType":"VariableDeclaration","scope":799,"src":"1396:22:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":318,"name":"string","nodeType":"ElementaryTypeName","src":"1396:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":335,"nodeType":"Block","src":"1657:57:2","statements":[{"expression":{"id":329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":327,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"1667:5:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":328,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":322,"src":"1675:5:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1667:13:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":330,"nodeType":"ExpressionStatement","src":"1667:13:2"},{"expression":{"id":333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":331,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":319,"src":"1690:7:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":332,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":324,"src":"1700:7:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1690:17:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":334,"nodeType":"ExpressionStatement","src":"1690:17:2"}]},"documentation":{"id":320,"nodeType":"StructuredDocumentation","src":"1425:171:2","text":" @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."},"id":336,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":322,"mutability":"mutable","name":"name_","nameLocation":"1627:5:2","nodeType":"VariableDeclaration","scope":336,"src":"1613:19:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":321,"name":"string","nodeType":"ElementaryTypeName","src":"1613:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":324,"mutability":"mutable","name":"symbol_","nameLocation":"1648:7:2","nodeType":"VariableDeclaration","scope":336,"src":"1634:21:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":323,"name":"string","nodeType":"ElementaryTypeName","src":"1634:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1612:44:2"},"returnParameters":{"id":326,"nodeType":"ParameterList","parameters":[],"src":"1657:0:2"},"scope":799,"src":"1601:113:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[890],"body":{"id":344,"nodeType":"Block","src":"1839:29:2","statements":[{"expression":{"id":342,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":317,"src":"1856:5:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":341,"id":343,"nodeType":"Return","src":"1849:12:2"}]},"documentation":{"id":337,"nodeType":"StructuredDocumentation","src":"1720:54:2","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":345,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"1788:4:2","nodeType":"FunctionDefinition","parameters":{"id":338,"nodeType":"ParameterList","parameters":[],"src":"1792:2:2"},"returnParameters":{"id":341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":340,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":345,"src":"1824:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":339,"name":"string","nodeType":"ElementaryTypeName","src":"1824:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1823:15:2"},"scope":799,"src":"1779:89:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[896],"body":{"id":353,"nodeType":"Block","src":"2043:31:2","statements":[{"expression":{"id":351,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":319,"src":"2060:7:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":350,"id":352,"nodeType":"Return","src":"2053:14:2"}]},"documentation":{"id":346,"nodeType":"StructuredDocumentation","src":"1874:102:2","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":354,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"1990:6:2","nodeType":"FunctionDefinition","parameters":{"id":347,"nodeType":"ParameterList","parameters":[],"src":"1996:2:2"},"returnParameters":{"id":350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":349,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":354,"src":"2028:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":348,"name":"string","nodeType":"ElementaryTypeName","src":"2028:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2027:15:2"},"scope":799,"src":"1981:93:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[902],"body":{"id":362,"nodeType":"Block","src":"2763:26:2","statements":[{"expression":{"hexValue":"3138","id":360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2780:2:2","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":359,"id":361,"nodeType":"Return","src":"2773:9:2"}]},"documentation":{"id":355,"nodeType":"StructuredDocumentation","src":"2080:622:2","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":363,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"2716:8:2","nodeType":"FunctionDefinition","parameters":{"id":356,"nodeType":"ParameterList","parameters":[],"src":"2724:2:2"},"returnParameters":{"id":359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":358,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":363,"src":"2756:5:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":357,"name":"uint8","nodeType":"ElementaryTypeName","src":"2756:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2755:7:2"},"scope":799,"src":"2707:82:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[826],"body":{"id":371,"nodeType":"Block","src":"2910:36:2","statements":[{"expression":{"id":369,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"2927:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":368,"id":370,"nodeType":"Return","src":"2920:19:2"}]},"documentation":{"id":364,"nodeType":"StructuredDocumentation","src":"2795:49:2","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":372,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"2858:11:2","nodeType":"FunctionDefinition","parameters":{"id":365,"nodeType":"ParameterList","parameters":[],"src":"2869:2:2"},"returnParameters":{"id":368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":367,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":372,"src":"2901:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":366,"name":"uint256","nodeType":"ElementaryTypeName","src":"2901:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2900:9:2"},"scope":799,"src":"2849:97:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[834],"body":{"id":384,"nodeType":"Block","src":"3078:42:2","statements":[{"expression":{"baseExpression":{"id":380,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":307,"src":"3095:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":382,"indexExpression":{"id":381,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":375,"src":"3105:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3095:18:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":379,"id":383,"nodeType":"Return","src":"3088:25:2"}]},"documentation":{"id":373,"nodeType":"StructuredDocumentation","src":"2952:47:2","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":385,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3013:9:2","nodeType":"FunctionDefinition","parameters":{"id":376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":375,"mutability":"mutable","name":"account","nameLocation":"3031:7:2","nodeType":"VariableDeclaration","scope":385,"src":"3023:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":374,"name":"address","nodeType":"ElementaryTypeName","src":"3023:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3022:17:2"},"returnParameters":{"id":379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":378,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":385,"src":"3069:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":377,"name":"uint256","nodeType":"ElementaryTypeName","src":"3069:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3068:9:2"},"scope":799,"src":"3004:116:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[844],"body":{"id":408,"nodeType":"Block","src":"3390:103:2","statements":[{"assignments":[396],"declarations":[{"constant":false,"id":396,"mutability":"mutable","name":"owner","nameLocation":"3408:5:2","nodeType":"VariableDeclaration","scope":408,"src":"3400:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":395,"name":"address","nodeType":"ElementaryTypeName","src":"3400:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":399,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":397,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"3416:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3416:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3400:28:2"},{"expression":{"arguments":[{"id":401,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":396,"src":"3448:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":402,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"3455:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":403,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":390,"src":"3459:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":400,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"3438:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3438:27:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":405,"nodeType":"ExpressionStatement","src":"3438:27:2"},{"expression":{"hexValue":"74727565","id":406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3482:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":394,"id":407,"nodeType":"Return","src":"3475:11:2"}]},"documentation":{"id":386,"nodeType":"StructuredDocumentation","src":"3126:184:2","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."},"functionSelector":"a9059cbb","id":409,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3324:8:2","nodeType":"FunctionDefinition","parameters":{"id":391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":388,"mutability":"mutable","name":"to","nameLocation":"3341:2:2","nodeType":"VariableDeclaration","scope":409,"src":"3333:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":387,"name":"address","nodeType":"ElementaryTypeName","src":"3333:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":390,"mutability":"mutable","name":"value","nameLocation":"3353:5:2","nodeType":"VariableDeclaration","scope":409,"src":"3345:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":389,"name":"uint256","nodeType":"ElementaryTypeName","src":"3345:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3332:27:2"},"returnParameters":{"id":394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":393,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":409,"src":"3384:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":392,"name":"bool","nodeType":"ElementaryTypeName","src":"3384:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3383:6:2"},"scope":799,"src":"3315:178:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[854],"body":{"id":425,"nodeType":"Block","src":"3640:51:2","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":419,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":313,"src":"3657:11:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":421,"indexExpression":{"id":420,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":412,"src":"3669:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3657:18:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":423,"indexExpression":{"id":422,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":414,"src":"3676:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3657:27:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":418,"id":424,"nodeType":"Return","src":"3650:34:2"}]},"documentation":{"id":410,"nodeType":"StructuredDocumentation","src":"3499:47:2","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":426,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3560:9:2","nodeType":"FunctionDefinition","parameters":{"id":415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":412,"mutability":"mutable","name":"owner","nameLocation":"3578:5:2","nodeType":"VariableDeclaration","scope":426,"src":"3570:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":411,"name":"address","nodeType":"ElementaryTypeName","src":"3570:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":414,"mutability":"mutable","name":"spender","nameLocation":"3593:7:2","nodeType":"VariableDeclaration","scope":426,"src":"3585:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":413,"name":"address","nodeType":"ElementaryTypeName","src":"3585:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3569:32:2"},"returnParameters":{"id":418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":417,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":426,"src":"3631:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":416,"name":"uint256","nodeType":"ElementaryTypeName","src":"3631:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3630:9:2"},"scope":799,"src":"3551:140:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[864],"body":{"id":449,"nodeType":"Block","src":"4077:107:2","statements":[{"assignments":[437],"declarations":[{"constant":false,"id":437,"mutability":"mutable","name":"owner","nameLocation":"4095:5:2","nodeType":"VariableDeclaration","scope":449,"src":"4087:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":436,"name":"address","nodeType":"ElementaryTypeName","src":"4087:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":440,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":438,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"4103:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4103:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4087:28:2"},{"expression":{"arguments":[{"id":442,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":437,"src":"4134:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":443,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":429,"src":"4141:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":444,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":431,"src":"4150:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":441,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[690,750],"referencedDeclaration":690,"src":"4125:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4125:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":446,"nodeType":"ExpressionStatement","src":"4125:31:2"},{"expression":{"hexValue":"74727565","id":447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4173:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":435,"id":448,"nodeType":"Return","src":"4166:11:2"}]},"documentation":{"id":427,"nodeType":"StructuredDocumentation","src":"3697:296:2","text":" @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":450,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4007:7:2","nodeType":"FunctionDefinition","parameters":{"id":432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":429,"mutability":"mutable","name":"spender","nameLocation":"4023:7:2","nodeType":"VariableDeclaration","scope":450,"src":"4015:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":428,"name":"address","nodeType":"ElementaryTypeName","src":"4015:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":431,"mutability":"mutable","name":"value","nameLocation":"4040:5:2","nodeType":"VariableDeclaration","scope":450,"src":"4032:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":430,"name":"uint256","nodeType":"ElementaryTypeName","src":"4032:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4014:32:2"},"returnParameters":{"id":435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":434,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":450,"src":"4071:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":433,"name":"bool","nodeType":"ElementaryTypeName","src":"4071:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4070:6:2"},"scope":799,"src":"3998:186:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[876],"body":{"id":481,"nodeType":"Block","src":"4869:151:2","statements":[{"assignments":[463],"declarations":[{"constant":false,"id":463,"mutability":"mutable","name":"spender","nameLocation":"4887:7:2","nodeType":"VariableDeclaration","scope":481,"src":"4879:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":462,"name":"address","nodeType":"ElementaryTypeName","src":"4879:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":466,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":464,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"4897:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4897:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4879:30:2"},{"expression":{"arguments":[{"id":468,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":453,"src":"4935:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":469,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":463,"src":"4941:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":470,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":457,"src":"4950:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":467,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":798,"src":"4919:15:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4919:37:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":472,"nodeType":"ExpressionStatement","src":"4919:37:2"},{"expression":{"arguments":[{"id":474,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":453,"src":"4976:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":475,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":455,"src":"4982:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":476,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":457,"src":"4986:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":473,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"4966:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4966:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":478,"nodeType":"ExpressionStatement","src":"4966:26:2"},{"expression":{"hexValue":"74727565","id":479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5009:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":461,"id":480,"nodeType":"Return","src":"5002:11:2"}]},"documentation":{"id":451,"nodeType":"StructuredDocumentation","src":"4190:581:2","text":" @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."},"functionSelector":"23b872dd","id":482,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"4785:12:2","nodeType":"FunctionDefinition","parameters":{"id":458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":453,"mutability":"mutable","name":"from","nameLocation":"4806:4:2","nodeType":"VariableDeclaration","scope":482,"src":"4798:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":452,"name":"address","nodeType":"ElementaryTypeName","src":"4798:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":455,"mutability":"mutable","name":"to","nameLocation":"4820:2:2","nodeType":"VariableDeclaration","scope":482,"src":"4812:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":454,"name":"address","nodeType":"ElementaryTypeName","src":"4812:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":457,"mutability":"mutable","name":"value","nameLocation":"4832:5:2","nodeType":"VariableDeclaration","scope":482,"src":"4824:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":456,"name":"uint256","nodeType":"ElementaryTypeName","src":"4824:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4797:41:2"},"returnParameters":{"id":461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":460,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":482,"src":"4863:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":459,"name":"bool","nodeType":"ElementaryTypeName","src":"4863:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4862:6:2"},"scope":799,"src":"4776:244:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":528,"nodeType":"Block","src":"5462:231:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":492,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":485,"src":"5476:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5492:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":494,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5484:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":493,"name":"address","nodeType":"ElementaryTypeName","src":"5484:7:2","typeDescriptions":{}}},"id":496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5484:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5476:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":506,"nodeType":"IfStatement","src":"5472:86:2","trueBody":{"id":505,"nodeType":"Block","src":"5496:62:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5544:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":500,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5536:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":499,"name":"address","nodeType":"ElementaryTypeName","src":"5536:7:2","typeDescriptions":{}}},"id":502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5536:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":498,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":164,"src":"5517:18:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5517:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":504,"nodeType":"RevertStatement","src":"5510:37:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":507,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":487,"src":"5571:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5585:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":509,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5577:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":508,"name":"address","nodeType":"ElementaryTypeName","src":"5577:7:2","typeDescriptions":{}}},"id":511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5577:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5571:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":521,"nodeType":"IfStatement","src":"5567:86:2","trueBody":{"id":520,"nodeType":"Block","src":"5589:64:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5639:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":515,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5631:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":514,"name":"address","nodeType":"ElementaryTypeName","src":"5631:7:2","typeDescriptions":{}}},"id":517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5631:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":513,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"5610:20:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":518,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5610:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":519,"nodeType":"RevertStatement","src":"5603:39:2"}]}},{"expression":{"arguments":[{"id":523,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":485,"src":"5670:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":524,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":487,"src":"5676:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":525,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"5680:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":522,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"5662:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5662:24:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":527,"nodeType":"ExpressionStatement","src":"5662:24:2"}]},"documentation":{"id":483,"nodeType":"StructuredDocumentation","src":"5026:362:2","text":" @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":529,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"5402:9:2","nodeType":"FunctionDefinition","parameters":{"id":490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":485,"mutability":"mutable","name":"from","nameLocation":"5420:4:2","nodeType":"VariableDeclaration","scope":529,"src":"5412:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":484,"name":"address","nodeType":"ElementaryTypeName","src":"5412:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":487,"mutability":"mutable","name":"to","nameLocation":"5434:2:2","nodeType":"VariableDeclaration","scope":529,"src":"5426:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":486,"name":"address","nodeType":"ElementaryTypeName","src":"5426:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":489,"mutability":"mutable","name":"value","nameLocation":"5446:5:2","nodeType":"VariableDeclaration","scope":529,"src":"5438:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":488,"name":"uint256","nodeType":"ElementaryTypeName","src":"5438:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5411:41:2"},"returnParameters":{"id":491,"nodeType":"ParameterList","parameters":[],"src":"5462:0:2"},"scope":799,"src":"5393:300:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":605,"nodeType":"Block","src":"6083:1032:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":539,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":532,"src":"6097:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6113:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":541,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6105:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":540,"name":"address","nodeType":"ElementaryTypeName","src":"6105:7:2","typeDescriptions":{}}},"id":543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6105:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6097:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":576,"nodeType":"Block","src":"6271:362:2","statements":[{"assignments":[551],"declarations":[{"constant":false,"id":551,"mutability":"mutable","name":"fromBalance","nameLocation":"6293:11:2","nodeType":"VariableDeclaration","scope":576,"src":"6285:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":550,"name":"uint256","nodeType":"ElementaryTypeName","src":"6285:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":555,"initialValue":{"baseExpression":{"id":552,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":307,"src":"6307:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":554,"indexExpression":{"id":553,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":532,"src":"6317:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6307:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6285:37:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":556,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":551,"src":"6340:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":557,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"6354:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6340:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":566,"nodeType":"IfStatement","src":"6336:115:2","trueBody":{"id":565,"nodeType":"Block","src":"6361:90:2","statements":[{"errorCall":{"arguments":[{"id":560,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":532,"src":"6411:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":561,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":551,"src":"6417:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":562,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"6430:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":559,"name":"ERC20InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":159,"src":"6386:24:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (address,uint256,uint256) pure returns (error)"}},"id":563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6386:50:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":564,"nodeType":"RevertStatement","src":"6379:57:2"}]}},{"id":575,"nodeType":"UncheckedBlock","src":"6464:159:2","statements":[{"expression":{"id":573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":567,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":307,"src":"6571:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":569,"indexExpression":{"id":568,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":532,"src":"6581:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6571:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":570,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":551,"src":"6589:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":571,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"6603:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6589:19:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6571:37:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":574,"nodeType":"ExpressionStatement","src":"6571:37:2"}]}]},"id":577,"nodeType":"IfStatement","src":"6093:540:2","trueBody":{"id":549,"nodeType":"Block","src":"6117:148:2","statements":[{"expression":{"id":547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":545,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"6233:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":546,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"6249:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6233:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":548,"nodeType":"ExpressionStatement","src":"6233:21:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":578,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":534,"src":"6647:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6661:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":580,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6653:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":579,"name":"address","nodeType":"ElementaryTypeName","src":"6653:7:2","typeDescriptions":{}}},"id":582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6653:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6647:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":597,"nodeType":"Block","src":"6862:206:2","statements":[{"id":596,"nodeType":"UncheckedBlock","src":"6876:182:2","statements":[{"expression":{"id":594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":590,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":307,"src":"7021:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":592,"indexExpression":{"id":591,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":534,"src":"7031:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7021:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":593,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"7038:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7021:22:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":595,"nodeType":"ExpressionStatement","src":"7021:22:2"}]}]},"id":598,"nodeType":"IfStatement","src":"6643:425:2","trueBody":{"id":589,"nodeType":"Block","src":"6665:191:2","statements":[{"id":588,"nodeType":"UncheckedBlock","src":"6679:167:2","statements":[{"expression":{"id":586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":584,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":315,"src":"6810:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":585,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"6826:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6810:21:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":587,"nodeType":"ExpressionStatement","src":"6810:21:2"}]}]}},{"eventCall":{"arguments":[{"id":600,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":532,"src":"7092:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":601,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":534,"src":"7098:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":602,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"7102:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":599,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":811,"src":"7083:8:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":603,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7083:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":604,"nodeType":"EmitStatement","src":"7078:30:2"}]},"documentation":{"id":530,"nodeType":"StructuredDocumentation","src":"5699:304:2","text":" @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."},"id":606,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"6017:7:2","nodeType":"FunctionDefinition","parameters":{"id":537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":532,"mutability":"mutable","name":"from","nameLocation":"6033:4:2","nodeType":"VariableDeclaration","scope":606,"src":"6025:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":531,"name":"address","nodeType":"ElementaryTypeName","src":"6025:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":534,"mutability":"mutable","name":"to","nameLocation":"6047:2:2","nodeType":"VariableDeclaration","scope":606,"src":"6039:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":533,"name":"address","nodeType":"ElementaryTypeName","src":"6039:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":536,"mutability":"mutable","name":"value","nameLocation":"6059:5:2","nodeType":"VariableDeclaration","scope":606,"src":"6051:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":535,"name":"uint256","nodeType":"ElementaryTypeName","src":"6051:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6024:41:2"},"returnParameters":{"id":538,"nodeType":"ParameterList","parameters":[],"src":"6083:0:2"},"scope":799,"src":"6008:1107:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":638,"nodeType":"Block","src":"7514:152:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":614,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":609,"src":"7528:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7547:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":616,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7539:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":615,"name":"address","nodeType":"ElementaryTypeName","src":"7539:7:2","typeDescriptions":{}}},"id":618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7539:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7528:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":628,"nodeType":"IfStatement","src":"7524:91:2","trueBody":{"id":627,"nodeType":"Block","src":"7551:64:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7601:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":622,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7593:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":621,"name":"address","nodeType":"ElementaryTypeName","src":"7593:7:2","typeDescriptions":{}}},"id":624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7593:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":620,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"7572:20:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7572:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":626,"nodeType":"RevertStatement","src":"7565:39:2"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7640:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":631,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7632:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":630,"name":"address","nodeType":"ElementaryTypeName","src":"7632:7:2","typeDescriptions":{}}},"id":633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7632:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":634,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":609,"src":"7644:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":635,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":611,"src":"7653:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":629,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"7624:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7624:35:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":637,"nodeType":"ExpressionStatement","src":"7624:35:2"}]},"documentation":{"id":607,"nodeType":"StructuredDocumentation","src":"7121:332:2","text":" @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":639,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"7467:5:2","nodeType":"FunctionDefinition","parameters":{"id":612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":609,"mutability":"mutable","name":"account","nameLocation":"7481:7:2","nodeType":"VariableDeclaration","scope":639,"src":"7473:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":608,"name":"address","nodeType":"ElementaryTypeName","src":"7473:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":611,"mutability":"mutable","name":"value","nameLocation":"7498:5:2","nodeType":"VariableDeclaration","scope":639,"src":"7490:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":610,"name":"uint256","nodeType":"ElementaryTypeName","src":"7490:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7472:32:2"},"returnParameters":{"id":613,"nodeType":"ParameterList","parameters":[],"src":"7514:0:2"},"scope":799,"src":"7458:208:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":671,"nodeType":"Block","src":"8040:150:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":647,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":642,"src":"8054:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8073:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":649,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8065:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":648,"name":"address","nodeType":"ElementaryTypeName","src":"8065:7:2","typeDescriptions":{}}},"id":651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8065:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8054:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":661,"nodeType":"IfStatement","src":"8050:89:2","trueBody":{"id":660,"nodeType":"Block","src":"8077:62:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8125:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":655,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8117:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":654,"name":"address","nodeType":"ElementaryTypeName","src":"8117:7:2","typeDescriptions":{}}},"id":657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8117:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":653,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":164,"src":"8098:18:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8098:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":659,"nodeType":"RevertStatement","src":"8091:37:2"}]}},{"expression":{"arguments":[{"id":663,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":642,"src":"8156:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8173:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":665,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8165:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":664,"name":"address","nodeType":"ElementaryTypeName","src":"8165:7:2","typeDescriptions":{}}},"id":667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8165:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":668,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":644,"src":"8177:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":662,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":606,"src":"8148:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":669,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8148:35:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":670,"nodeType":"ExpressionStatement","src":"8148:35:2"}]},"documentation":{"id":640,"nodeType":"StructuredDocumentation","src":"7672:307:2","text":" @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"},"id":672,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"7993:5:2","nodeType":"FunctionDefinition","parameters":{"id":645,"nodeType":"ParameterList","parameters":[{"constant":false,"id":642,"mutability":"mutable","name":"account","nameLocation":"8007:7:2","nodeType":"VariableDeclaration","scope":672,"src":"7999:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":641,"name":"address","nodeType":"ElementaryTypeName","src":"7999:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":644,"mutability":"mutable","name":"value","nameLocation":"8024:5:2","nodeType":"VariableDeclaration","scope":672,"src":"8016:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":643,"name":"uint256","nodeType":"ElementaryTypeName","src":"8016:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7998:32:2"},"returnParameters":{"id":646,"nodeType":"ParameterList","parameters":[],"src":"8040:0:2"},"scope":799,"src":"7984:206:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":689,"nodeType":"Block","src":"8800:54:2","statements":[{"expression":{"arguments":[{"id":683,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":675,"src":"8819:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":684,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":677,"src":"8826:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":685,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":679,"src":"8835:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8842:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":682,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[690,750],"referencedDeclaration":750,"src":"8810:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8810:37:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":688,"nodeType":"ExpressionStatement","src":"8810:37:2"}]},"documentation":{"id":673,"nodeType":"StructuredDocumentation","src":"8196:525:2","text":" @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":690,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"8735:8:2","nodeType":"FunctionDefinition","parameters":{"id":680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":675,"mutability":"mutable","name":"owner","nameLocation":"8752:5:2","nodeType":"VariableDeclaration","scope":690,"src":"8744:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":674,"name":"address","nodeType":"ElementaryTypeName","src":"8744:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":677,"mutability":"mutable","name":"spender","nameLocation":"8767:7:2","nodeType":"VariableDeclaration","scope":690,"src":"8759:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":676,"name":"address","nodeType":"ElementaryTypeName","src":"8759:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":679,"mutability":"mutable","name":"value","nameLocation":"8784:5:2","nodeType":"VariableDeclaration","scope":690,"src":"8776:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":678,"name":"uint256","nodeType":"ElementaryTypeName","src":"8776:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8743:47:2"},"returnParameters":{"id":681,"nodeType":"ParameterList","parameters":[],"src":"8800:0:2"},"scope":799,"src":"8726:128:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":749,"nodeType":"Block","src":"9799:334:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":702,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":693,"src":"9813:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9830:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":704,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9822:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":703,"name":"address","nodeType":"ElementaryTypeName","src":"9822:7:2","typeDescriptions":{}}},"id":706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9822:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9813:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":716,"nodeType":"IfStatement","src":"9809:89:2","trueBody":{"id":715,"nodeType":"Block","src":"9834:64:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9884:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":710,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9876:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":709,"name":"address","nodeType":"ElementaryTypeName","src":"9876:7:2","typeDescriptions":{}}},"id":712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9876:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":708,"name":"ERC20InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":183,"src":"9855:20:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9855:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":714,"nodeType":"RevertStatement","src":"9848:39:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":717,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":695,"src":"9911:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9930:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":719,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9922:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":718,"name":"address","nodeType":"ElementaryTypeName","src":"9922:7:2","typeDescriptions":{}}},"id":721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9922:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9911:21:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":731,"nodeType":"IfStatement","src":"9907:90:2","trueBody":{"id":730,"nodeType":"Block","src":"9934:63:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9983:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":725,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9975:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":724,"name":"address","nodeType":"ElementaryTypeName","src":"9975:7:2","typeDescriptions":{}}},"id":727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9975:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":723,"name":"ERC20InvalidSpender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":188,"src":"9955:19:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9955:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":729,"nodeType":"RevertStatement","src":"9948:38:2"}]}},{"expression":{"id":738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":732,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":313,"src":"10006:11:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":735,"indexExpression":{"id":733,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":693,"src":"10018:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10006:18:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":736,"indexExpression":{"id":734,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":695,"src":"10025:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10006:27:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":737,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":697,"src":"10036:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10006:35:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":739,"nodeType":"ExpressionStatement","src":"10006:35:2"},{"condition":{"id":740,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":699,"src":"10055:9:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":748,"nodeType":"IfStatement","src":"10051:76:2","trueBody":{"id":747,"nodeType":"Block","src":"10066:61:2","statements":[{"eventCall":{"arguments":[{"id":742,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":693,"src":"10094:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":743,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":695,"src":"10101:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":744,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":697,"src":"10110:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":741,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":820,"src":"10085:8:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10085:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":746,"nodeType":"EmitStatement","src":"10080:36:2"}]}}]},"documentation":{"id":691,"nodeType":"StructuredDocumentation","src":"8860:836:2","text":" @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."},"id":750,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"9710:8:2","nodeType":"FunctionDefinition","parameters":{"id":700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":693,"mutability":"mutable","name":"owner","nameLocation":"9727:5:2","nodeType":"VariableDeclaration","scope":750,"src":"9719:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":692,"name":"address","nodeType":"ElementaryTypeName","src":"9719:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":695,"mutability":"mutable","name":"spender","nameLocation":"9742:7:2","nodeType":"VariableDeclaration","scope":750,"src":"9734:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":694,"name":"address","nodeType":"ElementaryTypeName","src":"9734:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":697,"mutability":"mutable","name":"value","nameLocation":"9759:5:2","nodeType":"VariableDeclaration","scope":750,"src":"9751:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":696,"name":"uint256","nodeType":"ElementaryTypeName","src":"9751:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":699,"mutability":"mutable","name":"emitEvent","nameLocation":"9771:9:2","nodeType":"VariableDeclaration","scope":750,"src":"9766:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":698,"name":"bool","nodeType":"ElementaryTypeName","src":"9766:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9718:63:2"},"returnParameters":{"id":701,"nodeType":"ParameterList","parameters":[],"src":"9799:0:2"},"scope":799,"src":"9701:432:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":797,"nodeType":"Block","src":"10504:387:2","statements":[{"assignments":[761],"declarations":[{"constant":false,"id":761,"mutability":"mutable","name":"currentAllowance","nameLocation":"10522:16:2","nodeType":"VariableDeclaration","scope":797,"src":"10514:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":760,"name":"uint256","nodeType":"ElementaryTypeName","src":"10514:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":766,"initialValue":{"arguments":[{"id":763,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"10551:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":764,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"10558:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":762,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":426,"src":"10541:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10541:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10514:52:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":767,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":761,"src":"10580:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"arguments":[{"id":770,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10604:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":769,"name":"uint256","nodeType":"ElementaryTypeName","src":"10604:7:2","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":768,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10599:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10599:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":772,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10613:3:2","memberName":"max","nodeType":"MemberAccess","src":"10599:17:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10580:36:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":796,"nodeType":"IfStatement","src":"10576:309:2","trueBody":{"id":795,"nodeType":"Block","src":"10618:267:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":774,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":761,"src":"10636:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":775,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":757,"src":"10655:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10636:24:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":784,"nodeType":"IfStatement","src":"10632:130:2","trueBody":{"id":783,"nodeType":"Block","src":"10662:100:2","statements":[{"errorCall":{"arguments":[{"id":778,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"10714:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":779,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":761,"src":"10723:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":780,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":757,"src":"10741:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":777,"name":"ERC20InsufficientAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":178,"src":"10687:26:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (address,uint256,uint256) pure returns (error)"}},"id":781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10687:60:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":782,"nodeType":"RevertStatement","src":"10680:67:2"}]}},{"id":794,"nodeType":"UncheckedBlock","src":"10775:100:2","statements":[{"expression":{"arguments":[{"id":786,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"10812:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":787,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"10819:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":788,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":761,"src":"10828:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":789,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":757,"src":"10847:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10828:24:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10854:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":785,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[690,750],"referencedDeclaration":750,"src":"10803:8:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10803:57:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":793,"nodeType":"ExpressionStatement","src":"10803:57:2"}]}]}}]},"documentation":{"id":751,"nodeType":"StructuredDocumentation","src":"10139:271:2","text":" @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."},"id":798,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"10424:15:2","nodeType":"FunctionDefinition","parameters":{"id":758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":753,"mutability":"mutable","name":"owner","nameLocation":"10448:5:2","nodeType":"VariableDeclaration","scope":798,"src":"10440:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":752,"name":"address","nodeType":"ElementaryTypeName","src":"10440:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":755,"mutability":"mutable","name":"spender","nameLocation":"10463:7:2","nodeType":"VariableDeclaration","scope":798,"src":"10455:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":754,"name":"address","nodeType":"ElementaryTypeName","src":"10455:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":757,"mutability":"mutable","name":"value","nameLocation":"10480:5:2","nodeType":"VariableDeclaration","scope":798,"src":"10472:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":756,"name":"uint256","nodeType":"ElementaryTypeName","src":"10472:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10439:47:2"},"returnParameters":{"id":759,"nodeType":"ParameterList","parameters":[],"src":"10504:0:2"},"scope":799,"src":"10415:476:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":800,"src":"1106:9787:2","usedErrors":[159,164,169,178,183,188],"usedEvents":[811,820]}],"src":"105:10789:2"},"id":2},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[877]},"id":878,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":801,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:3"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":802,"nodeType":"StructuredDocumentation","src":"132:71:3","text":" @dev Interface of the ERC-20 standard as defined in the ERC."},"fullyImplemented":false,"id":877,"linearizedBaseContracts":[877],"name":"IERC20","nameLocation":"214:6:3","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":803,"nodeType":"StructuredDocumentation","src":"227:158:3","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":811,"name":"Transfer","nameLocation":"396:8:3","nodeType":"EventDefinition","parameters":{"id":810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":805,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"421:4:3","nodeType":"VariableDeclaration","scope":811,"src":"405:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":804,"name":"address","nodeType":"ElementaryTypeName","src":"405:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":807,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"443:2:3","nodeType":"VariableDeclaration","scope":811,"src":"427:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":806,"name":"address","nodeType":"ElementaryTypeName","src":"427:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":809,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"455:5:3","nodeType":"VariableDeclaration","scope":811,"src":"447:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":808,"name":"uint256","nodeType":"ElementaryTypeName","src":"447:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"404:57:3"},"src":"390:72:3"},{"anonymous":false,"documentation":{"id":812,"nodeType":"StructuredDocumentation","src":"468:148:3","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":820,"name":"Approval","nameLocation":"627:8:3","nodeType":"EventDefinition","parameters":{"id":819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":814,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"652:5:3","nodeType":"VariableDeclaration","scope":820,"src":"636:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":813,"name":"address","nodeType":"ElementaryTypeName","src":"636:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":816,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"675:7:3","nodeType":"VariableDeclaration","scope":820,"src":"659:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":815,"name":"address","nodeType":"ElementaryTypeName","src":"659:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":818,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"692:5:3","nodeType":"VariableDeclaration","scope":820,"src":"684:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":817,"name":"uint256","nodeType":"ElementaryTypeName","src":"684:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"635:63:3"},"src":"621:78:3"},{"documentation":{"id":821,"nodeType":"StructuredDocumentation","src":"705:65:3","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":826,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"784:11:3","nodeType":"FunctionDefinition","parameters":{"id":822,"nodeType":"ParameterList","parameters":[],"src":"795:2:3"},"returnParameters":{"id":825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":824,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":826,"src":"821:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":823,"name":"uint256","nodeType":"ElementaryTypeName","src":"821:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"820:9:3"},"scope":877,"src":"775:55:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":827,"nodeType":"StructuredDocumentation","src":"836:71:3","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":834,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:3","nodeType":"FunctionDefinition","parameters":{"id":830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":829,"mutability":"mutable","name":"account","nameLocation":"939:7:3","nodeType":"VariableDeclaration","scope":834,"src":"931:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":828,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:3"},"returnParameters":{"id":833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":832,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":834,"src":"971:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":831,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:3"},"scope":877,"src":"912:68:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":835,"nodeType":"StructuredDocumentation","src":"986:213:3","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":844,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1213:8:3","nodeType":"FunctionDefinition","parameters":{"id":840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":837,"mutability":"mutable","name":"to","nameLocation":"1230:2:3","nodeType":"VariableDeclaration","scope":844,"src":"1222:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":836,"name":"address","nodeType":"ElementaryTypeName","src":"1222:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":839,"mutability":"mutable","name":"value","nameLocation":"1242:5:3","nodeType":"VariableDeclaration","scope":844,"src":"1234:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":838,"name":"uint256","nodeType":"ElementaryTypeName","src":"1234:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1221:27:3"},"returnParameters":{"id":843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":842,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":844,"src":"1267:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":841,"name":"bool","nodeType":"ElementaryTypeName","src":"1267:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1266:6:3"},"scope":877,"src":"1204:69:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":845,"nodeType":"StructuredDocumentation","src":"1279:264:3","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":854,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1557:9:3","nodeType":"FunctionDefinition","parameters":{"id":850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":847,"mutability":"mutable","name":"owner","nameLocation":"1575:5:3","nodeType":"VariableDeclaration","scope":854,"src":"1567:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":846,"name":"address","nodeType":"ElementaryTypeName","src":"1567:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":849,"mutability":"mutable","name":"spender","nameLocation":"1590:7:3","nodeType":"VariableDeclaration","scope":854,"src":"1582:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":848,"name":"address","nodeType":"ElementaryTypeName","src":"1582:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1566:32:3"},"returnParameters":{"id":853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":852,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":854,"src":"1622:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":851,"name":"uint256","nodeType":"ElementaryTypeName","src":"1622:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1621:9:3"},"scope":877,"src":"1548:83:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":855,"nodeType":"StructuredDocumentation","src":"1637:667:3","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":864,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2318:7:3","nodeType":"FunctionDefinition","parameters":{"id":860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":857,"mutability":"mutable","name":"spender","nameLocation":"2334:7:3","nodeType":"VariableDeclaration","scope":864,"src":"2326:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":856,"name":"address","nodeType":"ElementaryTypeName","src":"2326:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":859,"mutability":"mutable","name":"value","nameLocation":"2351:5:3","nodeType":"VariableDeclaration","scope":864,"src":"2343:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":858,"name":"uint256","nodeType":"ElementaryTypeName","src":"2343:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2325:32:3"},"returnParameters":{"id":863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":862,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":864,"src":"2376:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":861,"name":"bool","nodeType":"ElementaryTypeName","src":"2376:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2375:6:3"},"scope":877,"src":"2309:73:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":865,"nodeType":"StructuredDocumentation","src":"2388:297:3","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":876,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2699:12:3","nodeType":"FunctionDefinition","parameters":{"id":872,"nodeType":"ParameterList","parameters":[{"constant":false,"id":867,"mutability":"mutable","name":"from","nameLocation":"2720:4:3","nodeType":"VariableDeclaration","scope":876,"src":"2712:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":866,"name":"address","nodeType":"ElementaryTypeName","src":"2712:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":869,"mutability":"mutable","name":"to","nameLocation":"2734:2:3","nodeType":"VariableDeclaration","scope":876,"src":"2726:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":868,"name":"address","nodeType":"ElementaryTypeName","src":"2726:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":871,"mutability":"mutable","name":"value","nameLocation":"2746:5:3","nodeType":"VariableDeclaration","scope":876,"src":"2738:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":870,"name":"uint256","nodeType":"ElementaryTypeName","src":"2738:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2711:41:3"},"returnParameters":{"id":875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":874,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":876,"src":"2771:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":873,"name":"bool","nodeType":"ElementaryTypeName","src":"2771:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2770:6:3"},"scope":877,"src":"2690:87:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":878,"src":"204:2575:3","usedErrors":[],"usedEvents":[811,820]}],"src":"106:2674:3"},"id":3},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[877],"IERC20Metadata":[903]},"id":904,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":879,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"125:24:4"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":881,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":904,"sourceUnit":878,"src":"151:37:4","symbolAliases":[{"foreign":{"id":880,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":877,"src":"159:6:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":883,"name":"IERC20","nameLocations":["306:6:4"],"nodeType":"IdentifierPath","referencedDeclaration":877,"src":"306:6:4"},"id":884,"nodeType":"InheritanceSpecifier","src":"306:6:4"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":882,"nodeType":"StructuredDocumentation","src":"190:87:4","text":" @dev Interface for the optional metadata functions from the ERC-20 standard."},"fullyImplemented":false,"id":903,"linearizedBaseContracts":[903,877],"name":"IERC20Metadata","nameLocation":"288:14:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":885,"nodeType":"StructuredDocumentation","src":"319:54:4","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":890,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"387:4:4","nodeType":"FunctionDefinition","parameters":{"id":886,"nodeType":"ParameterList","parameters":[],"src":"391:2:4"},"returnParameters":{"id":889,"nodeType":"ParameterList","parameters":[{"constant":false,"id":888,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":890,"src":"417:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":887,"name":"string","nodeType":"ElementaryTypeName","src":"417:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"416:15:4"},"scope":903,"src":"378:54:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":891,"nodeType":"StructuredDocumentation","src":"438:56:4","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":896,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"508:6:4","nodeType":"FunctionDefinition","parameters":{"id":892,"nodeType":"ParameterList","parameters":[],"src":"514:2:4"},"returnParameters":{"id":895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":894,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":896,"src":"540:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":893,"name":"string","nodeType":"ElementaryTypeName","src":"540:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"539:15:4"},"scope":903,"src":"499:56:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":897,"nodeType":"StructuredDocumentation","src":"561:65:4","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":902,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"640:8:4","nodeType":"FunctionDefinition","parameters":{"id":898,"nodeType":"ParameterList","parameters":[],"src":"648:2:4"},"returnParameters":{"id":901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":900,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":902,"src":"674:5:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":899,"name":"uint8","nodeType":"ElementaryTypeName","src":"674:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"673:7:4"},"scope":903,"src":"631:50:4","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":904,"src":"278:405:4","usedErrors":[],"usedEvents":[811,820]}],"src":"125:559:4"},"id":4},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[933]},"id":934,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":905,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:5"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":906,"nodeType":"StructuredDocumentation","src":"127:496:5","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":933,"linearizedBaseContracts":[933],"name":"Context","nameLocation":"642:7:5","nodeType":"ContractDefinition","nodes":[{"body":{"id":914,"nodeType":"Block","src":"718:34:5","statements":[{"expression":{"expression":{"id":911,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:5","memberName":"sender","nodeType":"MemberAccess","src":"735:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":910,"id":913,"nodeType":"Return","src":"728:17:5"}]},"id":915,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:5","nodeType":"FunctionDefinition","parameters":{"id":907,"nodeType":"ParameterList","parameters":[],"src":"675:2:5"},"returnParameters":{"id":910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":909,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":915,"src":"709:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":908,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:5"},"scope":933,"src":"656:96:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":923,"nodeType":"Block","src":"825:32:5","statements":[{"expression":{"expression":{"id":920,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:5","memberName":"data","nodeType":"MemberAccess","src":"842:8:5","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":919,"id":922,"nodeType":"Return","src":"835:15:5"}]},"id":924,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:5","nodeType":"FunctionDefinition","parameters":{"id":916,"nodeType":"ParameterList","parameters":[],"src":"775:2:5"},"returnParameters":{"id":919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":918,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":924,"src":"809:14:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":917,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:5"},"scope":933,"src":"758:99:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":931,"nodeType":"Block","src":"935:25:5","statements":[{"expression":{"hexValue":"30","id":929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":928,"id":930,"nodeType":"Return","src":"945:8:5"}]},"id":932,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:5","nodeType":"FunctionDefinition","parameters":{"id":925,"nodeType":"ParameterList","parameters":[],"src":"892:2:5"},"returnParameters":{"id":928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":927,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":932,"src":"926:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":926,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:5"},"scope":933,"src":"863:97:5","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":934,"src":"624:338:5","usedErrors":[],"usedEvents":[]}],"src":"101:862:5"},"id":5},"@openzeppelin/contracts/utils/Panic.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[985]},"id":986,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":935,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:6"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":936,"nodeType":"StructuredDocumentation","src":"125:489:6","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":985,"linearizedBaseContracts":[985],"name":"Panic","nameLocation":"665:5:6","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":937,"nodeType":"StructuredDocumentation","src":"677:36:6","text":"@dev generic / unspecified error"},"id":940,"mutability":"constant","name":"GENERIC","nameLocation":"744:7:6","nodeType":"VariableDeclaration","scope":985,"src":"718:40:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":938,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:4:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":941,"nodeType":"StructuredDocumentation","src":"764:37:6","text":"@dev used by the assert() builtin"},"id":944,"mutability":"constant","name":"ASSERT","nameLocation":"832:6:6","nodeType":"VariableDeclaration","scope":985,"src":"806:39:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":942,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:4:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":945,"nodeType":"StructuredDocumentation","src":"851:41:6","text":"@dev arithmetic underflow or overflow"},"id":948,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"923:14:6","nodeType":"VariableDeclaration","scope":985,"src":"897:47:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":946,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:4:6","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":949,"nodeType":"StructuredDocumentation","src":"950:35:6","text":"@dev division or modulo by zero"},"id":952,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1016:16:6","nodeType":"VariableDeclaration","scope":985,"src":"990:49:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":950,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1035:4:6","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":953,"nodeType":"StructuredDocumentation","src":"1045:30:6","text":"@dev enum conversion error"},"id":956,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1106:21:6","nodeType":"VariableDeclaration","scope":985,"src":"1080:54:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":954,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":955,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:4:6","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":957,"nodeType":"StructuredDocumentation","src":"1140:36:6","text":"@dev invalid encoding in storage"},"id":960,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1207:22:6","nodeType":"VariableDeclaration","scope":985,"src":"1181:55:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":958,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:4:6","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":961,"nodeType":"StructuredDocumentation","src":"1242:24:6","text":"@dev empty array pop"},"id":964,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1297:15:6","nodeType":"VariableDeclaration","scope":985,"src":"1271:48:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":962,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1315:4:6","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":965,"nodeType":"StructuredDocumentation","src":"1325:35:6","text":"@dev array out of bounds access"},"id":968,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1391:19:6","nodeType":"VariableDeclaration","scope":985,"src":"1365:52:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":966,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:4:6","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":969,"nodeType":"StructuredDocumentation","src":"1423:65:6","text":"@dev resource error (too large allocation or too large array)"},"id":972,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1519:14:6","nodeType":"VariableDeclaration","scope":985,"src":"1493:47:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":970,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1536:4:6","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":973,"nodeType":"StructuredDocumentation","src":"1546:42:6","text":"@dev calling invalid internal function"},"id":976,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1619:25:6","nodeType":"VariableDeclaration","scope":985,"src":"1593:58:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":974,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:4:6","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":983,"nodeType":"Block","src":"1819:151:6","statements":[{"AST":{"nativeSrc":"1854:110:6","nodeType":"YulBlock","src":"1854:110:6","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1875:4:6","nodeType":"YulLiteral","src":"1875:4:6","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1881:10:6","nodeType":"YulLiteral","src":"1881:10:6","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nativeSrc":"1868:6:6","nodeType":"YulIdentifier","src":"1868:6:6"},"nativeSrc":"1868:24:6","nodeType":"YulFunctionCall","src":"1868:24:6"},"nativeSrc":"1868:24:6","nodeType":"YulExpressionStatement","src":"1868:24:6"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1912:4:6","nodeType":"YulLiteral","src":"1912:4:6","type":"","value":"0x20"},{"name":"code","nativeSrc":"1918:4:6","nodeType":"YulIdentifier","src":"1918:4:6"}],"functionName":{"name":"mstore","nativeSrc":"1905:6:6","nodeType":"YulIdentifier","src":"1905:6:6"},"nativeSrc":"1905:18:6","nodeType":"YulFunctionCall","src":"1905:18:6"},"nativeSrc":"1905:18:6","nodeType":"YulExpressionStatement","src":"1905:18:6"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1943:4:6","nodeType":"YulLiteral","src":"1943:4:6","type":"","value":"0x1c"},{"kind":"number","nativeSrc":"1949:4:6","nodeType":"YulLiteral","src":"1949:4:6","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1936:6:6","nodeType":"YulIdentifier","src":"1936:6:6"},"nativeSrc":"1936:18:6","nodeType":"YulFunctionCall","src":"1936:18:6"},"nativeSrc":"1936:18:6","nodeType":"YulExpressionStatement","src":"1936:18:6"}]},"evmVersion":"paris","externalReferences":[{"declaration":979,"isOffset":false,"isSlot":false,"src":"1918:4:6","valueSize":1}],"flags":["memory-safe"],"id":982,"nodeType":"InlineAssembly","src":"1829:135:6"}]},"documentation":{"id":977,"nodeType":"StructuredDocumentation","src":"1658:113:6","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":984,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1785:5:6","nodeType":"FunctionDefinition","parameters":{"id":980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":979,"mutability":"mutable","name":"code","nameLocation":"1799:4:6","nodeType":"VariableDeclaration","scope":984,"src":"1791:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":978,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:14:6"},"returnParameters":{"id":981,"nodeType":"ParameterList","parameters":[],"src":"1819:0:6"},"scope":985,"src":"1776:194:6","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":986,"src":"657:1315:6","usedErrors":[],"usedEvents":[]}],"src":"99:1874:6"},"id":6},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[2591],"Panic":[985],"SafeCast":[4356]},"id":2592,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":987,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:7"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":989,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2592,"sourceUnit":986,"src":"129:35:7","symbolAliases":[{"foreign":{"id":988,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":985,"src":"137:5:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":991,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2592,"sourceUnit":4357,"src":"165:40:7","symbolAliases":[{"foreign":{"id":990,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4356,"src":"173:8:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":992,"nodeType":"StructuredDocumentation","src":"207:73:7","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":2591,"linearizedBaseContracts":[2591],"name":"Math","nameLocation":"289:4:7","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":997,"members":[{"id":993,"name":"Floor","nameLocation":"324:5:7","nodeType":"EnumValue","src":"324:5:7"},{"id":994,"name":"Ceil","nameLocation":"367:4:7","nodeType":"EnumValue","src":"367:4:7"},{"id":995,"name":"Trunc","nameLocation":"409:5:7","nodeType":"EnumValue","src":"409:5:7"},{"id":996,"name":"Expand","nameLocation":"439:6:7","nodeType":"EnumValue","src":"439:6:7"}],"name":"Rounding","nameLocation":"305:8:7","nodeType":"EnumDefinition","src":"300:169:7"},{"body":{"id":1028,"nodeType":"Block","src":"677:140:7","statements":[{"id":1027,"nodeType":"UncheckedBlock","src":"687:124:7","statements":[{"assignments":[1010],"declarations":[{"constant":false,"id":1010,"mutability":"mutable","name":"c","nameLocation":"719:1:7","nodeType":"VariableDeclaration","scope":1027,"src":"711:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1009,"name":"uint256","nodeType":"ElementaryTypeName","src":"711:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1014,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1011,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1000,"src":"723:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1012,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1002,"src":"727:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"723:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"711:17:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1015,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1010,"src":"746:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1016,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1000,"src":"750:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"746:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1022,"nodeType":"IfStatement","src":"742:28:7","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"761:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"768:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1020,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"760:10:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1008,"id":1021,"nodeType":"Return","src":"753:17:7"}},{"expression":{"components":[{"hexValue":"74727565","id":1023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"792:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":1024,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1010,"src":"798:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1025,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"791:9:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1008,"id":1026,"nodeType":"Return","src":"784:16:7"}]}]},"documentation":{"id":998,"nodeType":"StructuredDocumentation","src":"475:106:7","text":" @dev Returns the addition of two unsigned integers, with an success flag (no overflow)."},"id":1029,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"595:6:7","nodeType":"FunctionDefinition","parameters":{"id":1003,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1000,"mutability":"mutable","name":"a","nameLocation":"610:1:7","nodeType":"VariableDeclaration","scope":1029,"src":"602:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":999,"name":"uint256","nodeType":"ElementaryTypeName","src":"602:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1002,"mutability":"mutable","name":"b","nameLocation":"621:1:7","nodeType":"VariableDeclaration","scope":1029,"src":"613:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1001,"name":"uint256","nodeType":"ElementaryTypeName","src":"613:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"601:22:7"},"returnParameters":{"id":1008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1005,"mutability":"mutable","name":"success","nameLocation":"652:7:7","nodeType":"VariableDeclaration","scope":1029,"src":"647:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1004,"name":"bool","nodeType":"ElementaryTypeName","src":"647:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1007,"mutability":"mutable","name":"result","nameLocation":"669:6:7","nodeType":"VariableDeclaration","scope":1029,"src":"661:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1006,"name":"uint256","nodeType":"ElementaryTypeName","src":"661:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"646:30:7"},"scope":2591,"src":"586:231:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1056,"nodeType":"Block","src":"1028:113:7","statements":[{"id":1055,"nodeType":"UncheckedBlock","src":"1038:97:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1041,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1034,"src":"1066:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1042,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1032,"src":"1070:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1066:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1048,"nodeType":"IfStatement","src":"1062:28:7","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1081:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1088:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1046,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1080:10:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1040,"id":1047,"nodeType":"Return","src":"1073:17:7"}},{"expression":{"components":[{"hexValue":"74727565","id":1049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1112:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1050,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1032,"src":"1118:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1051,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1034,"src":"1122:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1118:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1053,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1111:13:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1040,"id":1054,"nodeType":"Return","src":"1104:20:7"}]}]},"documentation":{"id":1030,"nodeType":"StructuredDocumentation","src":"823:109:7","text":" @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow)."},"id":1057,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"946:6:7","nodeType":"FunctionDefinition","parameters":{"id":1035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1032,"mutability":"mutable","name":"a","nameLocation":"961:1:7","nodeType":"VariableDeclaration","scope":1057,"src":"953:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1031,"name":"uint256","nodeType":"ElementaryTypeName","src":"953:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1034,"mutability":"mutable","name":"b","nameLocation":"972:1:7","nodeType":"VariableDeclaration","scope":1057,"src":"964:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1033,"name":"uint256","nodeType":"ElementaryTypeName","src":"964:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"952:22:7"},"returnParameters":{"id":1040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1037,"mutability":"mutable","name":"success","nameLocation":"1003:7:7","nodeType":"VariableDeclaration","scope":1057,"src":"998:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1036,"name":"bool","nodeType":"ElementaryTypeName","src":"998:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1039,"mutability":"mutable","name":"result","nameLocation":"1020:6:7","nodeType":"VariableDeclaration","scope":1057,"src":"1012:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1038,"name":"uint256","nodeType":"ElementaryTypeName","src":"1012:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"997:30:7"},"scope":2591,"src":"937:204:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1098,"nodeType":"Block","src":"1355:417:7","statements":[{"id":1097,"nodeType":"UncheckedBlock","src":"1365:401:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1069,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1060,"src":"1623:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1628:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1623:6:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1076,"nodeType":"IfStatement","src":"1619:28:7","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":1072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1639:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":1073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1645:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1074,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1638:9:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1068,"id":1075,"nodeType":"Return","src":"1631:16:7"}},{"assignments":[1078],"declarations":[{"constant":false,"id":1078,"mutability":"mutable","name":"c","nameLocation":"1669:1:7","nodeType":"VariableDeclaration","scope":1097,"src":"1661:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1077,"name":"uint256","nodeType":"ElementaryTypeName","src":"1661:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1082,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1079,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1060,"src":"1673:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1080,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1062,"src":"1677:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1673:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1661:17:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1083,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1078,"src":"1696:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1084,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1060,"src":"1700:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1696:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1086,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1062,"src":"1705:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1696:10:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1092,"nodeType":"IfStatement","src":"1692:33:7","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1088,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1716:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1089,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1723:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1090,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1715:10:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1068,"id":1091,"nodeType":"Return","src":"1708:17:7"}},{"expression":{"components":[{"hexValue":"74727565","id":1093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1747:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":1094,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1078,"src":"1753:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1095,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1746:9:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1068,"id":1096,"nodeType":"Return","src":"1739:16:7"}]}]},"documentation":{"id":1058,"nodeType":"StructuredDocumentation","src":"1147:112:7","text":" @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow)."},"id":1099,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"1273:6:7","nodeType":"FunctionDefinition","parameters":{"id":1063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1060,"mutability":"mutable","name":"a","nameLocation":"1288:1:7","nodeType":"VariableDeclaration","scope":1099,"src":"1280:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1059,"name":"uint256","nodeType":"ElementaryTypeName","src":"1280:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1062,"mutability":"mutable","name":"b","nameLocation":"1299:1:7","nodeType":"VariableDeclaration","scope":1099,"src":"1291:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1061,"name":"uint256","nodeType":"ElementaryTypeName","src":"1291:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1279:22:7"},"returnParameters":{"id":1068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1065,"mutability":"mutable","name":"success","nameLocation":"1330:7:7","nodeType":"VariableDeclaration","scope":1099,"src":"1325:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1064,"name":"bool","nodeType":"ElementaryTypeName","src":"1325:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1067,"mutability":"mutable","name":"result","nameLocation":"1347:6:7","nodeType":"VariableDeclaration","scope":1099,"src":"1339:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1066,"name":"uint256","nodeType":"ElementaryTypeName","src":"1339:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1324:30:7"},"scope":2591,"src":"1264:508:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1126,"nodeType":"Block","src":"1987:114:7","statements":[{"id":1125,"nodeType":"UncheckedBlock","src":"1997:98:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1111,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1104,"src":"2025:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1112,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2030:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2025:6:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1118,"nodeType":"IfStatement","src":"2021:29:7","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1114,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2041:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2048:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1116,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2040:10:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1110,"id":1117,"nodeType":"Return","src":"2033:17:7"}},{"expression":{"components":[{"hexValue":"74727565","id":1119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2072:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1120,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1102,"src":"2078:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1121,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1104,"src":"2082:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2078:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1123,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2071:13:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1110,"id":1124,"nodeType":"Return","src":"2064:20:7"}]}]},"documentation":{"id":1100,"nodeType":"StructuredDocumentation","src":"1778:113:7","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":1127,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"1905:6:7","nodeType":"FunctionDefinition","parameters":{"id":1105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1102,"mutability":"mutable","name":"a","nameLocation":"1920:1:7","nodeType":"VariableDeclaration","scope":1127,"src":"1912:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1101,"name":"uint256","nodeType":"ElementaryTypeName","src":"1912:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1104,"mutability":"mutable","name":"b","nameLocation":"1931:1:7","nodeType":"VariableDeclaration","scope":1127,"src":"1923:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1103,"name":"uint256","nodeType":"ElementaryTypeName","src":"1923:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1911:22:7"},"returnParameters":{"id":1110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1107,"mutability":"mutable","name":"success","nameLocation":"1962:7:7","nodeType":"VariableDeclaration","scope":1127,"src":"1957:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1106,"name":"bool","nodeType":"ElementaryTypeName","src":"1957:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1109,"mutability":"mutable","name":"result","nameLocation":"1979:6:7","nodeType":"VariableDeclaration","scope":1127,"src":"1971:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1108,"name":"uint256","nodeType":"ElementaryTypeName","src":"1971:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1956:30:7"},"scope":2591,"src":"1896:205:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1154,"nodeType":"Block","src":"2326:114:7","statements":[{"id":1153,"nodeType":"UncheckedBlock","src":"2336:98:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1139,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1132,"src":"2364:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2369:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2364:6:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1146,"nodeType":"IfStatement","src":"2360:29:7","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2380:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2387:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1144,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2379:10:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1138,"id":1145,"nodeType":"Return","src":"2372:17:7"}},{"expression":{"components":[{"hexValue":"74727565","id":1147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2411:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1148,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1130,"src":"2417:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":1149,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1132,"src":"2421:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2417:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1151,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2410:13:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1138,"id":1152,"nodeType":"Return","src":"2403:20:7"}]}]},"documentation":{"id":1128,"nodeType":"StructuredDocumentation","src":"2107:123:7","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":1155,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"2244:6:7","nodeType":"FunctionDefinition","parameters":{"id":1133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1130,"mutability":"mutable","name":"a","nameLocation":"2259:1:7","nodeType":"VariableDeclaration","scope":1155,"src":"2251:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1129,"name":"uint256","nodeType":"ElementaryTypeName","src":"2251:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1132,"mutability":"mutable","name":"b","nameLocation":"2270:1:7","nodeType":"VariableDeclaration","scope":1155,"src":"2262:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1131,"name":"uint256","nodeType":"ElementaryTypeName","src":"2262:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2250:22:7"},"returnParameters":{"id":1138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1135,"mutability":"mutable","name":"success","nameLocation":"2301:7:7","nodeType":"VariableDeclaration","scope":1155,"src":"2296:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1134,"name":"bool","nodeType":"ElementaryTypeName","src":"2296:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1137,"mutability":"mutable","name":"result","nameLocation":"2318:6:7","nodeType":"VariableDeclaration","scope":1155,"src":"2310:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1136,"name":"uint256","nodeType":"ElementaryTypeName","src":"2310:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2295:30:7"},"scope":2591,"src":"2235:205:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1181,"nodeType":"Block","src":"2912:207:7","statements":[{"id":1180,"nodeType":"UncheckedBlock","src":"2922:191:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1167,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1162,"src":"3060:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1168,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1160,"src":"3066:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":1169,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1162,"src":"3070:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3066:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1171,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3065:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":1174,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1158,"src":"3091:9:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1172,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4356,"src":"3075:8:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4356_$","typeString":"type(library SafeCast)"}},"id":1173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3084:6:7","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4355,"src":"3075:15:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":1175,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3075:26:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3065:36:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1177,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3064:38:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3060:42:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1166,"id":1179,"nodeType":"Return","src":"3053:49:7"}]}]},"documentation":{"id":1156,"nodeType":"StructuredDocumentation","src":"2446:374:7","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":1182,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"2834:7:7","nodeType":"FunctionDefinition","parameters":{"id":1163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1158,"mutability":"mutable","name":"condition","nameLocation":"2847:9:7","nodeType":"VariableDeclaration","scope":1182,"src":"2842:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1157,"name":"bool","nodeType":"ElementaryTypeName","src":"2842:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1160,"mutability":"mutable","name":"a","nameLocation":"2866:1:7","nodeType":"VariableDeclaration","scope":1182,"src":"2858:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1159,"name":"uint256","nodeType":"ElementaryTypeName","src":"2858:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1162,"mutability":"mutable","name":"b","nameLocation":"2877:1:7","nodeType":"VariableDeclaration","scope":1182,"src":"2869:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1161,"name":"uint256","nodeType":"ElementaryTypeName","src":"2869:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2841:38:7"},"returnParameters":{"id":1166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1165,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1182,"src":"2903:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1164,"name":"uint256","nodeType":"ElementaryTypeName","src":"2903:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2902:9:7"},"scope":2591,"src":"2825:294:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1200,"nodeType":"Block","src":"3256:44:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1193,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1185,"src":"3281:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1194,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1187,"src":"3285:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3281:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1196,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1185,"src":"3288:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1197,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1187,"src":"3291:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1192,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1182,"src":"3273:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":1198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3273:20:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1191,"id":1199,"nodeType":"Return","src":"3266:27:7"}]},"documentation":{"id":1183,"nodeType":"StructuredDocumentation","src":"3125:59:7","text":" @dev Returns the largest of two numbers."},"id":1201,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"3198:3:7","nodeType":"FunctionDefinition","parameters":{"id":1188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1185,"mutability":"mutable","name":"a","nameLocation":"3210:1:7","nodeType":"VariableDeclaration","scope":1201,"src":"3202:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1184,"name":"uint256","nodeType":"ElementaryTypeName","src":"3202:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1187,"mutability":"mutable","name":"b","nameLocation":"3221:1:7","nodeType":"VariableDeclaration","scope":1201,"src":"3213:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1186,"name":"uint256","nodeType":"ElementaryTypeName","src":"3213:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3201:22:7"},"returnParameters":{"id":1191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1190,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1201,"src":"3247:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1189,"name":"uint256","nodeType":"ElementaryTypeName","src":"3247:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3246:9:7"},"scope":2591,"src":"3189:111:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1219,"nodeType":"Block","src":"3438:44:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1212,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1204,"src":"3463:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1213,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1206,"src":"3467:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3463:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1215,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1204,"src":"3470:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1216,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1206,"src":"3473:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1211,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1182,"src":"3455:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":1217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3455:20:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1210,"id":1218,"nodeType":"Return","src":"3448:27:7"}]},"documentation":{"id":1202,"nodeType":"StructuredDocumentation","src":"3306:60:7","text":" @dev Returns the smallest of two numbers."},"id":1220,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"3380:3:7","nodeType":"FunctionDefinition","parameters":{"id":1207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1204,"mutability":"mutable","name":"a","nameLocation":"3392:1:7","nodeType":"VariableDeclaration","scope":1220,"src":"3384:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1203,"name":"uint256","nodeType":"ElementaryTypeName","src":"3384:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1206,"mutability":"mutable","name":"b","nameLocation":"3403:1:7","nodeType":"VariableDeclaration","scope":1220,"src":"3395:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1205,"name":"uint256","nodeType":"ElementaryTypeName","src":"3395:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3383:22:7"},"returnParameters":{"id":1210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1209,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1220,"src":"3429:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1208,"name":"uint256","nodeType":"ElementaryTypeName","src":"3429:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3428:9:7"},"scope":2591,"src":"3371:111:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1242,"nodeType":"Block","src":"3666:82:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1230,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1223,"src":"3721:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":1231,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1225,"src":"3725:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3721:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1233,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3720:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1234,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1223,"src":"3731:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":1235,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1225,"src":"3735:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3731:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1237,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3730:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":1238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3740:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"3730:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3720:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1229,"id":1241,"nodeType":"Return","src":"3713:28:7"}]},"documentation":{"id":1221,"nodeType":"StructuredDocumentation","src":"3488:102:7","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":1243,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"3604:7:7","nodeType":"FunctionDefinition","parameters":{"id":1226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1223,"mutability":"mutable","name":"a","nameLocation":"3620:1:7","nodeType":"VariableDeclaration","scope":1243,"src":"3612:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1222,"name":"uint256","nodeType":"ElementaryTypeName","src":"3612:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1225,"mutability":"mutable","name":"b","nameLocation":"3631:1:7","nodeType":"VariableDeclaration","scope":1243,"src":"3623:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1224,"name":"uint256","nodeType":"ElementaryTypeName","src":"3623:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3611:22:7"},"returnParameters":{"id":1229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1228,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1243,"src":"3657:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1227,"name":"uint256","nodeType":"ElementaryTypeName","src":"3657:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3656:9:7"},"scope":2591,"src":"3595:153:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1283,"nodeType":"Block","src":"4040:633:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1253,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1248,"src":"4054:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4059:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4054:6:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1264,"nodeType":"IfStatement","src":"4050:150:7","trueBody":{"id":1263,"nodeType":"Block","src":"4062:138:7","statements":[{"expression":{"arguments":[{"expression":{"id":1259,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":985,"src":"4166:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$985_$","typeString":"type(library Panic)"}},"id":1260,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4172:16:7","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":952,"src":"4166:22:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1256,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":985,"src":"4154:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$985_$","typeString":"type(library Panic)"}},"id":1258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4160:5:7","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":984,"src":"4154:11:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4154:35:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1262,"nodeType":"ExpressionStatement","src":"4154:35:7"}]}},{"id":1282,"nodeType":"UncheckedBlock","src":"4583:84:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1267,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1246,"src":"4630:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4634:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4630:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1265,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4356,"src":"4614:8:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4356_$","typeString":"type(library SafeCast)"}},"id":1266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4623:6:7","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4355,"src":"4614:15:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":1270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4614:22:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1271,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1246,"src":"4641:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4645:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4641:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1274,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4640:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1275,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1248,"src":"4650:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4640:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4654:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4640:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1279,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4639:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4614:42:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1252,"id":1281,"nodeType":"Return","src":"4607:49:7"}]}]},"documentation":{"id":1244,"nodeType":"StructuredDocumentation","src":"3754:210:7","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":1284,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"3978:7:7","nodeType":"FunctionDefinition","parameters":{"id":1249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1246,"mutability":"mutable","name":"a","nameLocation":"3994:1:7","nodeType":"VariableDeclaration","scope":1284,"src":"3986:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1245,"name":"uint256","nodeType":"ElementaryTypeName","src":"3986:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1248,"mutability":"mutable","name":"b","nameLocation":"4005:1:7","nodeType":"VariableDeclaration","scope":1284,"src":"3997:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1247,"name":"uint256","nodeType":"ElementaryTypeName","src":"3997:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3985:22:7"},"returnParameters":{"id":1252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1251,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1284,"src":"4031:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1250,"name":"uint256","nodeType":"ElementaryTypeName","src":"4031:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4030:9:7"},"scope":2591,"src":"3969:704:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1420,"nodeType":"Block","src":"5094:4128:7","statements":[{"id":1419,"nodeType":"UncheckedBlock","src":"5104:4112:7","statements":[{"assignments":[1297],"declarations":[{"constant":false,"id":1297,"mutability":"mutable","name":"prod0","nameLocation":"5441:5:7","nodeType":"VariableDeclaration","scope":1419,"src":"5433:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1296,"name":"uint256","nodeType":"ElementaryTypeName","src":"5433:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1301,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1298,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1287,"src":"5449:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1299,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1289,"src":"5453:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5449:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5433:21:7"},{"assignments":[1303],"declarations":[{"constant":false,"id":1303,"mutability":"mutable","name":"prod1","nameLocation":"5521:5:7","nodeType":"VariableDeclaration","scope":1419,"src":"5513:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1302,"name":"uint256","nodeType":"ElementaryTypeName","src":"5513:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1304,"nodeType":"VariableDeclarationStatement","src":"5513:13:7"},{"AST":{"nativeSrc":"5593:122:7","nodeType":"YulBlock","src":"5593:122:7","statements":[{"nativeSrc":"5611:30:7","nodeType":"YulVariableDeclaration","src":"5611:30:7","value":{"arguments":[{"name":"x","nativeSrc":"5628:1:7","nodeType":"YulIdentifier","src":"5628:1:7"},{"name":"y","nativeSrc":"5631:1:7","nodeType":"YulIdentifier","src":"5631:1:7"},{"arguments":[{"kind":"number","nativeSrc":"5638:1:7","nodeType":"YulLiteral","src":"5638:1:7","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"5634:3:7","nodeType":"YulIdentifier","src":"5634:3:7"},"nativeSrc":"5634:6:7","nodeType":"YulFunctionCall","src":"5634:6:7"}],"functionName":{"name":"mulmod","nativeSrc":"5621:6:7","nodeType":"YulIdentifier","src":"5621:6:7"},"nativeSrc":"5621:20:7","nodeType":"YulFunctionCall","src":"5621:20:7"},"variables":[{"name":"mm","nativeSrc":"5615:2:7","nodeType":"YulTypedName","src":"5615:2:7","type":""}]},{"nativeSrc":"5658:43:7","nodeType":"YulAssignment","src":"5658:43:7","value":{"arguments":[{"arguments":[{"name":"mm","nativeSrc":"5675:2:7","nodeType":"YulIdentifier","src":"5675:2:7"},{"name":"prod0","nativeSrc":"5679:5:7","nodeType":"YulIdentifier","src":"5679:5:7"}],"functionName":{"name":"sub","nativeSrc":"5671:3:7","nodeType":"YulIdentifier","src":"5671:3:7"},"nativeSrc":"5671:14:7","nodeType":"YulFunctionCall","src":"5671:14:7"},{"arguments":[{"name":"mm","nativeSrc":"5690:2:7","nodeType":"YulIdentifier","src":"5690:2:7"},{"name":"prod0","nativeSrc":"5694:5:7","nodeType":"YulIdentifier","src":"5694:5:7"}],"functionName":{"name":"lt","nativeSrc":"5687:2:7","nodeType":"YulIdentifier","src":"5687:2:7"},"nativeSrc":"5687:13:7","nodeType":"YulFunctionCall","src":"5687:13:7"}],"functionName":{"name":"sub","nativeSrc":"5667:3:7","nodeType":"YulIdentifier","src":"5667:3:7"},"nativeSrc":"5667:34:7","nodeType":"YulFunctionCall","src":"5667:34:7"},"variableNames":[{"name":"prod1","nativeSrc":"5658:5:7","nodeType":"YulIdentifier","src":"5658:5:7"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1297,"isOffset":false,"isSlot":false,"src":"5679:5:7","valueSize":1},{"declaration":1297,"isOffset":false,"isSlot":false,"src":"5694:5:7","valueSize":1},{"declaration":1303,"isOffset":false,"isSlot":false,"src":"5658:5:7","valueSize":1},{"declaration":1287,"isOffset":false,"isSlot":false,"src":"5628:1:7","valueSize":1},{"declaration":1289,"isOffset":false,"isSlot":false,"src":"5631:1:7","valueSize":1}],"id":1305,"nodeType":"InlineAssembly","src":"5584:131:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1306,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1303,"src":"5796:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5805:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5796:10:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1314,"nodeType":"IfStatement","src":"5792:368:7","trueBody":{"id":1313,"nodeType":"Block","src":"5808:352:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1309,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1297,"src":"6126:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1310,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1291,"src":"6134:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6126:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1295,"id":1312,"nodeType":"Return","src":"6119:26:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1315,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1291,"src":"6270:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":1316,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1303,"src":"6285:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6270:20:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1333,"nodeType":"IfStatement","src":"6266:143:7","trueBody":{"id":1332,"nodeType":"Block","src":"6292:117:7","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1322,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1291,"src":"6330:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6345:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6330:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":1325,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":985,"src":"6348:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$985_$","typeString":"type(library Panic)"}},"id":1326,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6354:16:7","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":952,"src":"6348:22:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1327,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":985,"src":"6372:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$985_$","typeString":"type(library Panic)"}},"id":1328,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6378:14:7","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":948,"src":"6372:20:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1321,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1182,"src":"6322:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":1329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6322:71:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1318,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":985,"src":"6310:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$985_$","typeString":"type(library Panic)"}},"id":1320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6316:5:7","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":984,"src":"6310:11:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6310:84:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1331,"nodeType":"ExpressionStatement","src":"6310:84:7"}]}},{"assignments":[1335],"declarations":[{"constant":false,"id":1335,"mutability":"mutable","name":"remainder","nameLocation":"6672:9:7","nodeType":"VariableDeclaration","scope":1419,"src":"6664:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1334,"name":"uint256","nodeType":"ElementaryTypeName","src":"6664:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1336,"nodeType":"VariableDeclarationStatement","src":"6664:17:7"},{"AST":{"nativeSrc":"6704:291:7","nodeType":"YulBlock","src":"6704:291:7","statements":[{"nativeSrc":"6773:38:7","nodeType":"YulAssignment","src":"6773:38:7","value":{"arguments":[{"name":"x","nativeSrc":"6793:1:7","nodeType":"YulIdentifier","src":"6793:1:7"},{"name":"y","nativeSrc":"6796:1:7","nodeType":"YulIdentifier","src":"6796:1:7"},{"name":"denominator","nativeSrc":"6799:11:7","nodeType":"YulIdentifier","src":"6799:11:7"}],"functionName":{"name":"mulmod","nativeSrc":"6786:6:7","nodeType":"YulIdentifier","src":"6786:6:7"},"nativeSrc":"6786:25:7","nodeType":"YulFunctionCall","src":"6786:25:7"},"variableNames":[{"name":"remainder","nativeSrc":"6773:9:7","nodeType":"YulIdentifier","src":"6773:9:7"}]},{"nativeSrc":"6893:41:7","nodeType":"YulAssignment","src":"6893:41:7","value":{"arguments":[{"name":"prod1","nativeSrc":"6906:5:7","nodeType":"YulIdentifier","src":"6906:5:7"},{"arguments":[{"name":"remainder","nativeSrc":"6916:9:7","nodeType":"YulIdentifier","src":"6916:9:7"},{"name":"prod0","nativeSrc":"6927:5:7","nodeType":"YulIdentifier","src":"6927:5:7"}],"functionName":{"name":"gt","nativeSrc":"6913:2:7","nodeType":"YulIdentifier","src":"6913:2:7"},"nativeSrc":"6913:20:7","nodeType":"YulFunctionCall","src":"6913:20:7"}],"functionName":{"name":"sub","nativeSrc":"6902:3:7","nodeType":"YulIdentifier","src":"6902:3:7"},"nativeSrc":"6902:32:7","nodeType":"YulFunctionCall","src":"6902:32:7"},"variableNames":[{"name":"prod1","nativeSrc":"6893:5:7","nodeType":"YulIdentifier","src":"6893:5:7"}]},{"nativeSrc":"6951:30:7","nodeType":"YulAssignment","src":"6951:30:7","value":{"arguments":[{"name":"prod0","nativeSrc":"6964:5:7","nodeType":"YulIdentifier","src":"6964:5:7"},{"name":"remainder","nativeSrc":"6971:9:7","nodeType":"YulIdentifier","src":"6971:9:7"}],"functionName":{"name":"sub","nativeSrc":"6960:3:7","nodeType":"YulIdentifier","src":"6960:3:7"},"nativeSrc":"6960:21:7","nodeType":"YulFunctionCall","src":"6960:21:7"},"variableNames":[{"name":"prod0","nativeSrc":"6951:5:7","nodeType":"YulIdentifier","src":"6951:5:7"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1291,"isOffset":false,"isSlot":false,"src":"6799:11:7","valueSize":1},{"declaration":1297,"isOffset":false,"isSlot":false,"src":"6927:5:7","valueSize":1},{"declaration":1297,"isOffset":false,"isSlot":false,"src":"6951:5:7","valueSize":1},{"declaration":1297,"isOffset":false,"isSlot":false,"src":"6964:5:7","valueSize":1},{"declaration":1303,"isOffset":false,"isSlot":false,"src":"6893:5:7","valueSize":1},{"declaration":1303,"isOffset":false,"isSlot":false,"src":"6906:5:7","valueSize":1},{"declaration":1335,"isOffset":false,"isSlot":false,"src":"6773:9:7","valueSize":1},{"declaration":1335,"isOffset":false,"isSlot":false,"src":"6916:9:7","valueSize":1},{"declaration":1335,"isOffset":false,"isSlot":false,"src":"6971:9:7","valueSize":1},{"declaration":1287,"isOffset":false,"isSlot":false,"src":"6793:1:7","valueSize":1},{"declaration":1289,"isOffset":false,"isSlot":false,"src":"6796:1:7","valueSize":1}],"id":1337,"nodeType":"InlineAssembly","src":"6695:300:7"},{"assignments":[1339],"declarations":[{"constant":false,"id":1339,"mutability":"mutable","name":"twos","nameLocation":"7207:4:7","nodeType":"VariableDeclaration","scope":1419,"src":"7199:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1338,"name":"uint256","nodeType":"ElementaryTypeName","src":"7199:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1346,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1340,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1291,"src":"7214:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":1341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7229:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1342,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1291,"src":"7233:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7229:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1344,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7228:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7214:31:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7199:46:7"},{"AST":{"nativeSrc":"7268:366:7","nodeType":"YulBlock","src":"7268:366:7","statements":[{"nativeSrc":"7333:37:7","nodeType":"YulAssignment","src":"7333:37:7","value":{"arguments":[{"name":"denominator","nativeSrc":"7352:11:7","nodeType":"YulIdentifier","src":"7352:11:7"},{"name":"twos","nativeSrc":"7365:4:7","nodeType":"YulIdentifier","src":"7365:4:7"}],"functionName":{"name":"div","nativeSrc":"7348:3:7","nodeType":"YulIdentifier","src":"7348:3:7"},"nativeSrc":"7348:22:7","nodeType":"YulFunctionCall","src":"7348:22:7"},"variableNames":[{"name":"denominator","nativeSrc":"7333:11:7","nodeType":"YulIdentifier","src":"7333:11:7"}]},{"nativeSrc":"7437:25:7","nodeType":"YulAssignment","src":"7437:25:7","value":{"arguments":[{"name":"prod0","nativeSrc":"7450:5:7","nodeType":"YulIdentifier","src":"7450:5:7"},{"name":"twos","nativeSrc":"7457:4:7","nodeType":"YulIdentifier","src":"7457:4:7"}],"functionName":{"name":"div","nativeSrc":"7446:3:7","nodeType":"YulIdentifier","src":"7446:3:7"},"nativeSrc":"7446:16:7","nodeType":"YulFunctionCall","src":"7446:16:7"},"variableNames":[{"name":"prod0","nativeSrc":"7437:5:7","nodeType":"YulIdentifier","src":"7437:5:7"}]},{"nativeSrc":"7581:39:7","nodeType":"YulAssignment","src":"7581:39:7","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"7601:1:7","nodeType":"YulLiteral","src":"7601:1:7","type":"","value":"0"},{"name":"twos","nativeSrc":"7604:4:7","nodeType":"YulIdentifier","src":"7604:4:7"}],"functionName":{"name":"sub","nativeSrc":"7597:3:7","nodeType":"YulIdentifier","src":"7597:3:7"},"nativeSrc":"7597:12:7","nodeType":"YulFunctionCall","src":"7597:12:7"},{"name":"twos","nativeSrc":"7611:4:7","nodeType":"YulIdentifier","src":"7611:4:7"}],"functionName":{"name":"div","nativeSrc":"7593:3:7","nodeType":"YulIdentifier","src":"7593:3:7"},"nativeSrc":"7593:23:7","nodeType":"YulFunctionCall","src":"7593:23:7"},{"kind":"number","nativeSrc":"7618:1:7","nodeType":"YulLiteral","src":"7618:1:7","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"7589:3:7","nodeType":"YulIdentifier","src":"7589:3:7"},"nativeSrc":"7589:31:7","nodeType":"YulFunctionCall","src":"7589:31:7"},"variableNames":[{"name":"twos","nativeSrc":"7581:4:7","nodeType":"YulIdentifier","src":"7581:4:7"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1291,"isOffset":false,"isSlot":false,"src":"7333:11:7","valueSize":1},{"declaration":1291,"isOffset":false,"isSlot":false,"src":"7352:11:7","valueSize":1},{"declaration":1297,"isOffset":false,"isSlot":false,"src":"7437:5:7","valueSize":1},{"declaration":1297,"isOffset":false,"isSlot":false,"src":"7450:5:7","valueSize":1},{"declaration":1339,"isOffset":false,"isSlot":false,"src":"7365:4:7","valueSize":1},{"declaration":1339,"isOffset":false,"isSlot":false,"src":"7457:4:7","valueSize":1},{"declaration":1339,"isOffset":false,"isSlot":false,"src":"7581:4:7","valueSize":1},{"declaration":1339,"isOffset":false,"isSlot":false,"src":"7604:4:7","valueSize":1},{"declaration":1339,"isOffset":false,"isSlot":false,"src":"7611:4:7","valueSize":1}],"id":1347,"nodeType":"InlineAssembly","src":"7259:375:7"},{"expression":{"id":1352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1348,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1297,"src":"7700:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1349,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1303,"src":"7709:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1350,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1339,"src":"7717:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7709:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7700:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1353,"nodeType":"ExpressionStatement","src":"7700:21:7"},{"assignments":[1355],"declarations":[{"constant":false,"id":1355,"mutability":"mutable","name":"inverse","nameLocation":"8064:7:7","nodeType":"VariableDeclaration","scope":1419,"src":"8056:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1354,"name":"uint256","nodeType":"ElementaryTypeName","src":"8056:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1362,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":1356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8075:1:7","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1357,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1291,"src":"8079:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8075:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1359,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8074:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":1360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8094:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"8074:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8056:39:7"},{"expression":{"id":1369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1363,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1355,"src":"8312:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8323:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1365,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1291,"src":"8327:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1366,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1355,"src":"8341:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8327:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8323:25:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8312:36:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1370,"nodeType":"ExpressionStatement","src":"8312:36:7"},{"expression":{"id":1377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1371,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1355,"src":"8382:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8393:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1373,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1291,"src":"8397:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1374,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1355,"src":"8411:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8397:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8393:25:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8382:36:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1378,"nodeType":"ExpressionStatement","src":"8382:36:7"},{"expression":{"id":1385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1379,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1355,"src":"8454:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8465:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1381,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1291,"src":"8469:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1382,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1355,"src":"8483:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8469:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8465:25:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8454:36:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1386,"nodeType":"ExpressionStatement","src":"8454:36:7"},{"expression":{"id":1393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1387,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1355,"src":"8525:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8536:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1389,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1291,"src":"8540:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1390,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1355,"src":"8554:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8540:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8536:25:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8525:36:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1394,"nodeType":"ExpressionStatement","src":"8525:36:7"},{"expression":{"id":1401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1395,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1355,"src":"8598:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8609:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1397,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1291,"src":"8613:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1398,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1355,"src":"8627:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8613:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8609:25:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8598:36:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1402,"nodeType":"ExpressionStatement","src":"8598:36:7"},{"expression":{"id":1409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1403,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1355,"src":"8672:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8683:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1405,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1291,"src":"8687:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1406,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1355,"src":"8701:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8687:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8683:25:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8672:36:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1410,"nodeType":"ExpressionStatement","src":"8672:36:7"},{"expression":{"id":1415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1411,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1294,"src":"9154:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1412,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1297,"src":"9163:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1413,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1355,"src":"9171:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9163:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9154:24:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1416,"nodeType":"ExpressionStatement","src":"9154:24:7"},{"expression":{"id":1417,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1294,"src":"9199:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1295,"id":1418,"nodeType":"Return","src":"9192:13:7"}]}]},"documentation":{"id":1285,"nodeType":"StructuredDocumentation","src":"4679:312:7","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":1421,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"5005:6:7","nodeType":"FunctionDefinition","parameters":{"id":1292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1287,"mutability":"mutable","name":"x","nameLocation":"5020:1:7","nodeType":"VariableDeclaration","scope":1421,"src":"5012:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1286,"name":"uint256","nodeType":"ElementaryTypeName","src":"5012:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1289,"mutability":"mutable","name":"y","nameLocation":"5031:1:7","nodeType":"VariableDeclaration","scope":1421,"src":"5023:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1288,"name":"uint256","nodeType":"ElementaryTypeName","src":"5023:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1291,"mutability":"mutable","name":"denominator","nameLocation":"5042:11:7","nodeType":"VariableDeclaration","scope":1421,"src":"5034:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1290,"name":"uint256","nodeType":"ElementaryTypeName","src":"5034:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5011:43:7"},"returnParameters":{"id":1295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1294,"mutability":"mutable","name":"result","nameLocation":"5086:6:7","nodeType":"VariableDeclaration","scope":1421,"src":"5078:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1293,"name":"uint256","nodeType":"ElementaryTypeName","src":"5078:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5077:16:7"},"scope":2591,"src":"4996:4226:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1457,"nodeType":"Block","src":"9461:128:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1437,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1424,"src":"9485:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1438,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1426,"src":"9488:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1439,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1428,"src":"9491:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1436,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[1421,1458],"referencedDeclaration":1421,"src":"9478:6:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9478:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1444,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1431,"src":"9539:8:7","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$997","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$997","typeString":"enum Math.Rounding"}],"id":1443,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2590,"src":"9522:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$997_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":1445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9522:26:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1447,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1424,"src":"9559:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1448,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1426,"src":"9562:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1449,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1428,"src":"9565:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1446,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"9552:6:7","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9552:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9580:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9552:29:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9522:59:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1441,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4356,"src":"9506:8:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4356_$","typeString":"type(library SafeCast)"}},"id":1442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9515:6:7","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4355,"src":"9506:15:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":1454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9506:76:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9478:104:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1435,"id":1456,"nodeType":"Return","src":"9471:111:7"}]},"documentation":{"id":1422,"nodeType":"StructuredDocumentation","src":"9228:118:7","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":1458,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"9360:6:7","nodeType":"FunctionDefinition","parameters":{"id":1432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1424,"mutability":"mutable","name":"x","nameLocation":"9375:1:7","nodeType":"VariableDeclaration","scope":1458,"src":"9367:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1423,"name":"uint256","nodeType":"ElementaryTypeName","src":"9367:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1426,"mutability":"mutable","name":"y","nameLocation":"9386:1:7","nodeType":"VariableDeclaration","scope":1458,"src":"9378:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1425,"name":"uint256","nodeType":"ElementaryTypeName","src":"9378:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1428,"mutability":"mutable","name":"denominator","nameLocation":"9397:11:7","nodeType":"VariableDeclaration","scope":1458,"src":"9389:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1427,"name":"uint256","nodeType":"ElementaryTypeName","src":"9389:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1431,"mutability":"mutable","name":"rounding","nameLocation":"9419:8:7","nodeType":"VariableDeclaration","scope":1458,"src":"9410:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$997","typeString":"enum Math.Rounding"},"typeName":{"id":1430,"nodeType":"UserDefinedTypeName","pathNode":{"id":1429,"name":"Rounding","nameLocations":["9410:8:7"],"nodeType":"IdentifierPath","referencedDeclaration":997,"src":"9410:8:7"},"referencedDeclaration":997,"src":"9410:8:7","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$997","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9366:62:7"},"returnParameters":{"id":1435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1434,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1458,"src":"9452:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1433,"name":"uint256","nodeType":"ElementaryTypeName","src":"9452:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9451:9:7"},"scope":2591,"src":"9351:238:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1554,"nodeType":"Block","src":"10223:1849:7","statements":[{"id":1553,"nodeType":"UncheckedBlock","src":"10233:1833:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1468,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1463,"src":"10261:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10266:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10261:6:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1473,"nodeType":"IfStatement","src":"10257:20:7","trueBody":{"expression":{"hexValue":"30","id":1471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10276:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1467,"id":1472,"nodeType":"Return","src":"10269:8:7"}},{"assignments":[1475],"declarations":[{"constant":false,"id":1475,"mutability":"mutable","name":"remainder","nameLocation":"10756:9:7","nodeType":"VariableDeclaration","scope":1553,"src":"10748:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1474,"name":"uint256","nodeType":"ElementaryTypeName","src":"10748:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1479,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1476,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1461,"src":"10768:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":1477,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1463,"src":"10772:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10768:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10748:25:7"},{"assignments":[1481],"declarations":[{"constant":false,"id":1481,"mutability":"mutable","name":"gcd","nameLocation":"10795:3:7","nodeType":"VariableDeclaration","scope":1553,"src":"10787:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1480,"name":"uint256","nodeType":"ElementaryTypeName","src":"10787:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1483,"initialValue":{"id":1482,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1463,"src":"10801:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10787:15:7"},{"assignments":[1485],"declarations":[{"constant":false,"id":1485,"mutability":"mutable","name":"x","nameLocation":"10945:1:7","nodeType":"VariableDeclaration","scope":1553,"src":"10938:8:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1484,"name":"int256","nodeType":"ElementaryTypeName","src":"10938:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":1487,"initialValue":{"hexValue":"30","id":1486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10949:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10938:12:7"},{"assignments":[1489],"declarations":[{"constant":false,"id":1489,"mutability":"mutable","name":"y","nameLocation":"10971:1:7","nodeType":"VariableDeclaration","scope":1553,"src":"10964:8:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1488,"name":"int256","nodeType":"ElementaryTypeName","src":"10964:6:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":1491,"initialValue":{"hexValue":"31","id":1490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10975:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"10964:12:7"},{"body":{"id":1528,"nodeType":"Block","src":"11014:882:7","statements":[{"assignments":[1496],"declarations":[{"constant":false,"id":1496,"mutability":"mutable","name":"quotient","nameLocation":"11040:8:7","nodeType":"VariableDeclaration","scope":1528,"src":"11032:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1495,"name":"uint256","nodeType":"ElementaryTypeName","src":"11032:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1500,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1497,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1481,"src":"11051:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1498,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1475,"src":"11057:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11051:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11032:34:7"},{"expression":{"id":1511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":1501,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1481,"src":"11086:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1502,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1475,"src":"11091:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1503,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"11085:16:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":1504,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1475,"src":"11191:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1505,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1481,"src":"11436:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1506,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1475,"src":"11442:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1507,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1496,"src":"11454:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11442:20:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11436:26:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1510,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11104:376:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"11085:395:7","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1512,"nodeType":"ExpressionStatement","src":"11085:395:7"},{"expression":{"id":1526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":1513,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1485,"src":"11500:1:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":1514,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1489,"src":"11503:1:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1515,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"11499:6:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":1516,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1489,"src":"11585:1:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1517,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1485,"src":"11839:1:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1518,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1489,"src":"11843:1:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":1521,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1496,"src":"11854:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1520,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11847:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":1519,"name":"int256","nodeType":"ElementaryTypeName","src":"11847:6:7","typeDescriptions":{}}},"id":1522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11847:16:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11843:20:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11839:24:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":1525,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11508:373:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"11499:382:7","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1527,"nodeType":"ExpressionStatement","src":"11499:382:7"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1492,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1475,"src":"10998:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11011:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10998:14:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1529,"nodeType":"WhileStatement","src":"10991:905:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1530,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1481,"src":"11914:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":1531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11921:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11914:8:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1535,"nodeType":"IfStatement","src":"11910:22:7","trueBody":{"expression":{"hexValue":"30","id":1533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11931:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1467,"id":1534,"nodeType":"Return","src":"11924:8:7"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1537,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1485,"src":"11983:1:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":1538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11987:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11983:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1540,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1463,"src":"11990:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":1544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"12002:2:7","subExpression":{"id":1543,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1485,"src":"12003:1:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":1542,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11994:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1541,"name":"uint256","nodeType":"ElementaryTypeName","src":"11994:7:7","typeDescriptions":{}}},"id":1545,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11994:11:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11990:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":1549,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1485,"src":"12015:1:7","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":1548,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12007:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1547,"name":"uint256","nodeType":"ElementaryTypeName","src":"12007:7:7","typeDescriptions":{}}},"id":1550,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12007:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1536,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1182,"src":"11975:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":1551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11975:43:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1467,"id":1552,"nodeType":"Return","src":"11968:50:7"}]}]},"documentation":{"id":1459,"nodeType":"StructuredDocumentation","src":"9595:553:7","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":1555,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"10162:6:7","nodeType":"FunctionDefinition","parameters":{"id":1464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1461,"mutability":"mutable","name":"a","nameLocation":"10177:1:7","nodeType":"VariableDeclaration","scope":1555,"src":"10169:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1460,"name":"uint256","nodeType":"ElementaryTypeName","src":"10169:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1463,"mutability":"mutable","name":"n","nameLocation":"10188:1:7","nodeType":"VariableDeclaration","scope":1555,"src":"10180:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1462,"name":"uint256","nodeType":"ElementaryTypeName","src":"10180:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10168:22:7"},"returnParameters":{"id":1467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1466,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1555,"src":"10214:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1465,"name":"uint256","nodeType":"ElementaryTypeName","src":"10214:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10213:9:7"},"scope":2591,"src":"10153:1919:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1575,"nodeType":"Block","src":"12672:82:7","statements":[{"id":1574,"nodeType":"UncheckedBlock","src":"12682:66:7","statements":[{"expression":{"arguments":[{"id":1567,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1558,"src":"12725:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1568,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1560,"src":"12728:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":1569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12732:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12728:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1571,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1560,"src":"12735:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1565,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2591,"src":"12713:4:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$2591_$","typeString":"type(library Math)"}},"id":1566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12718:6:7","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":1612,"src":"12713:11:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":1572,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12713:24:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1564,"id":1573,"nodeType":"Return","src":"12706:31:7"}]}]},"documentation":{"id":1556,"nodeType":"StructuredDocumentation","src":"12078:514:7","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":1576,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"12606:11:7","nodeType":"FunctionDefinition","parameters":{"id":1561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1558,"mutability":"mutable","name":"a","nameLocation":"12626:1:7","nodeType":"VariableDeclaration","scope":1576,"src":"12618:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1557,"name":"uint256","nodeType":"ElementaryTypeName","src":"12618:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1560,"mutability":"mutable","name":"p","nameLocation":"12637:1:7","nodeType":"VariableDeclaration","scope":1576,"src":"12629:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1559,"name":"uint256","nodeType":"ElementaryTypeName","src":"12629:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12617:22:7"},"returnParameters":{"id":1564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1563,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1576,"src":"12663:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1562,"name":"uint256","nodeType":"ElementaryTypeName","src":"12663:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12662:9:7"},"scope":2591,"src":"12597:157:7","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1611,"nodeType":"Block","src":"13524:174:7","statements":[{"assignments":[1589,1591],"declarations":[{"constant":false,"id":1589,"mutability":"mutable","name":"success","nameLocation":"13540:7:7","nodeType":"VariableDeclaration","scope":1611,"src":"13535:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1588,"name":"bool","nodeType":"ElementaryTypeName","src":"13535:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1591,"mutability":"mutable","name":"result","nameLocation":"13557:6:7","nodeType":"VariableDeclaration","scope":1611,"src":"13549:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1590,"name":"uint256","nodeType":"ElementaryTypeName","src":"13549:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1597,"initialValue":{"arguments":[{"id":1593,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1579,"src":"13577:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1594,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1581,"src":"13580:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1595,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1583,"src":"13583:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1592,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[1636,1718],"referencedDeclaration":1636,"src":"13567:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":1596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13567:18:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"13534:51:7"},{"condition":{"id":1599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"13599:8:7","subExpression":{"id":1598,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1589,"src":"13600:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1608,"nodeType":"IfStatement","src":"13595:74:7","trueBody":{"id":1607,"nodeType":"Block","src":"13609:60:7","statements":[{"expression":{"arguments":[{"expression":{"id":1603,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":985,"src":"13635:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$985_$","typeString":"type(library Panic)"}},"id":1604,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13641:16:7","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":952,"src":"13635:22:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1600,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":985,"src":"13623:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$985_$","typeString":"type(library Panic)"}},"id":1602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13629:5:7","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":984,"src":"13623:11:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1605,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13623:35:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1606,"nodeType":"ExpressionStatement","src":"13623:35:7"}]}},{"expression":{"id":1609,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1591,"src":"13685:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1587,"id":1610,"nodeType":"Return","src":"13678:13:7"}]},"documentation":{"id":1577,"nodeType":"StructuredDocumentation","src":"12760:678:7","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":1612,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"13452:6:7","nodeType":"FunctionDefinition","parameters":{"id":1584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1579,"mutability":"mutable","name":"b","nameLocation":"13467:1:7","nodeType":"VariableDeclaration","scope":1612,"src":"13459:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1578,"name":"uint256","nodeType":"ElementaryTypeName","src":"13459:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1581,"mutability":"mutable","name":"e","nameLocation":"13478:1:7","nodeType":"VariableDeclaration","scope":1612,"src":"13470:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1580,"name":"uint256","nodeType":"ElementaryTypeName","src":"13470:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1583,"mutability":"mutable","name":"m","nameLocation":"13489:1:7","nodeType":"VariableDeclaration","scope":1612,"src":"13481:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1582,"name":"uint256","nodeType":"ElementaryTypeName","src":"13481:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13458:33:7"},"returnParameters":{"id":1587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1586,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1612,"src":"13515:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1585,"name":"uint256","nodeType":"ElementaryTypeName","src":"13515:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13514:9:7"},"scope":2591,"src":"13443:255:7","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1635,"nodeType":"Block","src":"14552:1493:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1626,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1619,"src":"14566:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14571:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14566:6:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1633,"nodeType":"IfStatement","src":"14562:29:7","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1629,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14582:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14589:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1631,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"14581:10:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1625,"id":1632,"nodeType":"Return","src":"14574:17:7"}},{"AST":{"nativeSrc":"14626:1413:7","nodeType":"YulBlock","src":"14626:1413:7","statements":[{"nativeSrc":"14640:22:7","nodeType":"YulVariableDeclaration","src":"14640:22:7","value":{"arguments":[{"kind":"number","nativeSrc":"14657:4:7","nodeType":"YulLiteral","src":"14657:4:7","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"14651:5:7","nodeType":"YulIdentifier","src":"14651:5:7"},"nativeSrc":"14651:11:7","nodeType":"YulFunctionCall","src":"14651:11:7"},"variables":[{"name":"ptr","nativeSrc":"14644:3:7","nodeType":"YulTypedName","src":"14644:3:7","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"15570:3:7","nodeType":"YulIdentifier","src":"15570:3:7"},{"kind":"number","nativeSrc":"15575:4:7","nodeType":"YulLiteral","src":"15575:4:7","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"15563:6:7","nodeType":"YulIdentifier","src":"15563:6:7"},"nativeSrc":"15563:17:7","nodeType":"YulFunctionCall","src":"15563:17:7"},"nativeSrc":"15563:17:7","nodeType":"YulExpressionStatement","src":"15563:17:7"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15604:3:7","nodeType":"YulIdentifier","src":"15604:3:7"},{"kind":"number","nativeSrc":"15609:4:7","nodeType":"YulLiteral","src":"15609:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"15600:3:7","nodeType":"YulIdentifier","src":"15600:3:7"},"nativeSrc":"15600:14:7","nodeType":"YulFunctionCall","src":"15600:14:7"},{"kind":"number","nativeSrc":"15616:4:7","nodeType":"YulLiteral","src":"15616:4:7","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"15593:6:7","nodeType":"YulIdentifier","src":"15593:6:7"},"nativeSrc":"15593:28:7","nodeType":"YulFunctionCall","src":"15593:28:7"},"nativeSrc":"15593:28:7","nodeType":"YulExpressionStatement","src":"15593:28:7"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15645:3:7","nodeType":"YulIdentifier","src":"15645:3:7"},{"kind":"number","nativeSrc":"15650:4:7","nodeType":"YulLiteral","src":"15650:4:7","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"15641:3:7","nodeType":"YulIdentifier","src":"15641:3:7"},"nativeSrc":"15641:14:7","nodeType":"YulFunctionCall","src":"15641:14:7"},{"kind":"number","nativeSrc":"15657:4:7","nodeType":"YulLiteral","src":"15657:4:7","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"15634:6:7","nodeType":"YulIdentifier","src":"15634:6:7"},"nativeSrc":"15634:28:7","nodeType":"YulFunctionCall","src":"15634:28:7"},"nativeSrc":"15634:28:7","nodeType":"YulExpressionStatement","src":"15634:28:7"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15686:3:7","nodeType":"YulIdentifier","src":"15686:3:7"},{"kind":"number","nativeSrc":"15691:4:7","nodeType":"YulLiteral","src":"15691:4:7","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"15682:3:7","nodeType":"YulIdentifier","src":"15682:3:7"},"nativeSrc":"15682:14:7","nodeType":"YulFunctionCall","src":"15682:14:7"},{"name":"b","nativeSrc":"15698:1:7","nodeType":"YulIdentifier","src":"15698:1:7"}],"functionName":{"name":"mstore","nativeSrc":"15675:6:7","nodeType":"YulIdentifier","src":"15675:6:7"},"nativeSrc":"15675:25:7","nodeType":"YulFunctionCall","src":"15675:25:7"},"nativeSrc":"15675:25:7","nodeType":"YulExpressionStatement","src":"15675:25:7"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15724:3:7","nodeType":"YulIdentifier","src":"15724:3:7"},{"kind":"number","nativeSrc":"15729:4:7","nodeType":"YulLiteral","src":"15729:4:7","type":"","value":"0x80"}],"functionName":{"name":"add","nativeSrc":"15720:3:7","nodeType":"YulIdentifier","src":"15720:3:7"},"nativeSrc":"15720:14:7","nodeType":"YulFunctionCall","src":"15720:14:7"},{"name":"e","nativeSrc":"15736:1:7","nodeType":"YulIdentifier","src":"15736:1:7"}],"functionName":{"name":"mstore","nativeSrc":"15713:6:7","nodeType":"YulIdentifier","src":"15713:6:7"},"nativeSrc":"15713:25:7","nodeType":"YulFunctionCall","src":"15713:25:7"},"nativeSrc":"15713:25:7","nodeType":"YulExpressionStatement","src":"15713:25:7"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15762:3:7","nodeType":"YulIdentifier","src":"15762:3:7"},{"kind":"number","nativeSrc":"15767:4:7","nodeType":"YulLiteral","src":"15767:4:7","type":"","value":"0xa0"}],"functionName":{"name":"add","nativeSrc":"15758:3:7","nodeType":"YulIdentifier","src":"15758:3:7"},"nativeSrc":"15758:14:7","nodeType":"YulFunctionCall","src":"15758:14:7"},{"name":"m","nativeSrc":"15774:1:7","nodeType":"YulIdentifier","src":"15774:1:7"}],"functionName":{"name":"mstore","nativeSrc":"15751:6:7","nodeType":"YulIdentifier","src":"15751:6:7"},"nativeSrc":"15751:25:7","nodeType":"YulFunctionCall","src":"15751:25:7"},"nativeSrc":"15751:25:7","nodeType":"YulExpressionStatement","src":"15751:25:7"},{"nativeSrc":"15938:57:7","nodeType":"YulAssignment","src":"15938:57:7","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"15960:3:7","nodeType":"YulIdentifier","src":"15960:3:7"},"nativeSrc":"15960:5:7","nodeType":"YulFunctionCall","src":"15960:5:7"},{"kind":"number","nativeSrc":"15967:4:7","nodeType":"YulLiteral","src":"15967:4:7","type":"","value":"0x05"},{"name":"ptr","nativeSrc":"15973:3:7","nodeType":"YulIdentifier","src":"15973:3:7"},{"kind":"number","nativeSrc":"15978:4:7","nodeType":"YulLiteral","src":"15978:4:7","type":"","value":"0xc0"},{"kind":"number","nativeSrc":"15984:4:7","nodeType":"YulLiteral","src":"15984:4:7","type":"","value":"0x00"},{"kind":"number","nativeSrc":"15990:4:7","nodeType":"YulLiteral","src":"15990:4:7","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nativeSrc":"15949:10:7","nodeType":"YulIdentifier","src":"15949:10:7"},"nativeSrc":"15949:46:7","nodeType":"YulFunctionCall","src":"15949:46:7"},"variableNames":[{"name":"success","nativeSrc":"15938:7:7","nodeType":"YulIdentifier","src":"15938:7:7"}]},{"nativeSrc":"16008:21:7","nodeType":"YulAssignment","src":"16008:21:7","value":{"arguments":[{"kind":"number","nativeSrc":"16024:4:7","nodeType":"YulLiteral","src":"16024:4:7","type":"","value":"0x00"}],"functionName":{"name":"mload","nativeSrc":"16018:5:7","nodeType":"YulIdentifier","src":"16018:5:7"},"nativeSrc":"16018:11:7","nodeType":"YulFunctionCall","src":"16018:11:7"},"variableNames":[{"name":"result","nativeSrc":"16008:6:7","nodeType":"YulIdentifier","src":"16008:6:7"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1615,"isOffset":false,"isSlot":false,"src":"15698:1:7","valueSize":1},{"declaration":1617,"isOffset":false,"isSlot":false,"src":"15736:1:7","valueSize":1},{"declaration":1619,"isOffset":false,"isSlot":false,"src":"15774:1:7","valueSize":1},{"declaration":1624,"isOffset":false,"isSlot":false,"src":"16008:6:7","valueSize":1},{"declaration":1622,"isOffset":false,"isSlot":false,"src":"15938:7:7","valueSize":1}],"flags":["memory-safe"],"id":1634,"nodeType":"InlineAssembly","src":"14601:1438:7"}]},"documentation":{"id":1613,"nodeType":"StructuredDocumentation","src":"13704:738:7","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":1636,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"14456:9:7","nodeType":"FunctionDefinition","parameters":{"id":1620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1615,"mutability":"mutable","name":"b","nameLocation":"14474:1:7","nodeType":"VariableDeclaration","scope":1636,"src":"14466:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1614,"name":"uint256","nodeType":"ElementaryTypeName","src":"14466:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1617,"mutability":"mutable","name":"e","nameLocation":"14485:1:7","nodeType":"VariableDeclaration","scope":1636,"src":"14477:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1616,"name":"uint256","nodeType":"ElementaryTypeName","src":"14477:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1619,"mutability":"mutable","name":"m","nameLocation":"14496:1:7","nodeType":"VariableDeclaration","scope":1636,"src":"14488:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1618,"name":"uint256","nodeType":"ElementaryTypeName","src":"14488:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14465:33:7"},"returnParameters":{"id":1625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1622,"mutability":"mutable","name":"success","nameLocation":"14527:7:7","nodeType":"VariableDeclaration","scope":1636,"src":"14522:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1621,"name":"bool","nodeType":"ElementaryTypeName","src":"14522:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1624,"mutability":"mutable","name":"result","nameLocation":"14544:6:7","nodeType":"VariableDeclaration","scope":1636,"src":"14536:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1623,"name":"uint256","nodeType":"ElementaryTypeName","src":"14536:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14521:30:7"},"scope":2591,"src":"14447:1598:7","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1671,"nodeType":"Block","src":"16242:179:7","statements":[{"assignments":[1649,1651],"declarations":[{"constant":false,"id":1649,"mutability":"mutable","name":"success","nameLocation":"16258:7:7","nodeType":"VariableDeclaration","scope":1671,"src":"16253:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1648,"name":"bool","nodeType":"ElementaryTypeName","src":"16253:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1651,"mutability":"mutable","name":"result","nameLocation":"16280:6:7","nodeType":"VariableDeclaration","scope":1671,"src":"16267:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1650,"name":"bytes","nodeType":"ElementaryTypeName","src":"16267:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1657,"initialValue":{"arguments":[{"id":1653,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1639,"src":"16300:1:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1654,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1641,"src":"16303:1:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1655,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1643,"src":"16306:1:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1652,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[1636,1718],"referencedDeclaration":1718,"src":"16290:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":1656,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16290:18:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"16252:56:7"},{"condition":{"id":1659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16322:8:7","subExpression":{"id":1658,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1649,"src":"16323:7:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1668,"nodeType":"IfStatement","src":"16318:74:7","trueBody":{"id":1667,"nodeType":"Block","src":"16332:60:7","statements":[{"expression":{"arguments":[{"expression":{"id":1663,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":985,"src":"16358:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$985_$","typeString":"type(library Panic)"}},"id":1664,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16364:16:7","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":952,"src":"16358:22:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1660,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":985,"src":"16346:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$985_$","typeString":"type(library Panic)"}},"id":1662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16352:5:7","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":984,"src":"16346:11:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1665,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16346:35:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1666,"nodeType":"ExpressionStatement","src":"16346:35:7"}]}},{"expression":{"id":1669,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1651,"src":"16408:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1647,"id":1670,"nodeType":"Return","src":"16401:13:7"}]},"documentation":{"id":1637,"nodeType":"StructuredDocumentation","src":"16051:85:7","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":1672,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"16150:6:7","nodeType":"FunctionDefinition","parameters":{"id":1644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1639,"mutability":"mutable","name":"b","nameLocation":"16170:1:7","nodeType":"VariableDeclaration","scope":1672,"src":"16157:14:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1638,"name":"bytes","nodeType":"ElementaryTypeName","src":"16157:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1641,"mutability":"mutable","name":"e","nameLocation":"16186:1:7","nodeType":"VariableDeclaration","scope":1672,"src":"16173:14:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1640,"name":"bytes","nodeType":"ElementaryTypeName","src":"16173:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1643,"mutability":"mutable","name":"m","nameLocation":"16202:1:7","nodeType":"VariableDeclaration","scope":1672,"src":"16189:14:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1642,"name":"bytes","nodeType":"ElementaryTypeName","src":"16189:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16156:48:7"},"returnParameters":{"id":1647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1646,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1672,"src":"16228:12:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1645,"name":"bytes","nodeType":"ElementaryTypeName","src":"16228:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16227:14:7"},"scope":2591,"src":"16141:280:7","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1717,"nodeType":"Block","src":"16675:771:7","statements":[{"condition":{"arguments":[{"id":1687,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1679,"src":"16700:1:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1686,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1751,"src":"16689:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":1688,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16689:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1696,"nodeType":"IfStatement","src":"16685:47:7","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16712:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":1692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16729:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1691,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"16719:9:7","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1690,"name":"bytes","nodeType":"ElementaryTypeName","src":"16723:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16719:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":1694,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"16711:21:7","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":1685,"id":1695,"nodeType":"Return","src":"16704:28:7"}},{"assignments":[1698],"declarations":[{"constant":false,"id":1698,"mutability":"mutable","name":"mLen","nameLocation":"16751:4:7","nodeType":"VariableDeclaration","scope":1717,"src":"16743:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1697,"name":"uint256","nodeType":"ElementaryTypeName","src":"16743:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1701,"initialValue":{"expression":{"id":1699,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1679,"src":"16758:1:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16760:6:7","memberName":"length","nodeType":"MemberAccess","src":"16758:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16743:23:7"},{"expression":{"id":1714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1702,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1684,"src":"16848:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":1705,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1675,"src":"16874:1:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16876:6:7","memberName":"length","nodeType":"MemberAccess","src":"16874:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1707,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1677,"src":"16884:1:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16886:6:7","memberName":"length","nodeType":"MemberAccess","src":"16884:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1709,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1698,"src":"16894:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1710,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1675,"src":"16900:1:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1711,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1677,"src":"16903:1:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1712,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1679,"src":"16906:1:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1703,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"16857:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1704,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16861:12:7","memberName":"encodePacked","nodeType":"MemberAccess","src":"16857:16:7","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16857:51:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"16848:60:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1715,"nodeType":"ExpressionStatement","src":"16848:60:7"},{"AST":{"nativeSrc":"16944:496:7","nodeType":"YulBlock","src":"16944:496:7","statements":[{"nativeSrc":"16958:32:7","nodeType":"YulVariableDeclaration","src":"16958:32:7","value":{"arguments":[{"name":"result","nativeSrc":"16977:6:7","nodeType":"YulIdentifier","src":"16977:6:7"},{"kind":"number","nativeSrc":"16985:4:7","nodeType":"YulLiteral","src":"16985:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"16973:3:7","nodeType":"YulIdentifier","src":"16973:3:7"},"nativeSrc":"16973:17:7","nodeType":"YulFunctionCall","src":"16973:17:7"},"variables":[{"name":"dataPtr","nativeSrc":"16962:7:7","nodeType":"YulTypedName","src":"16962:7:7","type":""}]},{"nativeSrc":"17080:73:7","nodeType":"YulAssignment","src":"17080:73:7","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"17102:3:7","nodeType":"YulIdentifier","src":"17102:3:7"},"nativeSrc":"17102:5:7","nodeType":"YulFunctionCall","src":"17102:5:7"},{"kind":"number","nativeSrc":"17109:4:7","nodeType":"YulLiteral","src":"17109:4:7","type":"","value":"0x05"},{"name":"dataPtr","nativeSrc":"17115:7:7","nodeType":"YulIdentifier","src":"17115:7:7"},{"arguments":[{"name":"result","nativeSrc":"17130:6:7","nodeType":"YulIdentifier","src":"17130:6:7"}],"functionName":{"name":"mload","nativeSrc":"17124:5:7","nodeType":"YulIdentifier","src":"17124:5:7"},"nativeSrc":"17124:13:7","nodeType":"YulFunctionCall","src":"17124:13:7"},{"name":"dataPtr","nativeSrc":"17139:7:7","nodeType":"YulIdentifier","src":"17139:7:7"},{"name":"mLen","nativeSrc":"17148:4:7","nodeType":"YulIdentifier","src":"17148:4:7"}],"functionName":{"name":"staticcall","nativeSrc":"17091:10:7","nodeType":"YulIdentifier","src":"17091:10:7"},"nativeSrc":"17091:62:7","nodeType":"YulFunctionCall","src":"17091:62:7"},"variableNames":[{"name":"success","nativeSrc":"17080:7:7","nodeType":"YulIdentifier","src":"17080:7:7"}]},{"expression":{"arguments":[{"name":"result","nativeSrc":"17309:6:7","nodeType":"YulIdentifier","src":"17309:6:7"},{"name":"mLen","nativeSrc":"17317:4:7","nodeType":"YulIdentifier","src":"17317:4:7"}],"functionName":{"name":"mstore","nativeSrc":"17302:6:7","nodeType":"YulIdentifier","src":"17302:6:7"},"nativeSrc":"17302:20:7","nodeType":"YulFunctionCall","src":"17302:20:7"},"nativeSrc":"17302:20:7","nodeType":"YulExpressionStatement","src":"17302:20:7"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"17405:4:7","nodeType":"YulLiteral","src":"17405:4:7","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nativeSrc":"17415:7:7","nodeType":"YulIdentifier","src":"17415:7:7"},{"name":"mLen","nativeSrc":"17424:4:7","nodeType":"YulIdentifier","src":"17424:4:7"}],"functionName":{"name":"add","nativeSrc":"17411:3:7","nodeType":"YulIdentifier","src":"17411:3:7"},"nativeSrc":"17411:18:7","nodeType":"YulFunctionCall","src":"17411:18:7"}],"functionName":{"name":"mstore","nativeSrc":"17398:6:7","nodeType":"YulIdentifier","src":"17398:6:7"},"nativeSrc":"17398:32:7","nodeType":"YulFunctionCall","src":"17398:32:7"},"nativeSrc":"17398:32:7","nodeType":"YulExpressionStatement","src":"17398:32:7"}]},"evmVersion":"paris","externalReferences":[{"declaration":1698,"isOffset":false,"isSlot":false,"src":"17148:4:7","valueSize":1},{"declaration":1698,"isOffset":false,"isSlot":false,"src":"17317:4:7","valueSize":1},{"declaration":1698,"isOffset":false,"isSlot":false,"src":"17424:4:7","valueSize":1},{"declaration":1684,"isOffset":false,"isSlot":false,"src":"16977:6:7","valueSize":1},{"declaration":1684,"isOffset":false,"isSlot":false,"src":"17130:6:7","valueSize":1},{"declaration":1684,"isOffset":false,"isSlot":false,"src":"17309:6:7","valueSize":1},{"declaration":1682,"isOffset":false,"isSlot":false,"src":"17080:7:7","valueSize":1}],"flags":["memory-safe"],"id":1716,"nodeType":"InlineAssembly","src":"16919:521:7"}]},"documentation":{"id":1673,"nodeType":"StructuredDocumentation","src":"16427:88:7","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":1718,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"16529:9:7","nodeType":"FunctionDefinition","parameters":{"id":1680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1675,"mutability":"mutable","name":"b","nameLocation":"16561:1:7","nodeType":"VariableDeclaration","scope":1718,"src":"16548:14:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1674,"name":"bytes","nodeType":"ElementaryTypeName","src":"16548:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1677,"mutability":"mutable","name":"e","nameLocation":"16585:1:7","nodeType":"VariableDeclaration","scope":1718,"src":"16572:14:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1676,"name":"bytes","nodeType":"ElementaryTypeName","src":"16572:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1679,"mutability":"mutable","name":"m","nameLocation":"16609:1:7","nodeType":"VariableDeclaration","scope":1718,"src":"16596:14:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1678,"name":"bytes","nodeType":"ElementaryTypeName","src":"16596:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16538:78:7"},"returnParameters":{"id":1685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1682,"mutability":"mutable","name":"success","nameLocation":"16645:7:7","nodeType":"VariableDeclaration","scope":1718,"src":"16640:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1681,"name":"bool","nodeType":"ElementaryTypeName","src":"16640:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1684,"mutability":"mutable","name":"result","nameLocation":"16667:6:7","nodeType":"VariableDeclaration","scope":1718,"src":"16654:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1683,"name":"bytes","nodeType":"ElementaryTypeName","src":"16654:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16639:35:7"},"scope":2591,"src":"16520:926:7","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1750,"nodeType":"Block","src":"17601:176:7","statements":[{"body":{"id":1746,"nodeType":"Block","src":"17658:92:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":1741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":1737,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1721,"src":"17676:9:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1739,"indexExpression":{"id":1738,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1727,"src":"17686:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17676:12:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17692:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17676:17:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1745,"nodeType":"IfStatement","src":"17672:68:7","trueBody":{"id":1744,"nodeType":"Block","src":"17695:45:7","statements":[{"expression":{"hexValue":"66616c7365","id":1742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17720:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":1725,"id":1743,"nodeType":"Return","src":"17713:12:7"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1730,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1727,"src":"17631:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1731,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1721,"src":"17635:9:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17645:6:7","memberName":"length","nodeType":"MemberAccess","src":"17635:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17631:20:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1747,"initializationExpression":{"assignments":[1727],"declarations":[{"constant":false,"id":1727,"mutability":"mutable","name":"i","nameLocation":"17624:1:7","nodeType":"VariableDeclaration","scope":1747,"src":"17616:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1726,"name":"uint256","nodeType":"ElementaryTypeName","src":"17616:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1729,"initialValue":{"hexValue":"30","id":1728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17628:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17616:13:7"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":1735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"17653:3:7","subExpression":{"id":1734,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1727,"src":"17655:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1736,"nodeType":"ExpressionStatement","src":"17653:3:7"},"nodeType":"ForStatement","src":"17611:139:7"},{"expression":{"hexValue":"74727565","id":1748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17766:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1725,"id":1749,"nodeType":"Return","src":"17759:11:7"}]},"documentation":{"id":1719,"nodeType":"StructuredDocumentation","src":"17452:72:7","text":" @dev Returns whether the provided byte array is zero."},"id":1751,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"17538:10:7","nodeType":"FunctionDefinition","parameters":{"id":1722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1721,"mutability":"mutable","name":"byteArray","nameLocation":"17562:9:7","nodeType":"VariableDeclaration","scope":1751,"src":"17549:22:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1720,"name":"bytes","nodeType":"ElementaryTypeName","src":"17549:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"17548:24:7"},"returnParameters":{"id":1725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1724,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1751,"src":"17595:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1723,"name":"bool","nodeType":"ElementaryTypeName","src":"17595:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"17594:6:7"},"scope":2591,"src":"17529:248:7","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1969,"nodeType":"Block","src":"18137:5124:7","statements":[{"id":1968,"nodeType":"UncheckedBlock","src":"18147:5108:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1759,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1754,"src":"18241:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":1760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18246:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"18241:6:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1765,"nodeType":"IfStatement","src":"18237:53:7","trueBody":{"id":1764,"nodeType":"Block","src":"18249:41:7","statements":[{"expression":{"id":1762,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1754,"src":"18274:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1758,"id":1763,"nodeType":"Return","src":"18267:8:7"}]}},{"assignments":[1767],"declarations":[{"constant":false,"id":1767,"mutability":"mutable","name":"aa","nameLocation":"19225:2:7","nodeType":"VariableDeclaration","scope":1968,"src":"19217:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1766,"name":"uint256","nodeType":"ElementaryTypeName","src":"19217:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1769,"initialValue":{"id":1768,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1754,"src":"19230:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19217:14:7"},{"assignments":[1771],"declarations":[{"constant":false,"id":1771,"mutability":"mutable","name":"xn","nameLocation":"19253:2:7","nodeType":"VariableDeclaration","scope":1968,"src":"19245:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1770,"name":"uint256","nodeType":"ElementaryTypeName","src":"19245:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1773,"initialValue":{"hexValue":"31","id":1772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19258:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"19245:14:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1774,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1767,"src":"19278:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":1777,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19285:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":1776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19290:3:7","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"19285:8:7","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":1778,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19284:10:7","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"19278:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1789,"nodeType":"IfStatement","src":"19274:92:7","trueBody":{"id":1788,"nodeType":"Block","src":"19296:70:7","statements":[{"expression":{"id":1782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1780,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1767,"src":"19314:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":1781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19321:3:7","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"19314:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1783,"nodeType":"ExpressionStatement","src":"19314:10:7"},{"expression":{"id":1786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1784,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"19342:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":1785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19349:2:7","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19342:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1787,"nodeType":"ExpressionStatement","src":"19342:9:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1790,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1767,"src":"19383:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":1793,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19390:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":1792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19395:2:7","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19390:7:7","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":1794,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19389:9:7","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"19383:15:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1805,"nodeType":"IfStatement","src":"19379:90:7","trueBody":{"id":1804,"nodeType":"Block","src":"19400:69:7","statements":[{"expression":{"id":1798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1796,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1767,"src":"19418:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":1797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19425:2:7","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19418:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1799,"nodeType":"ExpressionStatement","src":"19418:9:7"},{"expression":{"id":1802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1800,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"19445:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":1801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19452:2:7","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19445:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1803,"nodeType":"ExpressionStatement","src":"19445:9:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1806,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1767,"src":"19486:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":1809,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19493:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":1808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19498:2:7","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19493:7:7","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":1810,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19492:9:7","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"19486:15:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1821,"nodeType":"IfStatement","src":"19482:90:7","trueBody":{"id":1820,"nodeType":"Block","src":"19503:69:7","statements":[{"expression":{"id":1814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1812,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1767,"src":"19521:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":1813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19528:2:7","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19521:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1815,"nodeType":"ExpressionStatement","src":"19521:9:7"},{"expression":{"id":1818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1816,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"19548:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":1817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19555:2:7","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19548:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1819,"nodeType":"ExpressionStatement","src":"19548:9:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1822,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1767,"src":"19589:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":1825,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19596:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":1824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19601:2:7","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19596:7:7","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":1826,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19595:9:7","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"19589:15:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1837,"nodeType":"IfStatement","src":"19585:89:7","trueBody":{"id":1836,"nodeType":"Block","src":"19606:68:7","statements":[{"expression":{"id":1830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1828,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1767,"src":"19624:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":1829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19631:2:7","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19624:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1831,"nodeType":"ExpressionStatement","src":"19624:9:7"},{"expression":{"id":1834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1832,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"19651:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":1833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19658:1:7","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19651:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1835,"nodeType":"ExpressionStatement","src":"19651:8:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1838,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1767,"src":"19691:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":1841,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19698:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":1840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19703:1:7","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19698:6:7","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":1842,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19697:8:7","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"19691:14:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1853,"nodeType":"IfStatement","src":"19687:87:7","trueBody":{"id":1852,"nodeType":"Block","src":"19707:67:7","statements":[{"expression":{"id":1846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1844,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1767,"src":"19725:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":1845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19732:1:7","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19725:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1847,"nodeType":"ExpressionStatement","src":"19725:8:7"},{"expression":{"id":1850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1848,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"19751:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":1849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19758:1:7","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19751:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1851,"nodeType":"ExpressionStatement","src":"19751:8:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1854,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1767,"src":"19791:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":1857,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19798:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":1856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19803:1:7","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19798:6:7","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":1858,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19797:8:7","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"19791:14:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1869,"nodeType":"IfStatement","src":"19787:87:7","trueBody":{"id":1868,"nodeType":"Block","src":"19807:67:7","statements":[{"expression":{"id":1862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1860,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1767,"src":"19825:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19832:1:7","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19825:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1863,"nodeType":"ExpressionStatement","src":"19825:8:7"},{"expression":{"id":1866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1864,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"19851:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":1865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19858:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"19851:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1867,"nodeType":"ExpressionStatement","src":"19851:8:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1870,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1767,"src":"19891:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":1873,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19898:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":1872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19903:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"19898:6:7","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":1874,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19897:8:7","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"19891:14:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1881,"nodeType":"IfStatement","src":"19887:61:7","trueBody":{"id":1880,"nodeType":"Block","src":"19907:41:7","statements":[{"expression":{"id":1878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1876,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"19925:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":1877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19932:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"19925:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1879,"nodeType":"ExpressionStatement","src":"19925:8:7"}]}},{"expression":{"id":1889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1882,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"20368:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":1883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20374:1:7","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1884,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"20378:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20374:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1886,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20373:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20385:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20373:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20368:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1890,"nodeType":"ExpressionStatement","src":"20368:18:7"},{"expression":{"id":1900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1891,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"22273:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1892,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"22279:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1893,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1754,"src":"22284:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1894,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"22288:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22284:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22279:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1897,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22278:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22295:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22278:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22273:23:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1901,"nodeType":"ExpressionStatement","src":"22273:23:7"},{"expression":{"id":1911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1902,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"22382:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1903,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"22388:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1904,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1754,"src":"22393:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1905,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"22397:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22393:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22388:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1908,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22387:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22404:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22387:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22382:23:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1912,"nodeType":"ExpressionStatement","src":"22382:23:7"},{"expression":{"id":1922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1913,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"22493:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1914,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"22499:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1915,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1754,"src":"22504:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1916,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"22508:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22504:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22499:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1919,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22498:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22515:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22498:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22493:23:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1923,"nodeType":"ExpressionStatement","src":"22493:23:7"},{"expression":{"id":1933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1924,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"22602:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1925,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"22608:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1926,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1754,"src":"22613:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1927,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"22617:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22613:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22608:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1930,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22607:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22624:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22607:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22602:23:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1934,"nodeType":"ExpressionStatement","src":"22602:23:7"},{"expression":{"id":1944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1935,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"22712:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1936,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"22718:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1937,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1754,"src":"22723:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1938,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"22727:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22723:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22718:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1941,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22717:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22734:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22717:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22712:23:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1945,"nodeType":"ExpressionStatement","src":"22712:23:7"},{"expression":{"id":1955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1946,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"22822:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1947,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"22828:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1948,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1754,"src":"22833:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1949,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"22837:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22833:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22828:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1952,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22827:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22844:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22827:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22822:23:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1956,"nodeType":"ExpressionStatement","src":"22822:23:7"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1957,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"23211:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1960,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"23232:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1961,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1754,"src":"23237:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1962,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"23241:2:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23237:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23232:11:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1958,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4356,"src":"23216:8:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4356_$","typeString":"type(library SafeCast)"}},"id":1959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23225:6:7","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4355,"src":"23216:15:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":1965,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23216:28:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23211:33:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1758,"id":1967,"nodeType":"Return","src":"23204:40:7"}]}]},"documentation":{"id":1752,"nodeType":"StructuredDocumentation","src":"17783:292:7","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":1970,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"18089:4:7","nodeType":"FunctionDefinition","parameters":{"id":1755,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1754,"mutability":"mutable","name":"a","nameLocation":"18102:1:7","nodeType":"VariableDeclaration","scope":1970,"src":"18094:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1753,"name":"uint256","nodeType":"ElementaryTypeName","src":"18094:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18093:11:7"},"returnParameters":{"id":1758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1757,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1970,"src":"18128:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1756,"name":"uint256","nodeType":"ElementaryTypeName","src":"18128:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18127:9:7"},"scope":2591,"src":"18080:5181:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2003,"nodeType":"Block","src":"23434:171:7","statements":[{"id":2002,"nodeType":"UncheckedBlock","src":"23444:155:7","statements":[{"assignments":[1982],"declarations":[{"constant":false,"id":1982,"mutability":"mutable","name":"result","nameLocation":"23476:6:7","nodeType":"VariableDeclaration","scope":2002,"src":"23468:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1981,"name":"uint256","nodeType":"ElementaryTypeName","src":"23468:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1986,"initialValue":{"arguments":[{"id":1984,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1973,"src":"23490:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1983,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[1970,2004],"referencedDeclaration":1970,"src":"23485:4:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23485:7:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"23468:24:7"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1987,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"23513:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1991,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1976,"src":"23555:8:7","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$997","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$997","typeString":"enum Math.Rounding"}],"id":1990,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2590,"src":"23538:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$997_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":1992,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23538:26:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1993,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"23568:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1994,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"23577:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23568:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1996,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1973,"src":"23586:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23568:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"23538:49:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":1988,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4356,"src":"23522:8:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4356_$","typeString":"type(library SafeCast)"}},"id":1989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23531:6:7","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4355,"src":"23522:15:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":1999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23522:66:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23513:75:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1980,"id":2001,"nodeType":"Return","src":"23506:82:7"}]}]},"documentation":{"id":1971,"nodeType":"StructuredDocumentation","src":"23267:86:7","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":2004,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"23367:4:7","nodeType":"FunctionDefinition","parameters":{"id":1977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1973,"mutability":"mutable","name":"a","nameLocation":"23380:1:7","nodeType":"VariableDeclaration","scope":2004,"src":"23372:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1972,"name":"uint256","nodeType":"ElementaryTypeName","src":"23372:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1976,"mutability":"mutable","name":"rounding","nameLocation":"23392:8:7","nodeType":"VariableDeclaration","scope":2004,"src":"23383:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$997","typeString":"enum Math.Rounding"},"typeName":{"id":1975,"nodeType":"UserDefinedTypeName","pathNode":{"id":1974,"name":"Rounding","nameLocations":["23383:8:7"],"nodeType":"IdentifierPath","referencedDeclaration":997,"src":"23383:8:7"},"referencedDeclaration":997,"src":"23383:8:7","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$997","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"23371:30:7"},"returnParameters":{"id":1980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1979,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2004,"src":"23425:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1978,"name":"uint256","nodeType":"ElementaryTypeName","src":"23425:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23424:9:7"},"scope":2591,"src":"23358:247:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2199,"nodeType":"Block","src":"23796:981:7","statements":[{"assignments":[2013],"declarations":[{"constant":false,"id":2013,"mutability":"mutable","name":"result","nameLocation":"23814:6:7","nodeType":"VariableDeclaration","scope":2199,"src":"23806:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2012,"name":"uint256","nodeType":"ElementaryTypeName","src":"23806:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2015,"initialValue":{"hexValue":"30","id":2014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23823:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"23806:18:7"},{"assignments":[2017],"declarations":[{"constant":false,"id":2017,"mutability":"mutable","name":"exp","nameLocation":"23842:3:7","nodeType":"VariableDeclaration","scope":2199,"src":"23834:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2016,"name":"uint256","nodeType":"ElementaryTypeName","src":"23834:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2018,"nodeType":"VariableDeclarationStatement","src":"23834:11:7"},{"id":2196,"nodeType":"UncheckedBlock","src":"23855:893:7","statements":[{"expression":{"id":2033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2019,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2017,"src":"23879:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"313238","id":2020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23885:3:7","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2023,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2007,"src":"23907:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"id":2029,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":2026,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23916:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":2025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23921:3:7","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"23916:8:7","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":2027,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"23915:10:7","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23928:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"23915:14:7","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"}},"src":"23907:22:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2021,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4356,"src":"23891:8:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4356_$","typeString":"type(library SafeCast)"}},"id":2022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23900:6:7","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4355,"src":"23891:15:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23891:39:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23885:45:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23879:51:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2034,"nodeType":"ExpressionStatement","src":"23879:51:7"},{"expression":{"id":2037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2035,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2007,"src":"23944:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":2036,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2017,"src":"23954:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23944:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2038,"nodeType":"ExpressionStatement","src":"23944:13:7"},{"expression":{"id":2041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2039,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2013,"src":"23971:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2040,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2017,"src":"23981:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23971:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2042,"nodeType":"ExpressionStatement","src":"23971:13:7"},{"expression":{"id":2057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2043,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2017,"src":"23999:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3634","id":2044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24005:2:7","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2047,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2007,"src":"24026:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"id":2053,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":2050,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24035:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":2049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24040:2:7","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"24035:7:7","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":2051,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24034:9:7","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2052,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24046:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24034:13:7","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"}},"src":"24026:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2045,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4356,"src":"24010:8:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4356_$","typeString":"type(library SafeCast)"}},"id":2046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24019:6:7","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4355,"src":"24010:15:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2055,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24010:38:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24005:43:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23999:49:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2058,"nodeType":"ExpressionStatement","src":"23999:49:7"},{"expression":{"id":2061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2059,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2007,"src":"24062:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":2060,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2017,"src":"24072:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24062:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2062,"nodeType":"ExpressionStatement","src":"24062:13:7"},{"expression":{"id":2065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2063,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2013,"src":"24089:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2064,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2017,"src":"24099:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24089:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2066,"nodeType":"ExpressionStatement","src":"24089:13:7"},{"expression":{"id":2081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2067,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2017,"src":"24117:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3332","id":2068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24123:2:7","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2071,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2007,"src":"24144:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"id":2077,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":2074,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24153:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":2073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24158:2:7","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"24153:7:7","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":2075,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24152:9:7","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2076,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24164:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24152:13:7","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"}},"src":"24144:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2069,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4356,"src":"24128:8:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4356_$","typeString":"type(library SafeCast)"}},"id":2070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24137:6:7","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4355,"src":"24128:15:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2079,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24128:38:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24123:43:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24117:49:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2082,"nodeType":"ExpressionStatement","src":"24117:49:7"},{"expression":{"id":2085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2083,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2007,"src":"24180:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":2084,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2017,"src":"24190:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24180:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2086,"nodeType":"ExpressionStatement","src":"24180:13:7"},{"expression":{"id":2089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2087,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2013,"src":"24207:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2088,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2017,"src":"24217:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24207:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2090,"nodeType":"ExpressionStatement","src":"24207:13:7"},{"expression":{"id":2105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2091,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2017,"src":"24235:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3136","id":2092,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24241:2:7","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2095,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2007,"src":"24262:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"id":2101,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":2098,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2096,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24271:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":2097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24276:2:7","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"24271:7:7","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":2099,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24270:9:7","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24282:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24270:13:7","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"}},"src":"24262:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2093,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4356,"src":"24246:8:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4356_$","typeString":"type(library SafeCast)"}},"id":2094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24255:6:7","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4355,"src":"24246:15:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24246:38:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24241:43:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24235:49:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2106,"nodeType":"ExpressionStatement","src":"24235:49:7"},{"expression":{"id":2109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2107,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2007,"src":"24298:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":2108,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2017,"src":"24308:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24298:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2110,"nodeType":"ExpressionStatement","src":"24298:13:7"},{"expression":{"id":2113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2111,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2013,"src":"24325:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2112,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2017,"src":"24335:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24325:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2114,"nodeType":"ExpressionStatement","src":"24325:13:7"},{"expression":{"id":2129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2115,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2017,"src":"24353:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"38","id":2116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24359:1:7","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2119,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2007,"src":"24379:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"id":2125,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":2122,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24388:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":2121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24393:1:7","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"24388:6:7","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":2123,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24387:8:7","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24398:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24387:12:7","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"}},"src":"24379:20:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2117,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4356,"src":"24363:8:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4356_$","typeString":"type(library SafeCast)"}},"id":2118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24372:6:7","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4355,"src":"24363:15:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24363:37:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24359:41:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24353:47:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2130,"nodeType":"ExpressionStatement","src":"24353:47:7"},{"expression":{"id":2133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2131,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2007,"src":"24414:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":2132,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2017,"src":"24424:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24414:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2134,"nodeType":"ExpressionStatement","src":"24414:13:7"},{"expression":{"id":2137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2135,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2013,"src":"24441:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2136,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2017,"src":"24451:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24441:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2138,"nodeType":"ExpressionStatement","src":"24441:13:7"},{"expression":{"id":2153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2139,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2017,"src":"24469:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"34","id":2140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24475:1:7","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2143,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2007,"src":"24495:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"id":2149,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":2146,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24504:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":2145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24509:1:7","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"24504:6:7","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":2147,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24503:8:7","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24514:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24503:12:7","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"}},"src":"24495:20:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2141,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4356,"src":"24479:8:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4356_$","typeString":"type(library SafeCast)"}},"id":2142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24488:6:7","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4355,"src":"24479:15:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24479:37:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24475:41:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24469:47:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2154,"nodeType":"ExpressionStatement","src":"24469:47:7"},{"expression":{"id":2157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2155,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2007,"src":"24530:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":2156,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2017,"src":"24540:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24530:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2158,"nodeType":"ExpressionStatement","src":"24530:13:7"},{"expression":{"id":2161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2159,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2013,"src":"24557:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2160,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2017,"src":"24567:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24557:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2162,"nodeType":"ExpressionStatement","src":"24557:13:7"},{"expression":{"id":2177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2163,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2017,"src":"24585:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24591:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2167,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2007,"src":"24611:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"id":2173,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":2170,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24620:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":2169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24625:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"24620:6:7","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":2171,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24619:8:7","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24630:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24619:12:7","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"}},"src":"24611:20:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2165,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4356,"src":"24595:8:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4356_$","typeString":"type(library SafeCast)"}},"id":2166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24604:6:7","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4355,"src":"24595:15:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2175,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24595:37:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24591:41:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24585:47:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2178,"nodeType":"ExpressionStatement","src":"24585:47:7"},{"expression":{"id":2181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2179,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2007,"src":"24646:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":2180,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2017,"src":"24656:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24646:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2182,"nodeType":"ExpressionStatement","src":"24646:13:7"},{"expression":{"id":2185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2183,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2013,"src":"24673:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2184,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2017,"src":"24683:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24673:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2186,"nodeType":"ExpressionStatement","src":"24673:13:7"},{"expression":{"id":2194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2187,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2013,"src":"24701:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2190,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2007,"src":"24727:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24735:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24727:9:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2188,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4356,"src":"24711:8:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4356_$","typeString":"type(library SafeCast)"}},"id":2189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24720:6:7","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4355,"src":"24711:15:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24711:26:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24701:36:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2195,"nodeType":"ExpressionStatement","src":"24701:36:7"}]},{"expression":{"id":2197,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2013,"src":"24764:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2011,"id":2198,"nodeType":"Return","src":"24757:13:7"}]},"documentation":{"id":2005,"nodeType":"StructuredDocumentation","src":"23611:119:7","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":2200,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"23744:4:7","nodeType":"FunctionDefinition","parameters":{"id":2008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2007,"mutability":"mutable","name":"value","nameLocation":"23757:5:7","nodeType":"VariableDeclaration","scope":2200,"src":"23749:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2006,"name":"uint256","nodeType":"ElementaryTypeName","src":"23749:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23748:15:7"},"returnParameters":{"id":2011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2010,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2200,"src":"23787:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2009,"name":"uint256","nodeType":"ElementaryTypeName","src":"23787:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23786:9:7"},"scope":2591,"src":"23735:1042:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2233,"nodeType":"Block","src":"25010:175:7","statements":[{"id":2232,"nodeType":"UncheckedBlock","src":"25020:159:7","statements":[{"assignments":[2212],"declarations":[{"constant":false,"id":2212,"mutability":"mutable","name":"result","nameLocation":"25052:6:7","nodeType":"VariableDeclaration","scope":2232,"src":"25044:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2211,"name":"uint256","nodeType":"ElementaryTypeName","src":"25044:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2216,"initialValue":{"arguments":[{"id":2214,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2203,"src":"25066:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2213,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[2200,2234],"referencedDeclaration":2200,"src":"25061:4:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25061:11:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25044:28:7"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2217,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2212,"src":"25093:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2221,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2206,"src":"25135:8:7","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$997","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$997","typeString":"enum Math.Rounding"}],"id":2220,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2590,"src":"25118:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$997_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":2222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25118:26:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25148:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":2224,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2212,"src":"25153:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25148:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2226,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2203,"src":"25162:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25148:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"25118:49:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2218,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4356,"src":"25102:8:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4356_$","typeString":"type(library SafeCast)"}},"id":2219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25111:6:7","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4355,"src":"25102:15:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25102:66:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25093:75:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2210,"id":2231,"nodeType":"Return","src":"25086:82:7"}]}]},"documentation":{"id":2201,"nodeType":"StructuredDocumentation","src":"24783:142:7","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":2234,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"24939:4:7","nodeType":"FunctionDefinition","parameters":{"id":2207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2203,"mutability":"mutable","name":"value","nameLocation":"24952:5:7","nodeType":"VariableDeclaration","scope":2234,"src":"24944:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2202,"name":"uint256","nodeType":"ElementaryTypeName","src":"24944:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2206,"mutability":"mutable","name":"rounding","nameLocation":"24968:8:7","nodeType":"VariableDeclaration","scope":2234,"src":"24959:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$997","typeString":"enum Math.Rounding"},"typeName":{"id":2205,"nodeType":"UserDefinedTypeName","pathNode":{"id":2204,"name":"Rounding","nameLocations":["24959:8:7"],"nodeType":"IdentifierPath","referencedDeclaration":997,"src":"24959:8:7"},"referencedDeclaration":997,"src":"24959:8:7","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$997","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"24943:34:7"},"returnParameters":{"id":2210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2209,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2234,"src":"25001:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2208,"name":"uint256","nodeType":"ElementaryTypeName","src":"25001:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25000:9:7"},"scope":2591,"src":"24930:255:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2362,"nodeType":"Block","src":"25378:854:7","statements":[{"assignments":[2243],"declarations":[{"constant":false,"id":2243,"mutability":"mutable","name":"result","nameLocation":"25396:6:7","nodeType":"VariableDeclaration","scope":2362,"src":"25388:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2242,"name":"uint256","nodeType":"ElementaryTypeName","src":"25388:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2245,"initialValue":{"hexValue":"30","id":2244,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25405:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"25388:18:7"},{"id":2359,"nodeType":"UncheckedBlock","src":"25416:787:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2246,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2237,"src":"25444:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":2249,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25453:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":2248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25459:2:7","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25453:8:7","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"25444:17:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2262,"nodeType":"IfStatement","src":"25440:103:7","trueBody":{"id":2261,"nodeType":"Block","src":"25463:80:7","statements":[{"expression":{"id":2255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2251,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2237,"src":"25481:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":2254,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25490:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":2253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25496:2:7","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25490:8:7","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"25481:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2256,"nodeType":"ExpressionStatement","src":"25481:17:7"},{"expression":{"id":2259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2257,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2243,"src":"25516:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":2258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25526:2:7","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25516:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2260,"nodeType":"ExpressionStatement","src":"25516:12:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2263,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2237,"src":"25560:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":2266,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25569:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":2265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25575:2:7","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25569:8:7","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"25560:17:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2279,"nodeType":"IfStatement","src":"25556:103:7","trueBody":{"id":2278,"nodeType":"Block","src":"25579:80:7","statements":[{"expression":{"id":2272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2268,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2237,"src":"25597:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":2271,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25606:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":2270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25612:2:7","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25606:8:7","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"25597:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2273,"nodeType":"ExpressionStatement","src":"25597:17:7"},{"expression":{"id":2276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2274,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2243,"src":"25632:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":2275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25642:2:7","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25632:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2277,"nodeType":"ExpressionStatement","src":"25632:12:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2280,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2237,"src":"25676:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":2283,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25685:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":2282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25691:2:7","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25685:8:7","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"25676:17:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2296,"nodeType":"IfStatement","src":"25672:103:7","trueBody":{"id":2295,"nodeType":"Block","src":"25695:80:7","statements":[{"expression":{"id":2289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2285,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2237,"src":"25713:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":2288,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25722:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":2287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25728:2:7","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25722:8:7","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"25713:17:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2290,"nodeType":"ExpressionStatement","src":"25713:17:7"},{"expression":{"id":2293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2291,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2243,"src":"25748:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":2292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25758:2:7","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25748:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2294,"nodeType":"ExpressionStatement","src":"25748:12:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2297,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2237,"src":"25792:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":2300,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25801:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":2299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25807:1:7","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25801:7:7","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"25792:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2313,"nodeType":"IfStatement","src":"25788:100:7","trueBody":{"id":2312,"nodeType":"Block","src":"25810:78:7","statements":[{"expression":{"id":2306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2302,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2237,"src":"25828:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":2305,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25837:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":2304,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25843:1:7","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25837:7:7","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"25828:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2307,"nodeType":"ExpressionStatement","src":"25828:16:7"},{"expression":{"id":2310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2308,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2243,"src":"25862:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":2309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25872:1:7","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25862:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2311,"nodeType":"ExpressionStatement","src":"25862:11:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2314,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2237,"src":"25905:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":2317,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25914:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":2316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25920:1:7","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25914:7:7","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"25905:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2330,"nodeType":"IfStatement","src":"25901:100:7","trueBody":{"id":2329,"nodeType":"Block","src":"25923:78:7","statements":[{"expression":{"id":2323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2319,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2237,"src":"25941:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":2322,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2320,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25950:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":2321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25956:1:7","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25950:7:7","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"25941:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2324,"nodeType":"ExpressionStatement","src":"25941:16:7"},{"expression":{"id":2327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2325,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2243,"src":"25975:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":2326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25985:1:7","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25975:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2328,"nodeType":"ExpressionStatement","src":"25975:11:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2331,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2237,"src":"26018:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":2334,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26027:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":2333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26033:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26027:7:7","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"26018:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2347,"nodeType":"IfStatement","src":"26014:100:7","trueBody":{"id":2346,"nodeType":"Block","src":"26036:78:7","statements":[{"expression":{"id":2340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2336,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2237,"src":"26054:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":2339,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26063:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":2338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26069:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26063:7:7","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"26054:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2341,"nodeType":"ExpressionStatement","src":"26054:16:7"},{"expression":{"id":2344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2342,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2243,"src":"26088:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":2343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26098:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26088:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2345,"nodeType":"ExpressionStatement","src":"26088:11:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2348,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2237,"src":"26131:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":2351,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26140:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":2350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26146:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"26140:7:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"26131:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2358,"nodeType":"IfStatement","src":"26127:66:7","trueBody":{"id":2357,"nodeType":"Block","src":"26149:44:7","statements":[{"expression":{"id":2355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2353,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2243,"src":"26167:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26177:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"26167:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2356,"nodeType":"ExpressionStatement","src":"26167:11:7"}]}}]},{"expression":{"id":2360,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2243,"src":"26219:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2241,"id":2361,"nodeType":"Return","src":"26212:13:7"}]},"documentation":{"id":2235,"nodeType":"StructuredDocumentation","src":"25191:120:7","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":2363,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"25325:5:7","nodeType":"FunctionDefinition","parameters":{"id":2238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2237,"mutability":"mutable","name":"value","nameLocation":"25339:5:7","nodeType":"VariableDeclaration","scope":2363,"src":"25331:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2236,"name":"uint256","nodeType":"ElementaryTypeName","src":"25331:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25330:15:7"},"returnParameters":{"id":2241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2240,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2363,"src":"25369:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2239,"name":"uint256","nodeType":"ElementaryTypeName","src":"25369:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25368:9:7"},"scope":2591,"src":"25316:916:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2396,"nodeType":"Block","src":"26467:177:7","statements":[{"id":2395,"nodeType":"UncheckedBlock","src":"26477:161:7","statements":[{"assignments":[2375],"declarations":[{"constant":false,"id":2375,"mutability":"mutable","name":"result","nameLocation":"26509:6:7","nodeType":"VariableDeclaration","scope":2395,"src":"26501:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2374,"name":"uint256","nodeType":"ElementaryTypeName","src":"26501:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2379,"initialValue":{"arguments":[{"id":2377,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2366,"src":"26524:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2376,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[2363,2397],"referencedDeclaration":2363,"src":"26518:5:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26518:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"26501:29:7"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2380,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2375,"src":"26551:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2384,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2369,"src":"26593:8:7","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$997","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$997","typeString":"enum Math.Rounding"}],"id":2383,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2590,"src":"26576:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$997_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":2385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26576:26:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26606:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":2387,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2375,"src":"26612:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26606:12:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2389,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2366,"src":"26621:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26606:20:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26576:50:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2381,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4356,"src":"26560:8:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4356_$","typeString":"type(library SafeCast)"}},"id":2382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26569:6:7","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4355,"src":"26560:15:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26560:67:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26551:76:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2373,"id":2394,"nodeType":"Return","src":"26544:83:7"}]}]},"documentation":{"id":2364,"nodeType":"StructuredDocumentation","src":"26238:143:7","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":2397,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"26395:5:7","nodeType":"FunctionDefinition","parameters":{"id":2370,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2366,"mutability":"mutable","name":"value","nameLocation":"26409:5:7","nodeType":"VariableDeclaration","scope":2397,"src":"26401:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2365,"name":"uint256","nodeType":"ElementaryTypeName","src":"26401:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2369,"mutability":"mutable","name":"rounding","nameLocation":"26425:8:7","nodeType":"VariableDeclaration","scope":2397,"src":"26416:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$997","typeString":"enum Math.Rounding"},"typeName":{"id":2368,"nodeType":"UserDefinedTypeName","pathNode":{"id":2367,"name":"Rounding","nameLocations":["26416:8:7"],"nodeType":"IdentifierPath","referencedDeclaration":997,"src":"26416:8:7"},"referencedDeclaration":997,"src":"26416:8:7","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$997","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"26400:34:7"},"returnParameters":{"id":2373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2372,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2397,"src":"26458:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2371,"name":"uint256","nodeType":"ElementaryTypeName","src":"26458:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26457:9:7"},"scope":2591,"src":"26386:258:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2533,"nodeType":"Block","src":"26964:674:7","statements":[{"assignments":[2406],"declarations":[{"constant":false,"id":2406,"mutability":"mutable","name":"result","nameLocation":"26982:6:7","nodeType":"VariableDeclaration","scope":2533,"src":"26974:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2405,"name":"uint256","nodeType":"ElementaryTypeName","src":"26974:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2408,"initialValue":{"hexValue":"30","id":2407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26991:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"26974:18:7"},{"assignments":[2410],"declarations":[{"constant":false,"id":2410,"mutability":"mutable","name":"isGt","nameLocation":"27010:4:7","nodeType":"VariableDeclaration","scope":2533,"src":"27002:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2409,"name":"uint256","nodeType":"ElementaryTypeName","src":"27002:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2411,"nodeType":"VariableDeclarationStatement","src":"27002:12:7"},{"id":2530,"nodeType":"UncheckedBlock","src":"27024:585:7","statements":[{"expression":{"id":2424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2412,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2410,"src":"27048:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2415,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2400,"src":"27071:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"id":2421,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":2418,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27080:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":2417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27085:3:7","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"27080:8:7","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":2419,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27079:10:7","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27092:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27079:14:7","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"}},"src":"27071:22:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2413,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4356,"src":"27055:8:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4356_$","typeString":"type(library SafeCast)"}},"id":2414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27064:6:7","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4355,"src":"27055:15:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27055:39:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27048:46:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2425,"nodeType":"ExpressionStatement","src":"27048:46:7"},{"expression":{"id":2430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2426,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2400,"src":"27108:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2427,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2410,"src":"27118:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"313238","id":2428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27125:3:7","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"27118:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27108:20:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2431,"nodeType":"ExpressionStatement","src":"27108:20:7"},{"expression":{"id":2436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2432,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2406,"src":"27142:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2433,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2410,"src":"27152:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3136","id":2434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27159:2:7","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27152:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27142:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2437,"nodeType":"ExpressionStatement","src":"27142:19:7"},{"expression":{"id":2450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2438,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2410,"src":"27176:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2441,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2400,"src":"27199:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"id":2447,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":2444,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2442,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27208:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":2443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27213:2:7","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"27208:7:7","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":2445,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27207:9:7","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27219:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27207:13:7","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"}},"src":"27199:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2439,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4356,"src":"27183:8:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4356_$","typeString":"type(library SafeCast)"}},"id":2440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27192:6:7","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4355,"src":"27183:15:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27183:38:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27176:45:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2451,"nodeType":"ExpressionStatement","src":"27176:45:7"},{"expression":{"id":2456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2452,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2400,"src":"27235:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2453,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2410,"src":"27245:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3634","id":2454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27252:2:7","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"27245:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27235:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2457,"nodeType":"ExpressionStatement","src":"27235:19:7"},{"expression":{"id":2462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2458,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2406,"src":"27268:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2459,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2410,"src":"27278:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"38","id":2460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27285:1:7","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"27278:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27268:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2463,"nodeType":"ExpressionStatement","src":"27268:18:7"},{"expression":{"id":2476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2464,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2410,"src":"27301:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2467,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2400,"src":"27324:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"id":2473,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":2470,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27333:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":2469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27338:2:7","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"27333:7:7","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":2471,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27332:9:7","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27344:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27332:13:7","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"}},"src":"27324:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2465,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4356,"src":"27308:8:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4356_$","typeString":"type(library SafeCast)"}},"id":2466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27317:6:7","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4355,"src":"27308:15:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27308:38:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27301:45:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2477,"nodeType":"ExpressionStatement","src":"27301:45:7"},{"expression":{"id":2482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2478,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2400,"src":"27360:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2479,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2410,"src":"27370:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3332","id":2480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27377:2:7","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"27370:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27360:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2483,"nodeType":"ExpressionStatement","src":"27360:19:7"},{"expression":{"id":2488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2484,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2406,"src":"27393:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2485,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2410,"src":"27403:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"34","id":2486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27410:1:7","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"27403:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27393:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2489,"nodeType":"ExpressionStatement","src":"27393:18:7"},{"expression":{"id":2502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2490,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2410,"src":"27426:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2493,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2400,"src":"27449:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"id":2499,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":2496,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27458:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":2495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27463:2:7","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27458:7:7","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":2497,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27457:9:7","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2498,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27469:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27457:13:7","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"}},"src":"27449:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2491,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4356,"src":"27433:8:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4356_$","typeString":"type(library SafeCast)"}},"id":2492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27442:6:7","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4355,"src":"27433:15:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27433:38:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27426:45:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2503,"nodeType":"ExpressionStatement","src":"27426:45:7"},{"expression":{"id":2508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2504,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2400,"src":"27485:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2505,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2410,"src":"27495:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3136","id":2506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27502:2:7","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27495:9:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27485:19:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2509,"nodeType":"ExpressionStatement","src":"27485:19:7"},{"expression":{"id":2514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2510,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2406,"src":"27518:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2511,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2410,"src":"27528:4:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":2512,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27535:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"27528:8:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27518:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2515,"nodeType":"ExpressionStatement","src":"27518:18:7"},{"expression":{"id":2528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2516,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2406,"src":"27551:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2519,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2400,"src":"27577:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"id":2525,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":2522,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27586:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":2521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27591:1:7","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"27586:6:7","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":2523,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27585:8:7","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27596:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27585:12:7","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"}},"src":"27577:20:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2517,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4356,"src":"27561:8:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4356_$","typeString":"type(library SafeCast)"}},"id":2518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27570:6:7","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4355,"src":"27561:15:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27561:37:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27551:47:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2529,"nodeType":"ExpressionStatement","src":"27551:47:7"}]},{"expression":{"id":2531,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2406,"src":"27625:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2404,"id":2532,"nodeType":"Return","src":"27618:13:7"}]},"documentation":{"id":2398,"nodeType":"StructuredDocumentation","src":"26650:246:7","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":2534,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"26910:6:7","nodeType":"FunctionDefinition","parameters":{"id":2401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2400,"mutability":"mutable","name":"value","nameLocation":"26925:5:7","nodeType":"VariableDeclaration","scope":2534,"src":"26917:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2399,"name":"uint256","nodeType":"ElementaryTypeName","src":"26917:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26916:15:7"},"returnParameters":{"id":2404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2403,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2534,"src":"26955:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2402,"name":"uint256","nodeType":"ElementaryTypeName","src":"26955:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26954:9:7"},"scope":2591,"src":"26901:737:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2570,"nodeType":"Block","src":"27875:184:7","statements":[{"id":2569,"nodeType":"UncheckedBlock","src":"27885:168:7","statements":[{"assignments":[2546],"declarations":[{"constant":false,"id":2546,"mutability":"mutable","name":"result","nameLocation":"27917:6:7","nodeType":"VariableDeclaration","scope":2569,"src":"27909:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2545,"name":"uint256","nodeType":"ElementaryTypeName","src":"27909:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2550,"initialValue":{"arguments":[{"id":2548,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2537,"src":"27933:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2547,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[2534,2571],"referencedDeclaration":2534,"src":"27926:6:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2549,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27926:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"27909:30:7"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2551,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2546,"src":"27960:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2555,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2540,"src":"28002:8:7","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$997","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$997","typeString":"enum Math.Rounding"}],"id":2554,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2590,"src":"27985:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$997_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":2556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27985:26:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28015:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2558,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2546,"src":"28021:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":2559,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28031:1:7","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"28021:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2561,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"28020:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28015:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2563,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2537,"src":"28036:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28015:26:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"27985:56:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":2552,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4356,"src":"27969:8:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$4356_$","typeString":"type(library SafeCast)"}},"id":2553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27978:6:7","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":4355,"src":"27969:15:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":2566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27969:73:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27960:82:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2544,"id":2568,"nodeType":"Return","src":"27953:89:7"}]}]},"documentation":{"id":2535,"nodeType":"StructuredDocumentation","src":"27644:144:7","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":2571,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"27802:6:7","nodeType":"FunctionDefinition","parameters":{"id":2541,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2537,"mutability":"mutable","name":"value","nameLocation":"27817:5:7","nodeType":"VariableDeclaration","scope":2571,"src":"27809:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2536,"name":"uint256","nodeType":"ElementaryTypeName","src":"27809:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2540,"mutability":"mutable","name":"rounding","nameLocation":"27833:8:7","nodeType":"VariableDeclaration","scope":2571,"src":"27824:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$997","typeString":"enum Math.Rounding"},"typeName":{"id":2539,"nodeType":"UserDefinedTypeName","pathNode":{"id":2538,"name":"Rounding","nameLocations":["27824:8:7"],"nodeType":"IdentifierPath","referencedDeclaration":997,"src":"27824:8:7"},"referencedDeclaration":997,"src":"27824:8:7","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$997","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"27808:34:7"},"returnParameters":{"id":2544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2543,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2571,"src":"27866:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2542,"name":"uint256","nodeType":"ElementaryTypeName","src":"27866:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"27865:9:7"},"scope":2591,"src":"27793:266:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2589,"nodeType":"Block","src":"28257:48:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2582,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2575,"src":"28280:8:7","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$997","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$997","typeString":"enum Math.Rounding"}],"id":2581,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28274:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2580,"name":"uint8","nodeType":"ElementaryTypeName","src":"28274:5:7","typeDescriptions":{}}},"id":2583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28274:15:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":2584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28292:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"28274:19:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":2586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28297:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"28274:24:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2579,"id":2588,"nodeType":"Return","src":"28267:31:7"}]},"documentation":{"id":2572,"nodeType":"StructuredDocumentation","src":"28065:113:7","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":2590,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"28192:16:7","nodeType":"FunctionDefinition","parameters":{"id":2576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2575,"mutability":"mutable","name":"rounding","nameLocation":"28218:8:7","nodeType":"VariableDeclaration","scope":2590,"src":"28209:17:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$997","typeString":"enum Math.Rounding"},"typeName":{"id":2574,"nodeType":"UserDefinedTypeName","pathNode":{"id":2573,"name":"Rounding","nameLocations":["28209:8:7"],"nodeType":"IdentifierPath","referencedDeclaration":997,"src":"28209:8:7"},"referencedDeclaration":997,"src":"28209:8:7","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$997","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28208:19:7"},"returnParameters":{"id":2579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2578,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2590,"src":"28251:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2577,"name":"bool","nodeType":"ElementaryTypeName","src":"28251:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"28250:6:7"},"scope":2591,"src":"28183:122:7","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2592,"src":"281:28026:7","usedErrors":[],"usedEvents":[]}],"src":"103:28205:7"},"id":7},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[4356]},"id":4357,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2593,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:8"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":2594,"nodeType":"StructuredDocumentation","src":"218:550:8","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":4356,"linearizedBaseContracts":[4356],"name":"SafeCast","nameLocation":"777:8:8","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2595,"nodeType":"StructuredDocumentation","src":"792:68:8","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":2601,"name":"SafeCastOverflowedUintDowncast","nameLocation":"871:30:8","nodeType":"ErrorDefinition","parameters":{"id":2600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2597,"mutability":"mutable","name":"bits","nameLocation":"908:4:8","nodeType":"VariableDeclaration","scope":2601,"src":"902:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2596,"name":"uint8","nodeType":"ElementaryTypeName","src":"902:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2599,"mutability":"mutable","name":"value","nameLocation":"922:5:8","nodeType":"VariableDeclaration","scope":2601,"src":"914:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2598,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:27:8"},"src":"865:64:8"},{"documentation":{"id":2602,"nodeType":"StructuredDocumentation","src":"935:75:8","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":2606,"name":"SafeCastOverflowedIntToUint","nameLocation":"1021:27:8","nodeType":"ErrorDefinition","parameters":{"id":2605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2604,"mutability":"mutable","name":"value","nameLocation":"1056:5:8","nodeType":"VariableDeclaration","scope":2606,"src":"1049:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2603,"name":"int256","nodeType":"ElementaryTypeName","src":"1049:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1048:14:8"},"src":"1015:48:8"},{"documentation":{"id":2607,"nodeType":"StructuredDocumentation","src":"1069:67:8","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":2613,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1147:29:8","nodeType":"ErrorDefinition","parameters":{"id":2612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2609,"mutability":"mutable","name":"bits","nameLocation":"1183:4:8","nodeType":"VariableDeclaration","scope":2613,"src":"1177:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2608,"name":"uint8","nodeType":"ElementaryTypeName","src":"1177:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2611,"mutability":"mutable","name":"value","nameLocation":"1196:5:8","nodeType":"VariableDeclaration","scope":2613,"src":"1189:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2610,"name":"int256","nodeType":"ElementaryTypeName","src":"1189:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1176:26:8"},"src":"1141:62:8"},{"documentation":{"id":2614,"nodeType":"StructuredDocumentation","src":"1209:75:8","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":2618,"name":"SafeCastOverflowedUintToInt","nameLocation":"1295:27:8","nodeType":"ErrorDefinition","parameters":{"id":2617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2616,"mutability":"mutable","name":"value","nameLocation":"1331:5:8","nodeType":"VariableDeclaration","scope":2618,"src":"1323:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2615,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:15:8"},"src":"1289:49:8"},{"body":{"id":2645,"nodeType":"Block","src":"1695:152:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2626,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2621,"src":"1709:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2629,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":2628,"name":"uint248","nodeType":"ElementaryTypeName","src":"1722:7:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":2627,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1717:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":2631,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1731:3:8","memberName":"max","nodeType":"MemberAccess","src":"1717:17:8","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1709:25:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2639,"nodeType":"IfStatement","src":"1705:105:8","trueBody":{"id":2638,"nodeType":"Block","src":"1736:74:8","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":2634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:8","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":2635,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2621,"src":"1793:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2633,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2601,"src":"1757:30:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":2636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2637,"nodeType":"RevertStatement","src":"1750:49:8"}]}},{"expression":{"arguments":[{"id":2642,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2621,"src":"1834:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2641,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1826:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":2640,"name":"uint248","nodeType":"ElementaryTypeName","src":"1826:7:8","typeDescriptions":{}}},"id":2643,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":2625,"id":2644,"nodeType":"Return","src":"1819:21:8"}]},"documentation":{"id":2619,"nodeType":"StructuredDocumentation","src":"1344:280:8","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":2646,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1638:9:8","nodeType":"FunctionDefinition","parameters":{"id":2622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2621,"mutability":"mutable","name":"value","nameLocation":"1656:5:8","nodeType":"VariableDeclaration","scope":2646,"src":"1648:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2620,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:15:8"},"returnParameters":{"id":2625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2624,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2646,"src":"1686:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":2623,"name":"uint248","nodeType":"ElementaryTypeName","src":"1686:7:8","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1685:9:8"},"scope":4356,"src":"1629:218:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2673,"nodeType":"Block","src":"2204:152:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2654,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2649,"src":"2218:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2657,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2231:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":2656,"name":"uint240","nodeType":"ElementaryTypeName","src":"2231:7:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":2655,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2226:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":2659,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2240:3:8","memberName":"max","nodeType":"MemberAccess","src":"2226:17:8","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2218:25:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2667,"nodeType":"IfStatement","src":"2214:105:8","trueBody":{"id":2666,"nodeType":"Block","src":"2245:74:8","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":2662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:3:8","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":2663,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2649,"src":"2302:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2661,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2601,"src":"2266:30:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":2664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:42:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2665,"nodeType":"RevertStatement","src":"2259:49:8"}]}},{"expression":{"arguments":[{"id":2670,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2649,"src":"2343:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2669,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2335:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":2668,"name":"uint240","nodeType":"ElementaryTypeName","src":"2335:7:8","typeDescriptions":{}}},"id":2671,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":2653,"id":2672,"nodeType":"Return","src":"2328:21:8"}]},"documentation":{"id":2647,"nodeType":"StructuredDocumentation","src":"1853:280:8","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":2674,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2147:9:8","nodeType":"FunctionDefinition","parameters":{"id":2650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2649,"mutability":"mutable","name":"value","nameLocation":"2165:5:8","nodeType":"VariableDeclaration","scope":2674,"src":"2157:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2648,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:15:8"},"returnParameters":{"id":2653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2652,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2674,"src":"2195:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":2651,"name":"uint240","nodeType":"ElementaryTypeName","src":"2195:7:8","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2194:9:8"},"scope":4356,"src":"2138:218:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2701,"nodeType":"Block","src":"2713:152:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2682,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"2727:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2685,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":2684,"name":"uint232","nodeType":"ElementaryTypeName","src":"2740:7:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":2683,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2735:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":2687,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2749:3:8","memberName":"max","nodeType":"MemberAccess","src":"2735:17:8","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2727:25:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2695,"nodeType":"IfStatement","src":"2723:105:8","trueBody":{"id":2694,"nodeType":"Block","src":"2754:74:8","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":2690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:3:8","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":2691,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"2811:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2689,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2601,"src":"2775:30:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":2692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:42:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2693,"nodeType":"RevertStatement","src":"2768:49:8"}]}},{"expression":{"arguments":[{"id":2698,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2677,"src":"2852:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2697,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":2696,"name":"uint232","nodeType":"ElementaryTypeName","src":"2844:7:8","typeDescriptions":{}}},"id":2699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":2681,"id":2700,"nodeType":"Return","src":"2837:21:8"}]},"documentation":{"id":2675,"nodeType":"StructuredDocumentation","src":"2362:280:8","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":2702,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2656:9:8","nodeType":"FunctionDefinition","parameters":{"id":2678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2677,"mutability":"mutable","name":"value","nameLocation":"2674:5:8","nodeType":"VariableDeclaration","scope":2702,"src":"2666:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2676,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:15:8"},"returnParameters":{"id":2681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2680,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2702,"src":"2704:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":2679,"name":"uint232","nodeType":"ElementaryTypeName","src":"2704:7:8","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2703:9:8"},"scope":4356,"src":"2647:218:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2729,"nodeType":"Block","src":"3222:152:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2710,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2705,"src":"3236:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2713,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3249:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":2712,"name":"uint224","nodeType":"ElementaryTypeName","src":"3249:7:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":2711,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3244:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":2715,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3258:3:8","memberName":"max","nodeType":"MemberAccess","src":"3244:17:8","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3236:25:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2723,"nodeType":"IfStatement","src":"3232:105:8","trueBody":{"id":2722,"nodeType":"Block","src":"3263:74:8","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":2718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:3:8","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":2719,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2705,"src":"3320:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2717,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2601,"src":"3284:30:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":2720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:42:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2721,"nodeType":"RevertStatement","src":"3277:49:8"}]}},{"expression":{"arguments":[{"id":2726,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2705,"src":"3361:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2725,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":2724,"name":"uint224","nodeType":"ElementaryTypeName","src":"3353:7:8","typeDescriptions":{}}},"id":2727,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":2709,"id":2728,"nodeType":"Return","src":"3346:21:8"}]},"documentation":{"id":2703,"nodeType":"StructuredDocumentation","src":"2871:280:8","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":2730,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3165:9:8","nodeType":"FunctionDefinition","parameters":{"id":2706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2705,"mutability":"mutable","name":"value","nameLocation":"3183:5:8","nodeType":"VariableDeclaration","scope":2730,"src":"3175:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2704,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3174:15:8"},"returnParameters":{"id":2709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2708,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2730,"src":"3213:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":2707,"name":"uint224","nodeType":"ElementaryTypeName","src":"3213:7:8","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3212:9:8"},"scope":4356,"src":"3156:218:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2757,"nodeType":"Block","src":"3731:152:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2738,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2733,"src":"3745:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2741,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3758:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":2740,"name":"uint216","nodeType":"ElementaryTypeName","src":"3758:7:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":2739,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3753:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":2743,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:3:8","memberName":"max","nodeType":"MemberAccess","src":"3753:17:8","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3745:25:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2751,"nodeType":"IfStatement","src":"3741:105:8","trueBody":{"id":2750,"nodeType":"Block","src":"3772:74:8","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":2746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:3:8","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":2747,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2733,"src":"3829:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2745,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2601,"src":"3793:30:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":2748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:42:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2749,"nodeType":"RevertStatement","src":"3786:49:8"}]}},{"expression":{"arguments":[{"id":2754,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2733,"src":"3870:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2753,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3862:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":2752,"name":"uint216","nodeType":"ElementaryTypeName","src":"3862:7:8","typeDescriptions":{}}},"id":2755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":2737,"id":2756,"nodeType":"Return","src":"3855:21:8"}]},"documentation":{"id":2731,"nodeType":"StructuredDocumentation","src":"3380:280:8","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":2758,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3674:9:8","nodeType":"FunctionDefinition","parameters":{"id":2734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2733,"mutability":"mutable","name":"value","nameLocation":"3692:5:8","nodeType":"VariableDeclaration","scope":2758,"src":"3684:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2732,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:8"},"returnParameters":{"id":2737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2736,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2758,"src":"3722:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":2735,"name":"uint216","nodeType":"ElementaryTypeName","src":"3722:7:8","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3721:9:8"},"scope":4356,"src":"3665:218:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2785,"nodeType":"Block","src":"4240:152:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2766,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2761,"src":"4254:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2769,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4267:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":2768,"name":"uint208","nodeType":"ElementaryTypeName","src":"4267:7:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":2767,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4262:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":2771,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4276:3:8","memberName":"max","nodeType":"MemberAccess","src":"4262:17:8","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4254:25:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2779,"nodeType":"IfStatement","src":"4250:105:8","trueBody":{"id":2778,"nodeType":"Block","src":"4281:74:8","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":2774,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:3:8","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":2775,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2761,"src":"4338:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2773,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2601,"src":"4302:30:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":2776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:42:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2777,"nodeType":"RevertStatement","src":"4295:49:8"}]}},{"expression":{"arguments":[{"id":2782,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2761,"src":"4379:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2781,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4371:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":2780,"name":"uint208","nodeType":"ElementaryTypeName","src":"4371:7:8","typeDescriptions":{}}},"id":2783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":2765,"id":2784,"nodeType":"Return","src":"4364:21:8"}]},"documentation":{"id":2759,"nodeType":"StructuredDocumentation","src":"3889:280:8","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":2786,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4183:9:8","nodeType":"FunctionDefinition","parameters":{"id":2762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2761,"mutability":"mutable","name":"value","nameLocation":"4201:5:8","nodeType":"VariableDeclaration","scope":2786,"src":"4193:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2760,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:15:8"},"returnParameters":{"id":2765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2764,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2786,"src":"4231:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":2763,"name":"uint208","nodeType":"ElementaryTypeName","src":"4231:7:8","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4230:9:8"},"scope":4356,"src":"4174:218:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2813,"nodeType":"Block","src":"4749:152:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2794,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2789,"src":"4763:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2797,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4776:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":2796,"name":"uint200","nodeType":"ElementaryTypeName","src":"4776:7:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":2795,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4771:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":2799,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4785:3:8","memberName":"max","nodeType":"MemberAccess","src":"4771:17:8","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4763:25:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2807,"nodeType":"IfStatement","src":"4759:105:8","trueBody":{"id":2806,"nodeType":"Block","src":"4790:74:8","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":2802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:3:8","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":2803,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2789,"src":"4847:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2801,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2601,"src":"4811:30:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":2804,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:42:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2805,"nodeType":"RevertStatement","src":"4804:49:8"}]}},{"expression":{"arguments":[{"id":2810,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2789,"src":"4888:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2809,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":2808,"name":"uint200","nodeType":"ElementaryTypeName","src":"4880:7:8","typeDescriptions":{}}},"id":2811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":2793,"id":2812,"nodeType":"Return","src":"4873:21:8"}]},"documentation":{"id":2787,"nodeType":"StructuredDocumentation","src":"4398:280:8","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":2814,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4692:9:8","nodeType":"FunctionDefinition","parameters":{"id":2790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2789,"mutability":"mutable","name":"value","nameLocation":"4710:5:8","nodeType":"VariableDeclaration","scope":2814,"src":"4702:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2788,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:15:8"},"returnParameters":{"id":2793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2792,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2814,"src":"4740:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":2791,"name":"uint200","nodeType":"ElementaryTypeName","src":"4740:7:8","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4739:9:8"},"scope":4356,"src":"4683:218:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2841,"nodeType":"Block","src":"5258:152:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2822,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2817,"src":"5272:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2825,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5285:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":2824,"name":"uint192","nodeType":"ElementaryTypeName","src":"5285:7:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":2823,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5280:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":2827,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5294:3:8","memberName":"max","nodeType":"MemberAccess","src":"5280:17:8","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5272:25:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2835,"nodeType":"IfStatement","src":"5268:105:8","trueBody":{"id":2834,"nodeType":"Block","src":"5299:74:8","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":2830,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5351:3:8","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":2831,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2817,"src":"5356:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2829,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2601,"src":"5320:30:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":2832,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:42:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2833,"nodeType":"RevertStatement","src":"5313:49:8"}]}},{"expression":{"arguments":[{"id":2838,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2817,"src":"5397:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2837,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":2836,"name":"uint192","nodeType":"ElementaryTypeName","src":"5389:7:8","typeDescriptions":{}}},"id":2839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":2821,"id":2840,"nodeType":"Return","src":"5382:21:8"}]},"documentation":{"id":2815,"nodeType":"StructuredDocumentation","src":"4907:280:8","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":2842,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5201:9:8","nodeType":"FunctionDefinition","parameters":{"id":2818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2817,"mutability":"mutable","name":"value","nameLocation":"5219:5:8","nodeType":"VariableDeclaration","scope":2842,"src":"5211:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2816,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:15:8"},"returnParameters":{"id":2821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2820,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2842,"src":"5249:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":2819,"name":"uint192","nodeType":"ElementaryTypeName","src":"5249:7:8","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5248:9:8"},"scope":4356,"src":"5192:218:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2869,"nodeType":"Block","src":"5767:152:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2850,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2845,"src":"5781:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2853,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":2852,"name":"uint184","nodeType":"ElementaryTypeName","src":"5794:7:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":2851,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5789:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":2855,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5803:3:8","memberName":"max","nodeType":"MemberAccess","src":"5789:17:8","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5781:25:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2863,"nodeType":"IfStatement","src":"5777:105:8","trueBody":{"id":2862,"nodeType":"Block","src":"5808:74:8","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":2858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5860:3:8","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":2859,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2845,"src":"5865:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2857,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2601,"src":"5829:30:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":2860,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:42:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2861,"nodeType":"RevertStatement","src":"5822:49:8"}]}},{"expression":{"arguments":[{"id":2866,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2845,"src":"5906:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2865,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":2864,"name":"uint184","nodeType":"ElementaryTypeName","src":"5898:7:8","typeDescriptions":{}}},"id":2867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":2849,"id":2868,"nodeType":"Return","src":"5891:21:8"}]},"documentation":{"id":2843,"nodeType":"StructuredDocumentation","src":"5416:280:8","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":2870,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5710:9:8","nodeType":"FunctionDefinition","parameters":{"id":2846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2845,"mutability":"mutable","name":"value","nameLocation":"5728:5:8","nodeType":"VariableDeclaration","scope":2870,"src":"5720:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2844,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5719:15:8"},"returnParameters":{"id":2849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2848,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2870,"src":"5758:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":2847,"name":"uint184","nodeType":"ElementaryTypeName","src":"5758:7:8","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5757:9:8"},"scope":4356,"src":"5701:218:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2897,"nodeType":"Block","src":"6276:152:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2878,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2873,"src":"6290:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2881,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":2880,"name":"uint176","nodeType":"ElementaryTypeName","src":"6303:7:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":2879,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6298:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":2883,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:3:8","memberName":"max","nodeType":"MemberAccess","src":"6298:17:8","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6290:25:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2891,"nodeType":"IfStatement","src":"6286:105:8","trueBody":{"id":2890,"nodeType":"Block","src":"6317:74:8","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":2886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:3:8","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":2887,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2873,"src":"6374:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2885,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2601,"src":"6338:30:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":2888,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:42:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2889,"nodeType":"RevertStatement","src":"6331:49:8"}]}},{"expression":{"arguments":[{"id":2894,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2873,"src":"6415:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2893,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":2892,"name":"uint176","nodeType":"ElementaryTypeName","src":"6407:7:8","typeDescriptions":{}}},"id":2895,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":2877,"id":2896,"nodeType":"Return","src":"6400:21:8"}]},"documentation":{"id":2871,"nodeType":"StructuredDocumentation","src":"5925:280:8","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":2898,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6219:9:8","nodeType":"FunctionDefinition","parameters":{"id":2874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2873,"mutability":"mutable","name":"value","nameLocation":"6237:5:8","nodeType":"VariableDeclaration","scope":2898,"src":"6229:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2872,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6228:15:8"},"returnParameters":{"id":2877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2876,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2898,"src":"6267:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":2875,"name":"uint176","nodeType":"ElementaryTypeName","src":"6267:7:8","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6266:9:8"},"scope":4356,"src":"6210:218:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2925,"nodeType":"Block","src":"6785:152:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2906,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2901,"src":"6799:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2909,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6812:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":2908,"name":"uint168","nodeType":"ElementaryTypeName","src":"6812:7:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":2907,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6807:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2910,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":2911,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6821:3:8","memberName":"max","nodeType":"MemberAccess","src":"6807:17:8","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6799:25:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2919,"nodeType":"IfStatement","src":"6795:105:8","trueBody":{"id":2918,"nodeType":"Block","src":"6826:74:8","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":2914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6878:3:8","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":2915,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2901,"src":"6883:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2913,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2601,"src":"6847:30:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":2916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6847:42:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2917,"nodeType":"RevertStatement","src":"6840:49:8"}]}},{"expression":{"arguments":[{"id":2922,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2901,"src":"6924:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2921,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":2920,"name":"uint168","nodeType":"ElementaryTypeName","src":"6916:7:8","typeDescriptions":{}}},"id":2923,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":2905,"id":2924,"nodeType":"Return","src":"6909:21:8"}]},"documentation":{"id":2899,"nodeType":"StructuredDocumentation","src":"6434:280:8","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":2926,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6728:9:8","nodeType":"FunctionDefinition","parameters":{"id":2902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2901,"mutability":"mutable","name":"value","nameLocation":"6746:5:8","nodeType":"VariableDeclaration","scope":2926,"src":"6738:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2900,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:15:8"},"returnParameters":{"id":2905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2904,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2926,"src":"6776:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":2903,"name":"uint168","nodeType":"ElementaryTypeName","src":"6776:7:8","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6775:9:8"},"scope":4356,"src":"6719:218:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2953,"nodeType":"Block","src":"7294:152:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2934,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2929,"src":"7308:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2937,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7321:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2936,"name":"uint160","nodeType":"ElementaryTypeName","src":"7321:7:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":2935,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7316:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":2939,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7330:3:8","memberName":"max","nodeType":"MemberAccess","src":"7316:17:8","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7308:25:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2947,"nodeType":"IfStatement","src":"7304:105:8","trueBody":{"id":2946,"nodeType":"Block","src":"7335:74:8","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":2942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:3:8","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":2943,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2929,"src":"7392:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2941,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2601,"src":"7356:30:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":2944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:42:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2945,"nodeType":"RevertStatement","src":"7349:49:8"}]}},{"expression":{"arguments":[{"id":2950,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2929,"src":"7433:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2949,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7425:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2948,"name":"uint160","nodeType":"ElementaryTypeName","src":"7425:7:8","typeDescriptions":{}}},"id":2951,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":2933,"id":2952,"nodeType":"Return","src":"7418:21:8"}]},"documentation":{"id":2927,"nodeType":"StructuredDocumentation","src":"6943:280:8","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":2954,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7237:9:8","nodeType":"FunctionDefinition","parameters":{"id":2930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2929,"mutability":"mutable","name":"value","nameLocation":"7255:5:8","nodeType":"VariableDeclaration","scope":2954,"src":"7247:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2928,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:15:8"},"returnParameters":{"id":2933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2932,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2954,"src":"7285:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":2931,"name":"uint160","nodeType":"ElementaryTypeName","src":"7285:7:8","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7284:9:8"},"scope":4356,"src":"7228:218:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2981,"nodeType":"Block","src":"7803:152:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2962,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2957,"src":"7817:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2965,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7830:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":2964,"name":"uint152","nodeType":"ElementaryTypeName","src":"7830:7:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":2963,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7825:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7825:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":2967,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7839:3:8","memberName":"max","nodeType":"MemberAccess","src":"7825:17:8","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7817:25:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2975,"nodeType":"IfStatement","src":"7813:105:8","trueBody":{"id":2974,"nodeType":"Block","src":"7844:74:8","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":2970,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:3:8","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":2971,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2957,"src":"7901:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2969,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2601,"src":"7865:30:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":2972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:42:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2973,"nodeType":"RevertStatement","src":"7858:49:8"}]}},{"expression":{"arguments":[{"id":2978,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2957,"src":"7942:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2977,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7934:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":2976,"name":"uint152","nodeType":"ElementaryTypeName","src":"7934:7:8","typeDescriptions":{}}},"id":2979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":2961,"id":2980,"nodeType":"Return","src":"7927:21:8"}]},"documentation":{"id":2955,"nodeType":"StructuredDocumentation","src":"7452:280:8","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":2982,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7746:9:8","nodeType":"FunctionDefinition","parameters":{"id":2958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2957,"mutability":"mutable","name":"value","nameLocation":"7764:5:8","nodeType":"VariableDeclaration","scope":2982,"src":"7756:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2956,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:15:8"},"returnParameters":{"id":2961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2960,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2982,"src":"7794:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":2959,"name":"uint152","nodeType":"ElementaryTypeName","src":"7794:7:8","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7793:9:8"},"scope":4356,"src":"7737:218:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3009,"nodeType":"Block","src":"8312:152:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2990,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2985,"src":"8326:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2993,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8339:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":2992,"name":"uint144","nodeType":"ElementaryTypeName","src":"8339:7:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":2991,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8334:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":2995,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8348:3:8","memberName":"max","nodeType":"MemberAccess","src":"8334:17:8","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8326:25:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3003,"nodeType":"IfStatement","src":"8322:105:8","trueBody":{"id":3002,"nodeType":"Block","src":"8353:74:8","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":2998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8405:3:8","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":2999,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2985,"src":"8410:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2997,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2601,"src":"8374:30:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":3000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:42:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3001,"nodeType":"RevertStatement","src":"8367:49:8"}]}},{"expression":{"arguments":[{"id":3006,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2985,"src":"8451:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3005,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":3004,"name":"uint144","nodeType":"ElementaryTypeName","src":"8443:7:8","typeDescriptions":{}}},"id":3007,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":2989,"id":3008,"nodeType":"Return","src":"8436:21:8"}]},"documentation":{"id":2983,"nodeType":"StructuredDocumentation","src":"7961:280:8","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":3010,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8255:9:8","nodeType":"FunctionDefinition","parameters":{"id":2986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2985,"mutability":"mutable","name":"value","nameLocation":"8273:5:8","nodeType":"VariableDeclaration","scope":3010,"src":"8265:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2984,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8264:15:8"},"returnParameters":{"id":2989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2988,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3010,"src":"8303:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":2987,"name":"uint144","nodeType":"ElementaryTypeName","src":"8303:7:8","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8302:9:8"},"scope":4356,"src":"8246:218:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3037,"nodeType":"Block","src":"8821:152:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3018,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3013,"src":"8835:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3021,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":3020,"name":"uint136","nodeType":"ElementaryTypeName","src":"8848:7:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":3019,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8843:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":3023,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8857:3:8","memberName":"max","nodeType":"MemberAccess","src":"8843:17:8","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8835:25:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3031,"nodeType":"IfStatement","src":"8831:105:8","trueBody":{"id":3030,"nodeType":"Block","src":"8862:74:8","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":3026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:3:8","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":3027,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3013,"src":"8919:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3025,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2601,"src":"8883:30:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":3028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:42:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3029,"nodeType":"RevertStatement","src":"8876:49:8"}]}},{"expression":{"arguments":[{"id":3034,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3013,"src":"8960:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3033,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":3032,"name":"uint136","nodeType":"ElementaryTypeName","src":"8952:7:8","typeDescriptions":{}}},"id":3035,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":3017,"id":3036,"nodeType":"Return","src":"8945:21:8"}]},"documentation":{"id":3011,"nodeType":"StructuredDocumentation","src":"8470:280:8","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":3038,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8764:9:8","nodeType":"FunctionDefinition","parameters":{"id":3014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3013,"mutability":"mutable","name":"value","nameLocation":"8782:5:8","nodeType":"VariableDeclaration","scope":3038,"src":"8774:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3012,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8773:15:8"},"returnParameters":{"id":3017,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3016,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3038,"src":"8812:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":3015,"name":"uint136","nodeType":"ElementaryTypeName","src":"8812:7:8","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8811:9:8"},"scope":4356,"src":"8755:218:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3065,"nodeType":"Block","src":"9330:152:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3046,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3041,"src":"9344:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3049,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":3048,"name":"uint128","nodeType":"ElementaryTypeName","src":"9357:7:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":3047,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9352:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":3051,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9366:3:8","memberName":"max","nodeType":"MemberAccess","src":"9352:17:8","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9344:25:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3059,"nodeType":"IfStatement","src":"9340:105:8","trueBody":{"id":3058,"nodeType":"Block","src":"9371:74:8","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":3054,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:3:8","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":3055,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3041,"src":"9428:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3053,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2601,"src":"9392:30:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":3056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:42:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3057,"nodeType":"RevertStatement","src":"9385:49:8"}]}},{"expression":{"arguments":[{"id":3062,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3041,"src":"9469:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3061,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9461:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":3060,"name":"uint128","nodeType":"ElementaryTypeName","src":"9461:7:8","typeDescriptions":{}}},"id":3063,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":3045,"id":3064,"nodeType":"Return","src":"9454:21:8"}]},"documentation":{"id":3039,"nodeType":"StructuredDocumentation","src":"8979:280:8","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":3066,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9273:9:8","nodeType":"FunctionDefinition","parameters":{"id":3042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3041,"mutability":"mutable","name":"value","nameLocation":"9291:5:8","nodeType":"VariableDeclaration","scope":3066,"src":"9283:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3040,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9282:15:8"},"returnParameters":{"id":3045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3044,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3066,"src":"9321:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":3043,"name":"uint128","nodeType":"ElementaryTypeName","src":"9321:7:8","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9320:9:8"},"scope":4356,"src":"9264:218:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3093,"nodeType":"Block","src":"9839:152:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3074,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3069,"src":"9853:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3077,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9866:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":3076,"name":"uint120","nodeType":"ElementaryTypeName","src":"9866:7:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":3075,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9861:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":3079,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9875:3:8","memberName":"max","nodeType":"MemberAccess","src":"9861:17:8","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9853:25:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3087,"nodeType":"IfStatement","src":"9849:105:8","trueBody":{"id":3086,"nodeType":"Block","src":"9880:74:8","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":3082,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:3:8","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":3083,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3069,"src":"9937:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3081,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2601,"src":"9901:30:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":3084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9901:42:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3085,"nodeType":"RevertStatement","src":"9894:49:8"}]}},{"expression":{"arguments":[{"id":3090,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3069,"src":"9978:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3089,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9970:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":3088,"name":"uint120","nodeType":"ElementaryTypeName","src":"9970:7:8","typeDescriptions":{}}},"id":3091,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":3073,"id":3092,"nodeType":"Return","src":"9963:21:8"}]},"documentation":{"id":3067,"nodeType":"StructuredDocumentation","src":"9488:280:8","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":3094,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9782:9:8","nodeType":"FunctionDefinition","parameters":{"id":3070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3069,"mutability":"mutable","name":"value","nameLocation":"9800:5:8","nodeType":"VariableDeclaration","scope":3094,"src":"9792:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3068,"name":"uint256","nodeType":"ElementaryTypeName","src":"9792:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9791:15:8"},"returnParameters":{"id":3073,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3072,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3094,"src":"9830:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":3071,"name":"uint120","nodeType":"ElementaryTypeName","src":"9830:7:8","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9829:9:8"},"scope":4356,"src":"9773:218:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3121,"nodeType":"Block","src":"10348:152:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3102,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3097,"src":"10362:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3105,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10375:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":3104,"name":"uint112","nodeType":"ElementaryTypeName","src":"10375:7:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":3103,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10370:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":3107,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10384:3:8","memberName":"max","nodeType":"MemberAccess","src":"10370:17:8","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10362:25:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3115,"nodeType":"IfStatement","src":"10358:105:8","trueBody":{"id":3114,"nodeType":"Block","src":"10389:74:8","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":3110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10441:3:8","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":3111,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3097,"src":"10446:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3109,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2601,"src":"10410:30:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":3112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10410:42:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3113,"nodeType":"RevertStatement","src":"10403:49:8"}]}},{"expression":{"arguments":[{"id":3118,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3097,"src":"10487:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3117,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10479:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":3116,"name":"uint112","nodeType":"ElementaryTypeName","src":"10479:7:8","typeDescriptions":{}}},"id":3119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10479:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":3101,"id":3120,"nodeType":"Return","src":"10472:21:8"}]},"documentation":{"id":3095,"nodeType":"StructuredDocumentation","src":"9997:280:8","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":3122,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10291:9:8","nodeType":"FunctionDefinition","parameters":{"id":3098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3097,"mutability":"mutable","name":"value","nameLocation":"10309:5:8","nodeType":"VariableDeclaration","scope":3122,"src":"10301:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3096,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:15:8"},"returnParameters":{"id":3101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3100,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3122,"src":"10339:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":3099,"name":"uint112","nodeType":"ElementaryTypeName","src":"10339:7:8","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10338:9:8"},"scope":4356,"src":"10282:218:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3149,"nodeType":"Block","src":"10857:152:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3130,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3125,"src":"10871:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3133,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":3132,"name":"uint104","nodeType":"ElementaryTypeName","src":"10884:7:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":3131,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10879:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":3135,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10893:3:8","memberName":"max","nodeType":"MemberAccess","src":"10879:17:8","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10871:25:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3143,"nodeType":"IfStatement","src":"10867:105:8","trueBody":{"id":3142,"nodeType":"Block","src":"10898:74:8","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":3138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:3:8","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":3139,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3125,"src":"10955:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3137,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2601,"src":"10919:30:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":3140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:42:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3141,"nodeType":"RevertStatement","src":"10912:49:8"}]}},{"expression":{"arguments":[{"id":3146,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3125,"src":"10996:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3145,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10988:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":3144,"name":"uint104","nodeType":"ElementaryTypeName","src":"10988:7:8","typeDescriptions":{}}},"id":3147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":3129,"id":3148,"nodeType":"Return","src":"10981:21:8"}]},"documentation":{"id":3123,"nodeType":"StructuredDocumentation","src":"10506:280:8","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":3150,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10800:9:8","nodeType":"FunctionDefinition","parameters":{"id":3126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3125,"mutability":"mutable","name":"value","nameLocation":"10818:5:8","nodeType":"VariableDeclaration","scope":3150,"src":"10810:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3124,"name":"uint256","nodeType":"ElementaryTypeName","src":"10810:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10809:15:8"},"returnParameters":{"id":3129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3128,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3150,"src":"10848:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":3127,"name":"uint104","nodeType":"ElementaryTypeName","src":"10848:7:8","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10847:9:8"},"scope":4356,"src":"10791:218:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3177,"nodeType":"Block","src":"11360:149:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3158,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3153,"src":"11374:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3161,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":3160,"name":"uint96","nodeType":"ElementaryTypeName","src":"11387:6:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":3159,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11382:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":3163,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11395:3:8","memberName":"max","nodeType":"MemberAccess","src":"11382:16:8","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11374:24:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3171,"nodeType":"IfStatement","src":"11370:103:8","trueBody":{"id":3170,"nodeType":"Block","src":"11400:73:8","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":3166,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11452:2:8","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":3167,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3153,"src":"11456:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3165,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2601,"src":"11421:30:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":3168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3169,"nodeType":"RevertStatement","src":"11414:48:8"}]}},{"expression":{"arguments":[{"id":3174,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3153,"src":"11496:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3173,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":3172,"name":"uint96","nodeType":"ElementaryTypeName","src":"11489:6:8","typeDescriptions":{}}},"id":3175,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":3157,"id":3176,"nodeType":"Return","src":"11482:20:8"}]},"documentation":{"id":3151,"nodeType":"StructuredDocumentation","src":"11015:276:8","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":3178,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11305:8:8","nodeType":"FunctionDefinition","parameters":{"id":3154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3153,"mutability":"mutable","name":"value","nameLocation":"11322:5:8","nodeType":"VariableDeclaration","scope":3178,"src":"11314:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3152,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:15:8"},"returnParameters":{"id":3157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3156,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3178,"src":"11352:6:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":3155,"name":"uint96","nodeType":"ElementaryTypeName","src":"11352:6:8","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11351:8:8"},"scope":4356,"src":"11296:213:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3205,"nodeType":"Block","src":"11860:149:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3186,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3181,"src":"11874:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3189,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":3188,"name":"uint88","nodeType":"ElementaryTypeName","src":"11887:6:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":3187,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11882:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11882:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":3191,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11895:3:8","memberName":"max","nodeType":"MemberAccess","src":"11882:16:8","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11874:24:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3199,"nodeType":"IfStatement","src":"11870:103:8","trueBody":{"id":3198,"nodeType":"Block","src":"11900:73:8","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":3194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11952:2:8","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":3195,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3181,"src":"11956:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3193,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2601,"src":"11921:30:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":3196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3197,"nodeType":"RevertStatement","src":"11914:48:8"}]}},{"expression":{"arguments":[{"id":3202,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3181,"src":"11996:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3201,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11989:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":3200,"name":"uint88","nodeType":"ElementaryTypeName","src":"11989:6:8","typeDescriptions":{}}},"id":3203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":3185,"id":3204,"nodeType":"Return","src":"11982:20:8"}]},"documentation":{"id":3179,"nodeType":"StructuredDocumentation","src":"11515:276:8","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":3206,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11805:8:8","nodeType":"FunctionDefinition","parameters":{"id":3182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3181,"mutability":"mutable","name":"value","nameLocation":"11822:5:8","nodeType":"VariableDeclaration","scope":3206,"src":"11814:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3180,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11813:15:8"},"returnParameters":{"id":3185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3184,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3206,"src":"11852:6:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":3183,"name":"uint88","nodeType":"ElementaryTypeName","src":"11852:6:8","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11851:8:8"},"scope":4356,"src":"11796:213:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3233,"nodeType":"Block","src":"12360:149:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3214,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3209,"src":"12374:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3217,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":3216,"name":"uint80","nodeType":"ElementaryTypeName","src":"12387:6:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":3215,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12382:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":3219,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12395:3:8","memberName":"max","nodeType":"MemberAccess","src":"12382:16:8","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12374:24:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3227,"nodeType":"IfStatement","src":"12370:103:8","trueBody":{"id":3226,"nodeType":"Block","src":"12400:73:8","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":3222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12452:2:8","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":3223,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3209,"src":"12456:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3221,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2601,"src":"12421:30:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":3224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12421:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3225,"nodeType":"RevertStatement","src":"12414:48:8"}]}},{"expression":{"arguments":[{"id":3230,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3209,"src":"12496:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3229,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12489:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":3228,"name":"uint80","nodeType":"ElementaryTypeName","src":"12489:6:8","typeDescriptions":{}}},"id":3231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12489:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":3213,"id":3232,"nodeType":"Return","src":"12482:20:8"}]},"documentation":{"id":3207,"nodeType":"StructuredDocumentation","src":"12015:276:8","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":3234,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12305:8:8","nodeType":"FunctionDefinition","parameters":{"id":3210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3209,"mutability":"mutable","name":"value","nameLocation":"12322:5:8","nodeType":"VariableDeclaration","scope":3234,"src":"12314:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3208,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:15:8"},"returnParameters":{"id":3213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3212,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3234,"src":"12352:6:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":3211,"name":"uint80","nodeType":"ElementaryTypeName","src":"12352:6:8","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12351:8:8"},"scope":4356,"src":"12296:213:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3261,"nodeType":"Block","src":"12860:149:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3242,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3237,"src":"12874:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3245,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12887:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":3244,"name":"uint72","nodeType":"ElementaryTypeName","src":"12887:6:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":3243,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12882:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3246,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":3247,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12895:3:8","memberName":"max","nodeType":"MemberAccess","src":"12882:16:8","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12874:24:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3255,"nodeType":"IfStatement","src":"12870:103:8","trueBody":{"id":3254,"nodeType":"Block","src":"12900:73:8","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":3250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12952:2:8","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":3251,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3237,"src":"12956:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3249,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2601,"src":"12921:30:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":3252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3253,"nodeType":"RevertStatement","src":"12914:48:8"}]}},{"expression":{"arguments":[{"id":3258,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3237,"src":"12996:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3257,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12989:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":3256,"name":"uint72","nodeType":"ElementaryTypeName","src":"12989:6:8","typeDescriptions":{}}},"id":3259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":3241,"id":3260,"nodeType":"Return","src":"12982:20:8"}]},"documentation":{"id":3235,"nodeType":"StructuredDocumentation","src":"12515:276:8","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":3262,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12805:8:8","nodeType":"FunctionDefinition","parameters":{"id":3238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3237,"mutability":"mutable","name":"value","nameLocation":"12822:5:8","nodeType":"VariableDeclaration","scope":3262,"src":"12814:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3236,"name":"uint256","nodeType":"ElementaryTypeName","src":"12814:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12813:15:8"},"returnParameters":{"id":3241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3240,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3262,"src":"12852:6:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":3239,"name":"uint72","nodeType":"ElementaryTypeName","src":"12852:6:8","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12851:8:8"},"scope":4356,"src":"12796:213:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3289,"nodeType":"Block","src":"13360:149:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3270,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3265,"src":"13374:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3273,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":3272,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":3271,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13382:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":3275,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13395:3:8","memberName":"max","nodeType":"MemberAccess","src":"13382:16:8","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13374:24:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3283,"nodeType":"IfStatement","src":"13370:103:8","trueBody":{"id":3282,"nodeType":"Block","src":"13400:73:8","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":3278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":3279,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3265,"src":"13456:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3277,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2601,"src":"13421:30:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":3280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3281,"nodeType":"RevertStatement","src":"13414:48:8"}]}},{"expression":{"arguments":[{"id":3286,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3265,"src":"13496:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3285,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13489:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":3284,"name":"uint64","nodeType":"ElementaryTypeName","src":"13489:6:8","typeDescriptions":{}}},"id":3287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13489:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":3269,"id":3288,"nodeType":"Return","src":"13482:20:8"}]},"documentation":{"id":3263,"nodeType":"StructuredDocumentation","src":"13015:276:8","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":3290,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13305:8:8","nodeType":"FunctionDefinition","parameters":{"id":3266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3265,"mutability":"mutable","name":"value","nameLocation":"13322:5:8","nodeType":"VariableDeclaration","scope":3290,"src":"13314:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3264,"name":"uint256","nodeType":"ElementaryTypeName","src":"13314:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13313:15:8"},"returnParameters":{"id":3269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3268,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3290,"src":"13352:6:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3267,"name":"uint64","nodeType":"ElementaryTypeName","src":"13352:6:8","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13351:8:8"},"scope":4356,"src":"13296:213:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3317,"nodeType":"Block","src":"13860:149:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3298,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3293,"src":"13874:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3301,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13887:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":3300,"name":"uint56","nodeType":"ElementaryTypeName","src":"13887:6:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":3299,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13882:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13882:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":3303,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13895:3:8","memberName":"max","nodeType":"MemberAccess","src":"13882:16:8","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13874:24:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3311,"nodeType":"IfStatement","src":"13870:103:8","trueBody":{"id":3310,"nodeType":"Block","src":"13900:73:8","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":3306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:8","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":3307,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3293,"src":"13956:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3305,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2601,"src":"13921:30:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":3308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3309,"nodeType":"RevertStatement","src":"13914:48:8"}]}},{"expression":{"arguments":[{"id":3314,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3293,"src":"13996:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3313,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13989:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":3312,"name":"uint56","nodeType":"ElementaryTypeName","src":"13989:6:8","typeDescriptions":{}}},"id":3315,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":3297,"id":3316,"nodeType":"Return","src":"13982:20:8"}]},"documentation":{"id":3291,"nodeType":"StructuredDocumentation","src":"13515:276:8","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":3318,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13805:8:8","nodeType":"FunctionDefinition","parameters":{"id":3294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3293,"mutability":"mutable","name":"value","nameLocation":"13822:5:8","nodeType":"VariableDeclaration","scope":3318,"src":"13814:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3292,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:15:8"},"returnParameters":{"id":3297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3296,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3318,"src":"13852:6:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":3295,"name":"uint56","nodeType":"ElementaryTypeName","src":"13852:6:8","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13851:8:8"},"scope":4356,"src":"13796:213:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3345,"nodeType":"Block","src":"14360:149:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3326,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3321,"src":"14374:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3329,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14387:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":3328,"name":"uint48","nodeType":"ElementaryTypeName","src":"14387:6:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":3327,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14382:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14382:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":3331,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14395:3:8","memberName":"max","nodeType":"MemberAccess","src":"14382:16:8","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14374:24:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3339,"nodeType":"IfStatement","src":"14370:103:8","trueBody":{"id":3338,"nodeType":"Block","src":"14400:73:8","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":3334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:2:8","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":3335,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3321,"src":"14456:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3333,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2601,"src":"14421:30:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":3336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3337,"nodeType":"RevertStatement","src":"14414:48:8"}]}},{"expression":{"arguments":[{"id":3342,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3321,"src":"14496:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3341,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":3340,"name":"uint48","nodeType":"ElementaryTypeName","src":"14489:6:8","typeDescriptions":{}}},"id":3343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":3325,"id":3344,"nodeType":"Return","src":"14482:20:8"}]},"documentation":{"id":3319,"nodeType":"StructuredDocumentation","src":"14015:276:8","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":3346,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14305:8:8","nodeType":"FunctionDefinition","parameters":{"id":3322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3321,"mutability":"mutable","name":"value","nameLocation":"14322:5:8","nodeType":"VariableDeclaration","scope":3346,"src":"14314:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3320,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:15:8"},"returnParameters":{"id":3325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3324,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3346,"src":"14352:6:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":3323,"name":"uint48","nodeType":"ElementaryTypeName","src":"14352:6:8","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14351:8:8"},"scope":4356,"src":"14296:213:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3373,"nodeType":"Block","src":"14860:149:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3354,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3349,"src":"14874:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3357,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14887:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":3356,"name":"uint40","nodeType":"ElementaryTypeName","src":"14887:6:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":3355,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14882:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14882:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":3359,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14895:3:8","memberName":"max","nodeType":"MemberAccess","src":"14882:16:8","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14874:24:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3367,"nodeType":"IfStatement","src":"14870:103:8","trueBody":{"id":3366,"nodeType":"Block","src":"14900:73:8","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":3362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14952:2:8","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":3363,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3349,"src":"14956:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3361,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2601,"src":"14921:30:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":3364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14921:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3365,"nodeType":"RevertStatement","src":"14914:48:8"}]}},{"expression":{"arguments":[{"id":3370,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3349,"src":"14996:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3369,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14989:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":3368,"name":"uint40","nodeType":"ElementaryTypeName","src":"14989:6:8","typeDescriptions":{}}},"id":3371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14989:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":3353,"id":3372,"nodeType":"Return","src":"14982:20:8"}]},"documentation":{"id":3347,"nodeType":"StructuredDocumentation","src":"14515:276:8","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":3374,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14805:8:8","nodeType":"FunctionDefinition","parameters":{"id":3350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3349,"mutability":"mutable","name":"value","nameLocation":"14822:5:8","nodeType":"VariableDeclaration","scope":3374,"src":"14814:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3348,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14813:15:8"},"returnParameters":{"id":3353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3352,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3374,"src":"14852:6:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":3351,"name":"uint40","nodeType":"ElementaryTypeName","src":"14852:6:8","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14851:8:8"},"scope":4356,"src":"14796:213:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3401,"nodeType":"Block","src":"15360:149:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3382,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3377,"src":"15374:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3385,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15387:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":3384,"name":"uint32","nodeType":"ElementaryTypeName","src":"15387:6:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":3383,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15382:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15382:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":3387,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15395:3:8","memberName":"max","nodeType":"MemberAccess","src":"15382:16:8","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15374:24:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3395,"nodeType":"IfStatement","src":"15370:103:8","trueBody":{"id":3394,"nodeType":"Block","src":"15400:73:8","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":3390,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15452:2:8","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":3391,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3377,"src":"15456:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3389,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2601,"src":"15421:30:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":3392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3393,"nodeType":"RevertStatement","src":"15414:48:8"}]}},{"expression":{"arguments":[{"id":3398,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3377,"src":"15496:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3397,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15489:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":3396,"name":"uint32","nodeType":"ElementaryTypeName","src":"15489:6:8","typeDescriptions":{}}},"id":3399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15489:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":3381,"id":3400,"nodeType":"Return","src":"15482:20:8"}]},"documentation":{"id":3375,"nodeType":"StructuredDocumentation","src":"15015:276:8","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":3402,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15305:8:8","nodeType":"FunctionDefinition","parameters":{"id":3378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3377,"mutability":"mutable","name":"value","nameLocation":"15322:5:8","nodeType":"VariableDeclaration","scope":3402,"src":"15314:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3376,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15313:15:8"},"returnParameters":{"id":3381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3380,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3402,"src":"15352:6:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3379,"name":"uint32","nodeType":"ElementaryTypeName","src":"15352:6:8","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15351:8:8"},"scope":4356,"src":"15296:213:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3429,"nodeType":"Block","src":"15860:149:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3410,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3405,"src":"15874:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3413,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":3412,"name":"uint24","nodeType":"ElementaryTypeName","src":"15887:6:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":3411,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15882:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":3415,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15895:3:8","memberName":"max","nodeType":"MemberAccess","src":"15882:16:8","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15874:24:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3423,"nodeType":"IfStatement","src":"15870:103:8","trueBody":{"id":3422,"nodeType":"Block","src":"15900:73:8","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":3418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15952:2:8","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":3419,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3405,"src":"15956:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3417,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2601,"src":"15921:30:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":3420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15921:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3421,"nodeType":"RevertStatement","src":"15914:48:8"}]}},{"expression":{"arguments":[{"id":3426,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3405,"src":"15996:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3425,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15989:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":3424,"name":"uint24","nodeType":"ElementaryTypeName","src":"15989:6:8","typeDescriptions":{}}},"id":3427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15989:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":3409,"id":3428,"nodeType":"Return","src":"15982:20:8"}]},"documentation":{"id":3403,"nodeType":"StructuredDocumentation","src":"15515:276:8","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":3430,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15805:8:8","nodeType":"FunctionDefinition","parameters":{"id":3406,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3405,"mutability":"mutable","name":"value","nameLocation":"15822:5:8","nodeType":"VariableDeclaration","scope":3430,"src":"15814:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3404,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15813:15:8"},"returnParameters":{"id":3409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3408,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3430,"src":"15852:6:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":3407,"name":"uint24","nodeType":"ElementaryTypeName","src":"15852:6:8","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15851:8:8"},"scope":4356,"src":"15796:213:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3457,"nodeType":"Block","src":"16360:149:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3438,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3433,"src":"16374:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3441,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16387:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":3440,"name":"uint16","nodeType":"ElementaryTypeName","src":"16387:6:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":3439,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16382:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3442,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16382:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":3443,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16395:3:8","memberName":"max","nodeType":"MemberAccess","src":"16382:16:8","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16374:24:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3451,"nodeType":"IfStatement","src":"16370:103:8","trueBody":{"id":3450,"nodeType":"Block","src":"16400:73:8","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":3446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16452:2:8","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":3447,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3433,"src":"16456:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3445,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2601,"src":"16421:30:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":3448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16421:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3449,"nodeType":"RevertStatement","src":"16414:48:8"}]}},{"expression":{"arguments":[{"id":3454,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3433,"src":"16496:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3453,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16489:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":3452,"name":"uint16","nodeType":"ElementaryTypeName","src":"16489:6:8","typeDescriptions":{}}},"id":3455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":3437,"id":3456,"nodeType":"Return","src":"16482:20:8"}]},"documentation":{"id":3431,"nodeType":"StructuredDocumentation","src":"16015:276:8","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":3458,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16305:8:8","nodeType":"FunctionDefinition","parameters":{"id":3434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3433,"mutability":"mutable","name":"value","nameLocation":"16322:5:8","nodeType":"VariableDeclaration","scope":3458,"src":"16314:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3432,"name":"uint256","nodeType":"ElementaryTypeName","src":"16314:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16313:15:8"},"returnParameters":{"id":3437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3436,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3458,"src":"16352:6:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":3435,"name":"uint16","nodeType":"ElementaryTypeName","src":"16352:6:8","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16351:8:8"},"scope":4356,"src":"16296:213:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3485,"nodeType":"Block","src":"16854:146:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3466,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3461,"src":"16868:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3469,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16881:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3468,"name":"uint8","nodeType":"ElementaryTypeName","src":"16881:5:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":3467,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16876:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16876:11:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":3471,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16888:3:8","memberName":"max","nodeType":"MemberAccess","src":"16876:15:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16868:23:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3479,"nodeType":"IfStatement","src":"16864:101:8","trueBody":{"id":3478,"nodeType":"Block","src":"16893:72:8","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":3474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16945:1:8","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":3475,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3461,"src":"16948:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3473,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2601,"src":"16914:30:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":3476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16914:40:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3477,"nodeType":"RevertStatement","src":"16907:47:8"}]}},{"expression":{"arguments":[{"id":3482,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3461,"src":"16987:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3481,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3480,"name":"uint8","nodeType":"ElementaryTypeName","src":"16981:5:8","typeDescriptions":{}}},"id":3483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":3465,"id":3484,"nodeType":"Return","src":"16974:19:8"}]},"documentation":{"id":3459,"nodeType":"StructuredDocumentation","src":"16515:272:8","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":3486,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16801:7:8","nodeType":"FunctionDefinition","parameters":{"id":3462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3461,"mutability":"mutable","name":"value","nameLocation":"16817:5:8","nodeType":"VariableDeclaration","scope":3486,"src":"16809:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3460,"name":"uint256","nodeType":"ElementaryTypeName","src":"16809:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16808:15:8"},"returnParameters":{"id":3465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3464,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3486,"src":"16847:5:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3463,"name":"uint8","nodeType":"ElementaryTypeName","src":"16847:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16846:7:8"},"scope":4356,"src":"16792:208:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3508,"nodeType":"Block","src":"17236:128:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3494,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3489,"src":"17250:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":3495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17258:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17250:9:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3502,"nodeType":"IfStatement","src":"17246:81:8","trueBody":{"id":3501,"nodeType":"Block","src":"17261:66:8","statements":[{"errorCall":{"arguments":[{"id":3498,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3489,"src":"17310:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3497,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2606,"src":"17282:27:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$_t_error_$","typeString":"function (int256) pure returns (error)"}},"id":3499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17282:34:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3500,"nodeType":"RevertStatement","src":"17275:41:8"}]}},{"expression":{"arguments":[{"id":3505,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3489,"src":"17351:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3504,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17343:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3503,"name":"uint256","nodeType":"ElementaryTypeName","src":"17343:7:8","typeDescriptions":{}}},"id":3506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:14:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3493,"id":3507,"nodeType":"Return","src":"17336:21:8"}]},"documentation":{"id":3487,"nodeType":"StructuredDocumentation","src":"17006:160:8","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":3509,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17180:9:8","nodeType":"FunctionDefinition","parameters":{"id":3490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3489,"mutability":"mutable","name":"value","nameLocation":"17197:5:8","nodeType":"VariableDeclaration","scope":3509,"src":"17190:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3488,"name":"int256","nodeType":"ElementaryTypeName","src":"17190:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17189:14:8"},"returnParameters":{"id":3493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3492,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3509,"src":"17227:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3491,"name":"uint256","nodeType":"ElementaryTypeName","src":"17227:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17226:9:8"},"scope":4356,"src":"17171:193:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3534,"nodeType":"Block","src":"17761:150:8","statements":[{"expression":{"id":3522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3517,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3515,"src":"17771:10:8","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3520,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3512,"src":"17791:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3519,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17784:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":3518,"name":"int248","nodeType":"ElementaryTypeName","src":"17784:6:8","typeDescriptions":{}}},"id":3521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17784:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17771:26:8","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":3523,"nodeType":"ExpressionStatement","src":"17771:26:8"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3524,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3515,"src":"17811:10:8","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3525,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3512,"src":"17825:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17811:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3533,"nodeType":"IfStatement","src":"17807:98:8","trueBody":{"id":3532,"nodeType":"Block","src":"17832:73:8","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":3528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17883:3:8","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":3529,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3512,"src":"17888:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3527,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2613,"src":"17853:29:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":3530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17853:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3531,"nodeType":"RevertStatement","src":"17846:48:8"}]}}]},"documentation":{"id":3510,"nodeType":"StructuredDocumentation","src":"17370:312:8","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":3535,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17696:8:8","nodeType":"FunctionDefinition","parameters":{"id":3513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3512,"mutability":"mutable","name":"value","nameLocation":"17712:5:8","nodeType":"VariableDeclaration","scope":3535,"src":"17705:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3511,"name":"int256","nodeType":"ElementaryTypeName","src":"17705:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17704:14:8"},"returnParameters":{"id":3516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3515,"mutability":"mutable","name":"downcasted","nameLocation":"17749:10:8","nodeType":"VariableDeclaration","scope":3535,"src":"17742:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":3514,"name":"int248","nodeType":"ElementaryTypeName","src":"17742:6:8","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17741:19:8"},"scope":4356,"src":"17687:224:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3560,"nodeType":"Block","src":"18308:150:8","statements":[{"expression":{"id":3548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3543,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3541,"src":"18318:10:8","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3546,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3538,"src":"18338:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3545,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18331:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":3544,"name":"int240","nodeType":"ElementaryTypeName","src":"18331:6:8","typeDescriptions":{}}},"id":3547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18331:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:26:8","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":3549,"nodeType":"ExpressionStatement","src":"18318:26:8"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3550,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3541,"src":"18358:10:8","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3551,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3538,"src":"18372:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18358:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3559,"nodeType":"IfStatement","src":"18354:98:8","trueBody":{"id":3558,"nodeType":"Block","src":"18379:73:8","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":3554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18430:3:8","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":3555,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3538,"src":"18435:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3553,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2613,"src":"18400:29:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":3556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18400:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3557,"nodeType":"RevertStatement","src":"18393:48:8"}]}}]},"documentation":{"id":3536,"nodeType":"StructuredDocumentation","src":"17917:312:8","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":3561,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18243:8:8","nodeType":"FunctionDefinition","parameters":{"id":3539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3538,"mutability":"mutable","name":"value","nameLocation":"18259:5:8","nodeType":"VariableDeclaration","scope":3561,"src":"18252:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3537,"name":"int256","nodeType":"ElementaryTypeName","src":"18252:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18251:14:8"},"returnParameters":{"id":3542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3541,"mutability":"mutable","name":"downcasted","nameLocation":"18296:10:8","nodeType":"VariableDeclaration","scope":3561,"src":"18289:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":3540,"name":"int240","nodeType":"ElementaryTypeName","src":"18289:6:8","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18288:19:8"},"scope":4356,"src":"18234:224:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3586,"nodeType":"Block","src":"18855:150:8","statements":[{"expression":{"id":3574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3569,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3567,"src":"18865:10:8","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3572,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3564,"src":"18885:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3571,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":3570,"name":"int232","nodeType":"ElementaryTypeName","src":"18878:6:8","typeDescriptions":{}}},"id":3573,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18865:26:8","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":3575,"nodeType":"ExpressionStatement","src":"18865:26:8"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3576,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3567,"src":"18905:10:8","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3577,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3564,"src":"18919:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18905:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3585,"nodeType":"IfStatement","src":"18901:98:8","trueBody":{"id":3584,"nodeType":"Block","src":"18926:73:8","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":3580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18977:3:8","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":3581,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3564,"src":"18982:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3579,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2613,"src":"18947:29:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":3582,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18947:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3583,"nodeType":"RevertStatement","src":"18940:48:8"}]}}]},"documentation":{"id":3562,"nodeType":"StructuredDocumentation","src":"18464:312:8","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":3587,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18790:8:8","nodeType":"FunctionDefinition","parameters":{"id":3565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3564,"mutability":"mutable","name":"value","nameLocation":"18806:5:8","nodeType":"VariableDeclaration","scope":3587,"src":"18799:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3563,"name":"int256","nodeType":"ElementaryTypeName","src":"18799:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18798:14:8"},"returnParameters":{"id":3568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3567,"mutability":"mutable","name":"downcasted","nameLocation":"18843:10:8","nodeType":"VariableDeclaration","scope":3587,"src":"18836:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":3566,"name":"int232","nodeType":"ElementaryTypeName","src":"18836:6:8","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18835:19:8"},"scope":4356,"src":"18781:224:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3612,"nodeType":"Block","src":"19402:150:8","statements":[{"expression":{"id":3600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3595,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3593,"src":"19412:10:8","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3598,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3590,"src":"19432:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3597,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19425:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":3596,"name":"int224","nodeType":"ElementaryTypeName","src":"19425:6:8","typeDescriptions":{}}},"id":3599,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19425:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19412:26:8","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":3601,"nodeType":"ExpressionStatement","src":"19412:26:8"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3602,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3593,"src":"19452:10:8","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3603,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3590,"src":"19466:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19452:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3611,"nodeType":"IfStatement","src":"19448:98:8","trueBody":{"id":3610,"nodeType":"Block","src":"19473:73:8","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":3606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19524:3:8","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":3607,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3590,"src":"19529:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3605,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2613,"src":"19494:29:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":3608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19494:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3609,"nodeType":"RevertStatement","src":"19487:48:8"}]}}]},"documentation":{"id":3588,"nodeType":"StructuredDocumentation","src":"19011:312:8","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":3613,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19337:8:8","nodeType":"FunctionDefinition","parameters":{"id":3591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3590,"mutability":"mutable","name":"value","nameLocation":"19353:5:8","nodeType":"VariableDeclaration","scope":3613,"src":"19346:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3589,"name":"int256","nodeType":"ElementaryTypeName","src":"19346:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19345:14:8"},"returnParameters":{"id":3594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3593,"mutability":"mutable","name":"downcasted","nameLocation":"19390:10:8","nodeType":"VariableDeclaration","scope":3613,"src":"19383:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":3592,"name":"int224","nodeType":"ElementaryTypeName","src":"19383:6:8","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19382:19:8"},"scope":4356,"src":"19328:224:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3638,"nodeType":"Block","src":"19949:150:8","statements":[{"expression":{"id":3626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3621,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3619,"src":"19959:10:8","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3624,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3616,"src":"19979:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3623,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19972:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":3622,"name":"int216","nodeType":"ElementaryTypeName","src":"19972:6:8","typeDescriptions":{}}},"id":3625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19972:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19959:26:8","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":3627,"nodeType":"ExpressionStatement","src":"19959:26:8"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3628,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3619,"src":"19999:10:8","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3629,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3616,"src":"20013:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19999:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3637,"nodeType":"IfStatement","src":"19995:98:8","trueBody":{"id":3636,"nodeType":"Block","src":"20020:73:8","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":3632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20071:3:8","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":3633,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3616,"src":"20076:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3631,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2613,"src":"20041:29:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":3634,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20041:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3635,"nodeType":"RevertStatement","src":"20034:48:8"}]}}]},"documentation":{"id":3614,"nodeType":"StructuredDocumentation","src":"19558:312:8","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":3639,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19884:8:8","nodeType":"FunctionDefinition","parameters":{"id":3617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3616,"mutability":"mutable","name":"value","nameLocation":"19900:5:8","nodeType":"VariableDeclaration","scope":3639,"src":"19893:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3615,"name":"int256","nodeType":"ElementaryTypeName","src":"19893:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19892:14:8"},"returnParameters":{"id":3620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3619,"mutability":"mutable","name":"downcasted","nameLocation":"19937:10:8","nodeType":"VariableDeclaration","scope":3639,"src":"19930:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":3618,"name":"int216","nodeType":"ElementaryTypeName","src":"19930:6:8","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19929:19:8"},"scope":4356,"src":"19875:224:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3664,"nodeType":"Block","src":"20496:150:8","statements":[{"expression":{"id":3652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3647,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3645,"src":"20506:10:8","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3650,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3642,"src":"20526:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3649,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20519:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":3648,"name":"int208","nodeType":"ElementaryTypeName","src":"20519:6:8","typeDescriptions":{}}},"id":3651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20506:26:8","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":3653,"nodeType":"ExpressionStatement","src":"20506:26:8"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3654,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3645,"src":"20546:10:8","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3655,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3642,"src":"20560:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20546:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3663,"nodeType":"IfStatement","src":"20542:98:8","trueBody":{"id":3662,"nodeType":"Block","src":"20567:73:8","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":3658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20618:3:8","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":3659,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3642,"src":"20623:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3657,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2613,"src":"20588:29:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":3660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3661,"nodeType":"RevertStatement","src":"20581:48:8"}]}}]},"documentation":{"id":3640,"nodeType":"StructuredDocumentation","src":"20105:312:8","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":3665,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20431:8:8","nodeType":"FunctionDefinition","parameters":{"id":3643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3642,"mutability":"mutable","name":"value","nameLocation":"20447:5:8","nodeType":"VariableDeclaration","scope":3665,"src":"20440:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3641,"name":"int256","nodeType":"ElementaryTypeName","src":"20440:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20439:14:8"},"returnParameters":{"id":3646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3645,"mutability":"mutable","name":"downcasted","nameLocation":"20484:10:8","nodeType":"VariableDeclaration","scope":3665,"src":"20477:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":3644,"name":"int208","nodeType":"ElementaryTypeName","src":"20477:6:8","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20476:19:8"},"scope":4356,"src":"20422:224:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3690,"nodeType":"Block","src":"21043:150:8","statements":[{"expression":{"id":3678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3673,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3671,"src":"21053:10:8","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3676,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3668,"src":"21073:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3675,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21066:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":3674,"name":"int200","nodeType":"ElementaryTypeName","src":"21066:6:8","typeDescriptions":{}}},"id":3677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21066:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21053:26:8","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":3679,"nodeType":"ExpressionStatement","src":"21053:26:8"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3680,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3671,"src":"21093:10:8","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3681,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3668,"src":"21107:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21093:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3689,"nodeType":"IfStatement","src":"21089:98:8","trueBody":{"id":3688,"nodeType":"Block","src":"21114:73:8","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":3684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21165:3:8","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":3685,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3668,"src":"21170:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3683,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2613,"src":"21135:29:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":3686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21135:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3687,"nodeType":"RevertStatement","src":"21128:48:8"}]}}]},"documentation":{"id":3666,"nodeType":"StructuredDocumentation","src":"20652:312:8","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":3691,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20978:8:8","nodeType":"FunctionDefinition","parameters":{"id":3669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3668,"mutability":"mutable","name":"value","nameLocation":"20994:5:8","nodeType":"VariableDeclaration","scope":3691,"src":"20987:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3667,"name":"int256","nodeType":"ElementaryTypeName","src":"20987:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20986:14:8"},"returnParameters":{"id":3672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3671,"mutability":"mutable","name":"downcasted","nameLocation":"21031:10:8","nodeType":"VariableDeclaration","scope":3691,"src":"21024:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":3670,"name":"int200","nodeType":"ElementaryTypeName","src":"21024:6:8","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21023:19:8"},"scope":4356,"src":"20969:224:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3716,"nodeType":"Block","src":"21590:150:8","statements":[{"expression":{"id":3704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3699,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3697,"src":"21600:10:8","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3702,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3694,"src":"21620:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3701,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21613:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":3700,"name":"int192","nodeType":"ElementaryTypeName","src":"21613:6:8","typeDescriptions":{}}},"id":3703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21600:26:8","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":3705,"nodeType":"ExpressionStatement","src":"21600:26:8"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3706,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3697,"src":"21640:10:8","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3707,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3694,"src":"21654:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21640:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3715,"nodeType":"IfStatement","src":"21636:98:8","trueBody":{"id":3714,"nodeType":"Block","src":"21661:73:8","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":3710,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21712:3:8","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":3711,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3694,"src":"21717:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3709,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2613,"src":"21682:29:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":3712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3713,"nodeType":"RevertStatement","src":"21675:48:8"}]}}]},"documentation":{"id":3692,"nodeType":"StructuredDocumentation","src":"21199:312:8","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":3717,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21525:8:8","nodeType":"FunctionDefinition","parameters":{"id":3695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3694,"mutability":"mutable","name":"value","nameLocation":"21541:5:8","nodeType":"VariableDeclaration","scope":3717,"src":"21534:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3693,"name":"int256","nodeType":"ElementaryTypeName","src":"21534:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21533:14:8"},"returnParameters":{"id":3698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3697,"mutability":"mutable","name":"downcasted","nameLocation":"21578:10:8","nodeType":"VariableDeclaration","scope":3717,"src":"21571:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":3696,"name":"int192","nodeType":"ElementaryTypeName","src":"21571:6:8","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21570:19:8"},"scope":4356,"src":"21516:224:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3742,"nodeType":"Block","src":"22137:150:8","statements":[{"expression":{"id":3730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3725,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3723,"src":"22147:10:8","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3728,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3720,"src":"22167:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3727,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22160:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":3726,"name":"int184","nodeType":"ElementaryTypeName","src":"22160:6:8","typeDescriptions":{}}},"id":3729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22160:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22147:26:8","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":3731,"nodeType":"ExpressionStatement","src":"22147:26:8"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3732,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3723,"src":"22187:10:8","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3733,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3720,"src":"22201:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22187:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3741,"nodeType":"IfStatement","src":"22183:98:8","trueBody":{"id":3740,"nodeType":"Block","src":"22208:73:8","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":3736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22259:3:8","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":3737,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3720,"src":"22264:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3735,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2613,"src":"22229:29:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":3738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22229:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3739,"nodeType":"RevertStatement","src":"22222:48:8"}]}}]},"documentation":{"id":3718,"nodeType":"StructuredDocumentation","src":"21746:312:8","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":3743,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22072:8:8","nodeType":"FunctionDefinition","parameters":{"id":3721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3720,"mutability":"mutable","name":"value","nameLocation":"22088:5:8","nodeType":"VariableDeclaration","scope":3743,"src":"22081:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3719,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22080:14:8"},"returnParameters":{"id":3724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3723,"mutability":"mutable","name":"downcasted","nameLocation":"22125:10:8","nodeType":"VariableDeclaration","scope":3743,"src":"22118:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":3722,"name":"int184","nodeType":"ElementaryTypeName","src":"22118:6:8","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22117:19:8"},"scope":4356,"src":"22063:224:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3768,"nodeType":"Block","src":"22684:150:8","statements":[{"expression":{"id":3756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3751,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3749,"src":"22694:10:8","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3754,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3746,"src":"22714:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3753,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22707:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":3752,"name":"int176","nodeType":"ElementaryTypeName","src":"22707:6:8","typeDescriptions":{}}},"id":3755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22707:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22694:26:8","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":3757,"nodeType":"ExpressionStatement","src":"22694:26:8"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3758,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3749,"src":"22734:10:8","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3759,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3746,"src":"22748:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22734:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3767,"nodeType":"IfStatement","src":"22730:98:8","trueBody":{"id":3766,"nodeType":"Block","src":"22755:73:8","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":3762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:3:8","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":3763,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3746,"src":"22811:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3761,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2613,"src":"22776:29:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":3764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22776:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3765,"nodeType":"RevertStatement","src":"22769:48:8"}]}}]},"documentation":{"id":3744,"nodeType":"StructuredDocumentation","src":"22293:312:8","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":3769,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22619:8:8","nodeType":"FunctionDefinition","parameters":{"id":3747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3746,"mutability":"mutable","name":"value","nameLocation":"22635:5:8","nodeType":"VariableDeclaration","scope":3769,"src":"22628:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3745,"name":"int256","nodeType":"ElementaryTypeName","src":"22628:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22627:14:8"},"returnParameters":{"id":3750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3749,"mutability":"mutable","name":"downcasted","nameLocation":"22672:10:8","nodeType":"VariableDeclaration","scope":3769,"src":"22665:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":3748,"name":"int176","nodeType":"ElementaryTypeName","src":"22665:6:8","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22664:19:8"},"scope":4356,"src":"22610:224:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3794,"nodeType":"Block","src":"23231:150:8","statements":[{"expression":{"id":3782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3777,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3775,"src":"23241:10:8","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3780,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3772,"src":"23261:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3779,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23254:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":3778,"name":"int168","nodeType":"ElementaryTypeName","src":"23254:6:8","typeDescriptions":{}}},"id":3781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23254:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23241:26:8","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":3783,"nodeType":"ExpressionStatement","src":"23241:26:8"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3784,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3775,"src":"23281:10:8","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3785,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3772,"src":"23295:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23281:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3793,"nodeType":"IfStatement","src":"23277:98:8","trueBody":{"id":3792,"nodeType":"Block","src":"23302:73:8","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":3788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23353:3:8","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":3789,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3772,"src":"23358:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3787,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2613,"src":"23323:29:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":3790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3791,"nodeType":"RevertStatement","src":"23316:48:8"}]}}]},"documentation":{"id":3770,"nodeType":"StructuredDocumentation","src":"22840:312:8","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":3795,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23166:8:8","nodeType":"FunctionDefinition","parameters":{"id":3773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3772,"mutability":"mutable","name":"value","nameLocation":"23182:5:8","nodeType":"VariableDeclaration","scope":3795,"src":"23175:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3771,"name":"int256","nodeType":"ElementaryTypeName","src":"23175:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23174:14:8"},"returnParameters":{"id":3776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3775,"mutability":"mutable","name":"downcasted","nameLocation":"23219:10:8","nodeType":"VariableDeclaration","scope":3795,"src":"23212:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":3774,"name":"int168","nodeType":"ElementaryTypeName","src":"23212:6:8","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23211:19:8"},"scope":4356,"src":"23157:224:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3820,"nodeType":"Block","src":"23778:150:8","statements":[{"expression":{"id":3808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3803,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3801,"src":"23788:10:8","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3806,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3798,"src":"23808:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3805,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23801:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":3804,"name":"int160","nodeType":"ElementaryTypeName","src":"23801:6:8","typeDescriptions":{}}},"id":3807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23801:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23788:26:8","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":3809,"nodeType":"ExpressionStatement","src":"23788:26:8"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3810,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3801,"src":"23828:10:8","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3811,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3798,"src":"23842:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23828:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3819,"nodeType":"IfStatement","src":"23824:98:8","trueBody":{"id":3818,"nodeType":"Block","src":"23849:73:8","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":3814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23900:3:8","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":3815,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3798,"src":"23905:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3813,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2613,"src":"23870:29:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":3816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23870:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3817,"nodeType":"RevertStatement","src":"23863:48:8"}]}}]},"documentation":{"id":3796,"nodeType":"StructuredDocumentation","src":"23387:312:8","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":3821,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23713:8:8","nodeType":"FunctionDefinition","parameters":{"id":3799,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3798,"mutability":"mutable","name":"value","nameLocation":"23729:5:8","nodeType":"VariableDeclaration","scope":3821,"src":"23722:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3797,"name":"int256","nodeType":"ElementaryTypeName","src":"23722:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23721:14:8"},"returnParameters":{"id":3802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3801,"mutability":"mutable","name":"downcasted","nameLocation":"23766:10:8","nodeType":"VariableDeclaration","scope":3821,"src":"23759:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":3800,"name":"int160","nodeType":"ElementaryTypeName","src":"23759:6:8","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23758:19:8"},"scope":4356,"src":"23704:224:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3846,"nodeType":"Block","src":"24325:150:8","statements":[{"expression":{"id":3834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3829,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3827,"src":"24335:10:8","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3832,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3824,"src":"24355:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3831,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24348:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":3830,"name":"int152","nodeType":"ElementaryTypeName","src":"24348:6:8","typeDescriptions":{}}},"id":3833,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24348:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24335:26:8","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":3835,"nodeType":"ExpressionStatement","src":"24335:26:8"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3836,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3827,"src":"24375:10:8","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3837,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3824,"src":"24389:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24375:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3845,"nodeType":"IfStatement","src":"24371:98:8","trueBody":{"id":3844,"nodeType":"Block","src":"24396:73:8","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":3840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24447:3:8","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":3841,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3824,"src":"24452:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3839,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2613,"src":"24417:29:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":3842,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24417:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3843,"nodeType":"RevertStatement","src":"24410:48:8"}]}}]},"documentation":{"id":3822,"nodeType":"StructuredDocumentation","src":"23934:312:8","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":3847,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24260:8:8","nodeType":"FunctionDefinition","parameters":{"id":3825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3824,"mutability":"mutable","name":"value","nameLocation":"24276:5:8","nodeType":"VariableDeclaration","scope":3847,"src":"24269:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3823,"name":"int256","nodeType":"ElementaryTypeName","src":"24269:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24268:14:8"},"returnParameters":{"id":3828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3827,"mutability":"mutable","name":"downcasted","nameLocation":"24313:10:8","nodeType":"VariableDeclaration","scope":3847,"src":"24306:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":3826,"name":"int152","nodeType":"ElementaryTypeName","src":"24306:6:8","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24305:19:8"},"scope":4356,"src":"24251:224:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3872,"nodeType":"Block","src":"24872:150:8","statements":[{"expression":{"id":3860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3855,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3853,"src":"24882:10:8","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3858,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3850,"src":"24902:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3857,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24895:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":3856,"name":"int144","nodeType":"ElementaryTypeName","src":"24895:6:8","typeDescriptions":{}}},"id":3859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24882:26:8","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":3861,"nodeType":"ExpressionStatement","src":"24882:26:8"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3862,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3853,"src":"24922:10:8","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3863,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3850,"src":"24936:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24922:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3871,"nodeType":"IfStatement","src":"24918:98:8","trueBody":{"id":3870,"nodeType":"Block","src":"24943:73:8","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":3866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24994:3:8","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":3867,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3850,"src":"24999:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3865,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2613,"src":"24964:29:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":3868,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3869,"nodeType":"RevertStatement","src":"24957:48:8"}]}}]},"documentation":{"id":3848,"nodeType":"StructuredDocumentation","src":"24481:312:8","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":3873,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24807:8:8","nodeType":"FunctionDefinition","parameters":{"id":3851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3850,"mutability":"mutable","name":"value","nameLocation":"24823:5:8","nodeType":"VariableDeclaration","scope":3873,"src":"24816:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3849,"name":"int256","nodeType":"ElementaryTypeName","src":"24816:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24815:14:8"},"returnParameters":{"id":3854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3853,"mutability":"mutable","name":"downcasted","nameLocation":"24860:10:8","nodeType":"VariableDeclaration","scope":3873,"src":"24853:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":3852,"name":"int144","nodeType":"ElementaryTypeName","src":"24853:6:8","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24852:19:8"},"scope":4356,"src":"24798:224:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3898,"nodeType":"Block","src":"25419:150:8","statements":[{"expression":{"id":3886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3881,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3879,"src":"25429:10:8","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3884,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3876,"src":"25449:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3883,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25442:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":3882,"name":"int136","nodeType":"ElementaryTypeName","src":"25442:6:8","typeDescriptions":{}}},"id":3885,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25442:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25429:26:8","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":3887,"nodeType":"ExpressionStatement","src":"25429:26:8"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3888,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3879,"src":"25469:10:8","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3889,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3876,"src":"25483:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25469:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3897,"nodeType":"IfStatement","src":"25465:98:8","trueBody":{"id":3896,"nodeType":"Block","src":"25490:73:8","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":3892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25541:3:8","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":3893,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3876,"src":"25546:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3891,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2613,"src":"25511:29:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":3894,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25511:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3895,"nodeType":"RevertStatement","src":"25504:48:8"}]}}]},"documentation":{"id":3874,"nodeType":"StructuredDocumentation","src":"25028:312:8","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":3899,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25354:8:8","nodeType":"FunctionDefinition","parameters":{"id":3877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3876,"mutability":"mutable","name":"value","nameLocation":"25370:5:8","nodeType":"VariableDeclaration","scope":3899,"src":"25363:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3875,"name":"int256","nodeType":"ElementaryTypeName","src":"25363:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25362:14:8"},"returnParameters":{"id":3880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3879,"mutability":"mutable","name":"downcasted","nameLocation":"25407:10:8","nodeType":"VariableDeclaration","scope":3899,"src":"25400:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":3878,"name":"int136","nodeType":"ElementaryTypeName","src":"25400:6:8","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25399:19:8"},"scope":4356,"src":"25345:224:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3924,"nodeType":"Block","src":"25966:150:8","statements":[{"expression":{"id":3912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3907,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3905,"src":"25976:10:8","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3910,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3902,"src":"25996:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3909,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25989:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":3908,"name":"int128","nodeType":"ElementaryTypeName","src":"25989:6:8","typeDescriptions":{}}},"id":3911,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25989:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25976:26:8","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":3913,"nodeType":"ExpressionStatement","src":"25976:26:8"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3914,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3905,"src":"26016:10:8","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3915,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3902,"src":"26030:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26016:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3923,"nodeType":"IfStatement","src":"26012:98:8","trueBody":{"id":3922,"nodeType":"Block","src":"26037:73:8","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":3918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26088:3:8","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":3919,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3902,"src":"26093:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3917,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2613,"src":"26058:29:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":3920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26058:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3921,"nodeType":"RevertStatement","src":"26051:48:8"}]}}]},"documentation":{"id":3900,"nodeType":"StructuredDocumentation","src":"25575:312:8","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":3925,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25901:8:8","nodeType":"FunctionDefinition","parameters":{"id":3903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3902,"mutability":"mutable","name":"value","nameLocation":"25917:5:8","nodeType":"VariableDeclaration","scope":3925,"src":"25910:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3901,"name":"int256","nodeType":"ElementaryTypeName","src":"25910:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25909:14:8"},"returnParameters":{"id":3906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3905,"mutability":"mutable","name":"downcasted","nameLocation":"25954:10:8","nodeType":"VariableDeclaration","scope":3925,"src":"25947:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":3904,"name":"int128","nodeType":"ElementaryTypeName","src":"25947:6:8","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25946:19:8"},"scope":4356,"src":"25892:224:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3950,"nodeType":"Block","src":"26513:150:8","statements":[{"expression":{"id":3938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3933,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3931,"src":"26523:10:8","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3936,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3928,"src":"26543:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3935,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26536:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":3934,"name":"int120","nodeType":"ElementaryTypeName","src":"26536:6:8","typeDescriptions":{}}},"id":3937,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26536:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26523:26:8","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":3939,"nodeType":"ExpressionStatement","src":"26523:26:8"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3940,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3931,"src":"26563:10:8","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3941,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3928,"src":"26577:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26563:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3949,"nodeType":"IfStatement","src":"26559:98:8","trueBody":{"id":3948,"nodeType":"Block","src":"26584:73:8","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":3944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26635:3:8","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":3945,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3928,"src":"26640:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3943,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2613,"src":"26605:29:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":3946,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26605:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3947,"nodeType":"RevertStatement","src":"26598:48:8"}]}}]},"documentation":{"id":3926,"nodeType":"StructuredDocumentation","src":"26122:312:8","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":3951,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26448:8:8","nodeType":"FunctionDefinition","parameters":{"id":3929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3928,"mutability":"mutable","name":"value","nameLocation":"26464:5:8","nodeType":"VariableDeclaration","scope":3951,"src":"26457:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3927,"name":"int256","nodeType":"ElementaryTypeName","src":"26457:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26456:14:8"},"returnParameters":{"id":3932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3931,"mutability":"mutable","name":"downcasted","nameLocation":"26501:10:8","nodeType":"VariableDeclaration","scope":3951,"src":"26494:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":3930,"name":"int120","nodeType":"ElementaryTypeName","src":"26494:6:8","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26493:19:8"},"scope":4356,"src":"26439:224:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3976,"nodeType":"Block","src":"27060:150:8","statements":[{"expression":{"id":3964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3959,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3957,"src":"27070:10:8","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3962,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3954,"src":"27090:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3961,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27083:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":3960,"name":"int112","nodeType":"ElementaryTypeName","src":"27083:6:8","typeDescriptions":{}}},"id":3963,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27083:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27070:26:8","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":3965,"nodeType":"ExpressionStatement","src":"27070:26:8"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3966,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3957,"src":"27110:10:8","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3967,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3954,"src":"27124:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27110:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3975,"nodeType":"IfStatement","src":"27106:98:8","trueBody":{"id":3974,"nodeType":"Block","src":"27131:73:8","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":3970,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27182:3:8","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":3971,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3954,"src":"27187:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3969,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2613,"src":"27152:29:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":3972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27152:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3973,"nodeType":"RevertStatement","src":"27145:48:8"}]}}]},"documentation":{"id":3952,"nodeType":"StructuredDocumentation","src":"26669:312:8","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":3977,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26995:8:8","nodeType":"FunctionDefinition","parameters":{"id":3955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3954,"mutability":"mutable","name":"value","nameLocation":"27011:5:8","nodeType":"VariableDeclaration","scope":3977,"src":"27004:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3953,"name":"int256","nodeType":"ElementaryTypeName","src":"27004:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27003:14:8"},"returnParameters":{"id":3958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3957,"mutability":"mutable","name":"downcasted","nameLocation":"27048:10:8","nodeType":"VariableDeclaration","scope":3977,"src":"27041:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":3956,"name":"int112","nodeType":"ElementaryTypeName","src":"27041:6:8","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27040:19:8"},"scope":4356,"src":"26986:224:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4002,"nodeType":"Block","src":"27607:150:8","statements":[{"expression":{"id":3990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3985,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3983,"src":"27617:10:8","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3988,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3980,"src":"27637:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3987,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27630:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":3986,"name":"int104","nodeType":"ElementaryTypeName","src":"27630:6:8","typeDescriptions":{}}},"id":3989,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27630:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27617:26:8","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":3991,"nodeType":"ExpressionStatement","src":"27617:26:8"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3992,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3983,"src":"27657:10:8","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3993,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3980,"src":"27671:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27657:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4001,"nodeType":"IfStatement","src":"27653:98:8","trueBody":{"id":4000,"nodeType":"Block","src":"27678:73:8","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":3996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27729:3:8","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":3997,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3980,"src":"27734:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3995,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2613,"src":"27699:29:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":3998,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27699:41:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3999,"nodeType":"RevertStatement","src":"27692:48:8"}]}}]},"documentation":{"id":3978,"nodeType":"StructuredDocumentation","src":"27216:312:8","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":4003,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27542:8:8","nodeType":"FunctionDefinition","parameters":{"id":3981,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3980,"mutability":"mutable","name":"value","nameLocation":"27558:5:8","nodeType":"VariableDeclaration","scope":4003,"src":"27551:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3979,"name":"int256","nodeType":"ElementaryTypeName","src":"27551:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27550:14:8"},"returnParameters":{"id":3984,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3983,"mutability":"mutable","name":"downcasted","nameLocation":"27595:10:8","nodeType":"VariableDeclaration","scope":4003,"src":"27588:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":3982,"name":"int104","nodeType":"ElementaryTypeName","src":"27588:6:8","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27587:19:8"},"scope":4356,"src":"27533:224:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4028,"nodeType":"Block","src":"28147:148:8","statements":[{"expression":{"id":4016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4011,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4009,"src":"28157:10:8","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4014,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4006,"src":"28176:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4013,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28170:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":4012,"name":"int96","nodeType":"ElementaryTypeName","src":"28170:5:8","typeDescriptions":{}}},"id":4015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28170:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28157:25:8","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":4017,"nodeType":"ExpressionStatement","src":"28157:25:8"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4018,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4009,"src":"28196:10:8","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4019,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4006,"src":"28210:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28196:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4027,"nodeType":"IfStatement","src":"28192:97:8","trueBody":{"id":4026,"nodeType":"Block","src":"28217:72:8","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":4022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28268:2:8","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":4023,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4006,"src":"28272:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4021,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2613,"src":"28238:29:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":4024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28238:40:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4025,"nodeType":"RevertStatement","src":"28231:47:8"}]}}]},"documentation":{"id":4004,"nodeType":"StructuredDocumentation","src":"27763:307:8","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":4029,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28084:7:8","nodeType":"FunctionDefinition","parameters":{"id":4007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4006,"mutability":"mutable","name":"value","nameLocation":"28099:5:8","nodeType":"VariableDeclaration","scope":4029,"src":"28092:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4005,"name":"int256","nodeType":"ElementaryTypeName","src":"28092:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28091:14:8"},"returnParameters":{"id":4010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4009,"mutability":"mutable","name":"downcasted","nameLocation":"28135:10:8","nodeType":"VariableDeclaration","scope":4029,"src":"28129:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":4008,"name":"int96","nodeType":"ElementaryTypeName","src":"28129:5:8","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28128:18:8"},"scope":4356,"src":"28075:220:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4054,"nodeType":"Block","src":"28685:148:8","statements":[{"expression":{"id":4042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4037,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4035,"src":"28695:10:8","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4040,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4032,"src":"28714:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4039,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28708:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":4038,"name":"int88","nodeType":"ElementaryTypeName","src":"28708:5:8","typeDescriptions":{}}},"id":4041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28708:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28695:25:8","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":4043,"nodeType":"ExpressionStatement","src":"28695:25:8"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4044,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4035,"src":"28734:10:8","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4045,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4032,"src":"28748:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28734:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4053,"nodeType":"IfStatement","src":"28730:97:8","trueBody":{"id":4052,"nodeType":"Block","src":"28755:72:8","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":4048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28806:2:8","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":4049,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4032,"src":"28810:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4047,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2613,"src":"28776:29:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":4050,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28776:40:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4051,"nodeType":"RevertStatement","src":"28769:47:8"}]}}]},"documentation":{"id":4030,"nodeType":"StructuredDocumentation","src":"28301:307:8","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":4055,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28622:7:8","nodeType":"FunctionDefinition","parameters":{"id":4033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4032,"mutability":"mutable","name":"value","nameLocation":"28637:5:8","nodeType":"VariableDeclaration","scope":4055,"src":"28630:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4031,"name":"int256","nodeType":"ElementaryTypeName","src":"28630:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28629:14:8"},"returnParameters":{"id":4036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4035,"mutability":"mutable","name":"downcasted","nameLocation":"28673:10:8","nodeType":"VariableDeclaration","scope":4055,"src":"28667:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":4034,"name":"int88","nodeType":"ElementaryTypeName","src":"28667:5:8","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28666:18:8"},"scope":4356,"src":"28613:220:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4080,"nodeType":"Block","src":"29223:148:8","statements":[{"expression":{"id":4068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4063,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4061,"src":"29233:10:8","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4066,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4058,"src":"29252:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4065,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29246:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":4064,"name":"int80","nodeType":"ElementaryTypeName","src":"29246:5:8","typeDescriptions":{}}},"id":4067,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29246:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29233:25:8","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":4069,"nodeType":"ExpressionStatement","src":"29233:25:8"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4070,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4061,"src":"29272:10:8","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4071,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4058,"src":"29286:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29272:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4079,"nodeType":"IfStatement","src":"29268:97:8","trueBody":{"id":4078,"nodeType":"Block","src":"29293:72:8","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":4074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29344:2:8","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":4075,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4058,"src":"29348:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4073,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2613,"src":"29314:29:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":4076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29314:40:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4077,"nodeType":"RevertStatement","src":"29307:47:8"}]}}]},"documentation":{"id":4056,"nodeType":"StructuredDocumentation","src":"28839:307:8","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":4081,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29160:7:8","nodeType":"FunctionDefinition","parameters":{"id":4059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4058,"mutability":"mutable","name":"value","nameLocation":"29175:5:8","nodeType":"VariableDeclaration","scope":4081,"src":"29168:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4057,"name":"int256","nodeType":"ElementaryTypeName","src":"29168:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29167:14:8"},"returnParameters":{"id":4062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4061,"mutability":"mutable","name":"downcasted","nameLocation":"29211:10:8","nodeType":"VariableDeclaration","scope":4081,"src":"29205:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":4060,"name":"int80","nodeType":"ElementaryTypeName","src":"29205:5:8","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29204:18:8"},"scope":4356,"src":"29151:220:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4106,"nodeType":"Block","src":"29761:148:8","statements":[{"expression":{"id":4094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4089,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4087,"src":"29771:10:8","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4092,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4084,"src":"29790:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4091,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29784:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":4090,"name":"int72","nodeType":"ElementaryTypeName","src":"29784:5:8","typeDescriptions":{}}},"id":4093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29784:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29771:25:8","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":4095,"nodeType":"ExpressionStatement","src":"29771:25:8"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4096,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4087,"src":"29810:10:8","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4097,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4084,"src":"29824:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29810:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4105,"nodeType":"IfStatement","src":"29806:97:8","trueBody":{"id":4104,"nodeType":"Block","src":"29831:72:8","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":4100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:2:8","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":4101,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4084,"src":"29886:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4099,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2613,"src":"29852:29:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":4102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29852:40:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4103,"nodeType":"RevertStatement","src":"29845:47:8"}]}}]},"documentation":{"id":4082,"nodeType":"StructuredDocumentation","src":"29377:307:8","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":4107,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29698:7:8","nodeType":"FunctionDefinition","parameters":{"id":4085,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4084,"mutability":"mutable","name":"value","nameLocation":"29713:5:8","nodeType":"VariableDeclaration","scope":4107,"src":"29706:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4083,"name":"int256","nodeType":"ElementaryTypeName","src":"29706:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29705:14:8"},"returnParameters":{"id":4088,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4087,"mutability":"mutable","name":"downcasted","nameLocation":"29749:10:8","nodeType":"VariableDeclaration","scope":4107,"src":"29743:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":4086,"name":"int72","nodeType":"ElementaryTypeName","src":"29743:5:8","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29742:18:8"},"scope":4356,"src":"29689:220:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4132,"nodeType":"Block","src":"30299:148:8","statements":[{"expression":{"id":4120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4115,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4113,"src":"30309:10:8","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4118,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4110,"src":"30328:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4117,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30322:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":4116,"name":"int64","nodeType":"ElementaryTypeName","src":"30322:5:8","typeDescriptions":{}}},"id":4119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30322:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30309:25:8","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":4121,"nodeType":"ExpressionStatement","src":"30309:25:8"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4122,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4113,"src":"30348:10:8","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4123,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4110,"src":"30362:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30348:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4131,"nodeType":"IfStatement","src":"30344:97:8","trueBody":{"id":4130,"nodeType":"Block","src":"30369:72:8","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":4126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30420:2:8","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":4127,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4110,"src":"30424:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4125,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2613,"src":"30390:29:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":4128,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30390:40:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4129,"nodeType":"RevertStatement","src":"30383:47:8"}]}}]},"documentation":{"id":4108,"nodeType":"StructuredDocumentation","src":"29915:307:8","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":4133,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30236:7:8","nodeType":"FunctionDefinition","parameters":{"id":4111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4110,"mutability":"mutable","name":"value","nameLocation":"30251:5:8","nodeType":"VariableDeclaration","scope":4133,"src":"30244:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4109,"name":"int256","nodeType":"ElementaryTypeName","src":"30244:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30243:14:8"},"returnParameters":{"id":4114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4113,"mutability":"mutable","name":"downcasted","nameLocation":"30287:10:8","nodeType":"VariableDeclaration","scope":4133,"src":"30281:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":4112,"name":"int64","nodeType":"ElementaryTypeName","src":"30281:5:8","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30280:18:8"},"scope":4356,"src":"30227:220:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4158,"nodeType":"Block","src":"30837:148:8","statements":[{"expression":{"id":4146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4141,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4139,"src":"30847:10:8","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4144,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4136,"src":"30866:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4143,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30860:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":4142,"name":"int56","nodeType":"ElementaryTypeName","src":"30860:5:8","typeDescriptions":{}}},"id":4145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30860:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30847:25:8","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":4147,"nodeType":"ExpressionStatement","src":"30847:25:8"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4148,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4139,"src":"30886:10:8","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4149,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4136,"src":"30900:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30886:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4157,"nodeType":"IfStatement","src":"30882:97:8","trueBody":{"id":4156,"nodeType":"Block","src":"30907:72:8","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":4152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30958:2:8","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":4153,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4136,"src":"30962:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4151,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2613,"src":"30928:29:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":4154,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30928:40:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4155,"nodeType":"RevertStatement","src":"30921:47:8"}]}}]},"documentation":{"id":4134,"nodeType":"StructuredDocumentation","src":"30453:307:8","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":4159,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30774:7:8","nodeType":"FunctionDefinition","parameters":{"id":4137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4136,"mutability":"mutable","name":"value","nameLocation":"30789:5:8","nodeType":"VariableDeclaration","scope":4159,"src":"30782:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4135,"name":"int256","nodeType":"ElementaryTypeName","src":"30782:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30781:14:8"},"returnParameters":{"id":4140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4139,"mutability":"mutable","name":"downcasted","nameLocation":"30825:10:8","nodeType":"VariableDeclaration","scope":4159,"src":"30819:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":4138,"name":"int56","nodeType":"ElementaryTypeName","src":"30819:5:8","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30818:18:8"},"scope":4356,"src":"30765:220:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4184,"nodeType":"Block","src":"31375:148:8","statements":[{"expression":{"id":4172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4167,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4165,"src":"31385:10:8","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4170,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4162,"src":"31404:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4169,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31398:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":4168,"name":"int48","nodeType":"ElementaryTypeName","src":"31398:5:8","typeDescriptions":{}}},"id":4171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31385:25:8","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":4173,"nodeType":"ExpressionStatement","src":"31385:25:8"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4174,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4165,"src":"31424:10:8","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4175,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4162,"src":"31438:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31424:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4183,"nodeType":"IfStatement","src":"31420:97:8","trueBody":{"id":4182,"nodeType":"Block","src":"31445:72:8","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":4178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31496:2:8","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":4179,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4162,"src":"31500:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4177,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2613,"src":"31466:29:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":4180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31466:40:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4181,"nodeType":"RevertStatement","src":"31459:47:8"}]}}]},"documentation":{"id":4160,"nodeType":"StructuredDocumentation","src":"30991:307:8","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":4185,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31312:7:8","nodeType":"FunctionDefinition","parameters":{"id":4163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4162,"mutability":"mutable","name":"value","nameLocation":"31327:5:8","nodeType":"VariableDeclaration","scope":4185,"src":"31320:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4161,"name":"int256","nodeType":"ElementaryTypeName","src":"31320:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31319:14:8"},"returnParameters":{"id":4166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4165,"mutability":"mutable","name":"downcasted","nameLocation":"31363:10:8","nodeType":"VariableDeclaration","scope":4185,"src":"31357:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":4164,"name":"int48","nodeType":"ElementaryTypeName","src":"31357:5:8","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31356:18:8"},"scope":4356,"src":"31303:220:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4210,"nodeType":"Block","src":"31913:148:8","statements":[{"expression":{"id":4198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4193,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4191,"src":"31923:10:8","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4196,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4188,"src":"31942:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4195,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31936:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":4194,"name":"int40","nodeType":"ElementaryTypeName","src":"31936:5:8","typeDescriptions":{}}},"id":4197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31936:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31923:25:8","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":4199,"nodeType":"ExpressionStatement","src":"31923:25:8"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4200,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4191,"src":"31962:10:8","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4201,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4188,"src":"31976:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31962:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4209,"nodeType":"IfStatement","src":"31958:97:8","trueBody":{"id":4208,"nodeType":"Block","src":"31983:72:8","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":4204,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:2:8","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":4205,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4188,"src":"32038:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4203,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2613,"src":"32004:29:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":4206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:40:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4207,"nodeType":"RevertStatement","src":"31997:47:8"}]}}]},"documentation":{"id":4186,"nodeType":"StructuredDocumentation","src":"31529:307:8","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":4211,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31850:7:8","nodeType":"FunctionDefinition","parameters":{"id":4189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4188,"mutability":"mutable","name":"value","nameLocation":"31865:5:8","nodeType":"VariableDeclaration","scope":4211,"src":"31858:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4187,"name":"int256","nodeType":"ElementaryTypeName","src":"31858:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31857:14:8"},"returnParameters":{"id":4192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4191,"mutability":"mutable","name":"downcasted","nameLocation":"31901:10:8","nodeType":"VariableDeclaration","scope":4211,"src":"31895:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":4190,"name":"int40","nodeType":"ElementaryTypeName","src":"31895:5:8","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31894:18:8"},"scope":4356,"src":"31841:220:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4236,"nodeType":"Block","src":"32451:148:8","statements":[{"expression":{"id":4224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4219,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4217,"src":"32461:10:8","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4222,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4214,"src":"32480:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4221,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32474:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":4220,"name":"int32","nodeType":"ElementaryTypeName","src":"32474:5:8","typeDescriptions":{}}},"id":4223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32474:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32461:25:8","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":4225,"nodeType":"ExpressionStatement","src":"32461:25:8"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4226,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4217,"src":"32500:10:8","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4227,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4214,"src":"32514:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32500:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4235,"nodeType":"IfStatement","src":"32496:97:8","trueBody":{"id":4234,"nodeType":"Block","src":"32521:72:8","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":4230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32572:2:8","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":4231,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4214,"src":"32576:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4229,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2613,"src":"32542:29:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":4232,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32542:40:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4233,"nodeType":"RevertStatement","src":"32535:47:8"}]}}]},"documentation":{"id":4212,"nodeType":"StructuredDocumentation","src":"32067:307:8","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":4237,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32388:7:8","nodeType":"FunctionDefinition","parameters":{"id":4215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4214,"mutability":"mutable","name":"value","nameLocation":"32403:5:8","nodeType":"VariableDeclaration","scope":4237,"src":"32396:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4213,"name":"int256","nodeType":"ElementaryTypeName","src":"32396:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32395:14:8"},"returnParameters":{"id":4218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4217,"mutability":"mutable","name":"downcasted","nameLocation":"32439:10:8","nodeType":"VariableDeclaration","scope":4237,"src":"32433:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":4216,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:8","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32432:18:8"},"scope":4356,"src":"32379:220:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4262,"nodeType":"Block","src":"32989:148:8","statements":[{"expression":{"id":4250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4245,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4243,"src":"32999:10:8","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4248,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4240,"src":"33018:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4247,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33012:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":4246,"name":"int24","nodeType":"ElementaryTypeName","src":"33012:5:8","typeDescriptions":{}}},"id":4249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33012:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32999:25:8","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":4251,"nodeType":"ExpressionStatement","src":"32999:25:8"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4252,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4243,"src":"33038:10:8","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4253,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4240,"src":"33052:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33038:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4261,"nodeType":"IfStatement","src":"33034:97:8","trueBody":{"id":4260,"nodeType":"Block","src":"33059:72:8","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":4256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33110:2:8","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":4257,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4240,"src":"33114:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4255,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2613,"src":"33080:29:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":4258,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33080:40:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4259,"nodeType":"RevertStatement","src":"33073:47:8"}]}}]},"documentation":{"id":4238,"nodeType":"StructuredDocumentation","src":"32605:307:8","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":4263,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32926:7:8","nodeType":"FunctionDefinition","parameters":{"id":4241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4240,"mutability":"mutable","name":"value","nameLocation":"32941:5:8","nodeType":"VariableDeclaration","scope":4263,"src":"32934:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4239,"name":"int256","nodeType":"ElementaryTypeName","src":"32934:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32933:14:8"},"returnParameters":{"id":4244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4243,"mutability":"mutable","name":"downcasted","nameLocation":"32977:10:8","nodeType":"VariableDeclaration","scope":4263,"src":"32971:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":4242,"name":"int24","nodeType":"ElementaryTypeName","src":"32971:5:8","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32970:18:8"},"scope":4356,"src":"32917:220:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4288,"nodeType":"Block","src":"33527:148:8","statements":[{"expression":{"id":4276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4271,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4269,"src":"33537:10:8","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4274,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4266,"src":"33556:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4273,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33550:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":4272,"name":"int16","nodeType":"ElementaryTypeName","src":"33550:5:8","typeDescriptions":{}}},"id":4275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33550:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33537:25:8","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":4277,"nodeType":"ExpressionStatement","src":"33537:25:8"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4278,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4269,"src":"33576:10:8","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4279,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4266,"src":"33590:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33576:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4287,"nodeType":"IfStatement","src":"33572:97:8","trueBody":{"id":4286,"nodeType":"Block","src":"33597:72:8","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":4282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33648:2:8","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":4283,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4266,"src":"33652:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4281,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2613,"src":"33618:29:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":4284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:40:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4285,"nodeType":"RevertStatement","src":"33611:47:8"}]}}]},"documentation":{"id":4264,"nodeType":"StructuredDocumentation","src":"33143:307:8","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":4289,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33464:7:8","nodeType":"FunctionDefinition","parameters":{"id":4267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4266,"mutability":"mutable","name":"value","nameLocation":"33479:5:8","nodeType":"VariableDeclaration","scope":4289,"src":"33472:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4265,"name":"int256","nodeType":"ElementaryTypeName","src":"33472:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33471:14:8"},"returnParameters":{"id":4270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4269,"mutability":"mutable","name":"downcasted","nameLocation":"33515:10:8","nodeType":"VariableDeclaration","scope":4289,"src":"33509:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":4268,"name":"int16","nodeType":"ElementaryTypeName","src":"33509:5:8","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33508:18:8"},"scope":4356,"src":"33455:220:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4314,"nodeType":"Block","src":"34058:146:8","statements":[{"expression":{"id":4302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4297,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4295,"src":"34068:10:8","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4300,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4292,"src":"34086:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4299,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34081:4:8","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":4298,"name":"int8","nodeType":"ElementaryTypeName","src":"34081:4:8","typeDescriptions":{}}},"id":4301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34081:11:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34068:24:8","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":4303,"nodeType":"ExpressionStatement","src":"34068:24:8"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4304,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4295,"src":"34106:10:8","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4305,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4292,"src":"34120:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34106:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4313,"nodeType":"IfStatement","src":"34102:96:8","trueBody":{"id":4312,"nodeType":"Block","src":"34127:71:8","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":4308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34178:1:8","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":4309,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4292,"src":"34181:5:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4307,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2613,"src":"34148:29:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":4310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34148:39:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4311,"nodeType":"RevertStatement","src":"34141:46:8"}]}}]},"documentation":{"id":4290,"nodeType":"StructuredDocumentation","src":"33681:302:8","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":4315,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33997:6:8","nodeType":"FunctionDefinition","parameters":{"id":4293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4292,"mutability":"mutable","name":"value","nameLocation":"34011:5:8","nodeType":"VariableDeclaration","scope":4315,"src":"34004:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4291,"name":"int256","nodeType":"ElementaryTypeName","src":"34004:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34003:14:8"},"returnParameters":{"id":4296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4295,"mutability":"mutable","name":"downcasted","nameLocation":"34046:10:8","nodeType":"VariableDeclaration","scope":4315,"src":"34041:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":4294,"name":"int8","nodeType":"ElementaryTypeName","src":"34041:4:8","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34040:17:8"},"scope":4356,"src":"33988:216:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4344,"nodeType":"Block","src":"34444:250:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4323,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4318,"src":"34557:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":4328,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34578:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":4327,"name":"int256","nodeType":"ElementaryTypeName","src":"34578:6:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":4326,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34573:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:12:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":4330,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34586:3:8","memberName":"max","nodeType":"MemberAccess","src":"34573:16:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4325,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34565:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4324,"name":"uint256","nodeType":"ElementaryTypeName","src":"34565:7:8","typeDescriptions":{}}},"id":4331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34565:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34557:33:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4338,"nodeType":"IfStatement","src":"34553:105:8","trueBody":{"id":4337,"nodeType":"Block","src":"34592:66:8","statements":[{"errorCall":{"arguments":[{"id":4334,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4318,"src":"34641:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4333,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2618,"src":"34613:27:8","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":4335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:34:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4336,"nodeType":"RevertStatement","src":"34606:41:8"}]}},{"expression":{"arguments":[{"id":4341,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4318,"src":"34681:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4340,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34674:6:8","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":4339,"name":"int256","nodeType":"ElementaryTypeName","src":"34674:6:8","typeDescriptions":{}}},"id":4342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34674:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":4322,"id":4343,"nodeType":"Return","src":"34667:20:8"}]},"documentation":{"id":4316,"nodeType":"StructuredDocumentation","src":"34210:165:8","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":4345,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34389:8:8","nodeType":"FunctionDefinition","parameters":{"id":4319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4318,"mutability":"mutable","name":"value","nameLocation":"34406:5:8","nodeType":"VariableDeclaration","scope":4345,"src":"34398:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4317,"name":"uint256","nodeType":"ElementaryTypeName","src":"34398:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34397:15:8"},"returnParameters":{"id":4322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4321,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4345,"src":"34436:6:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4320,"name":"int256","nodeType":"ElementaryTypeName","src":"34436:6:8","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34435:8:8"},"scope":4356,"src":"34380:314:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4354,"nodeType":"Block","src":"34853:87:8","statements":[{"AST":{"nativeSrc":"34888:46:8","nodeType":"YulBlock","src":"34888:46:8","statements":[{"nativeSrc":"34902:22:8","nodeType":"YulAssignment","src":"34902:22:8","value":{"arguments":[{"arguments":[{"name":"b","nativeSrc":"34921:1:8","nodeType":"YulIdentifier","src":"34921:1:8"}],"functionName":{"name":"iszero","nativeSrc":"34914:6:8","nodeType":"YulIdentifier","src":"34914:6:8"},"nativeSrc":"34914:9:8","nodeType":"YulFunctionCall","src":"34914:9:8"}],"functionName":{"name":"iszero","nativeSrc":"34907:6:8","nodeType":"YulIdentifier","src":"34907:6:8"},"nativeSrc":"34907:17:8","nodeType":"YulFunctionCall","src":"34907:17:8"},"variableNames":[{"name":"u","nativeSrc":"34902:1:8","nodeType":"YulIdentifier","src":"34902:1:8"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4348,"isOffset":false,"isSlot":false,"src":"34921:1:8","valueSize":1},{"declaration":4351,"isOffset":false,"isSlot":false,"src":"34902:1:8","valueSize":1}],"flags":["memory-safe"],"id":4353,"nodeType":"InlineAssembly","src":"34863:71:8"}]},"documentation":{"id":4346,"nodeType":"StructuredDocumentation","src":"34700:90:8","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":4355,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"34804:6:8","nodeType":"FunctionDefinition","parameters":{"id":4349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4348,"mutability":"mutable","name":"b","nameLocation":"34816:1:8","nodeType":"VariableDeclaration","scope":4355,"src":"34811:6:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4347,"name":"bool","nodeType":"ElementaryTypeName","src":"34811:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34810:8:8"},"returnParameters":{"id":4352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4351,"mutability":"mutable","name":"u","nameLocation":"34850:1:8","nodeType":"VariableDeclaration","scope":4355,"src":"34842:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4350,"name":"uint256","nodeType":"ElementaryTypeName","src":"34842:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34841:11:8"},"scope":4356,"src":"34795:145:8","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4357,"src":"769:34173:8","usedErrors":[2601,2606,2613,2618],"usedEvents":[]}],"src":"192:34751:8"},"id":8},"contracts/MockToken.sol":{"ast":{"absolutePath":"contracts/MockToken.sol","exportedSymbols":{"Context":[933],"DealToken":[4613],"ERC20":[799],"IERC20":[877],"IERC20Errors":[189],"IERC20Metadata":[903],"Math":[2591],"Ownable":[147],"Panic":[985],"SafeCast":[4356]},"id":4614,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4358,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:9"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":4359,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4614,"sourceUnit":800,"src":"58:55:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":4360,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4614,"sourceUnit":148,"src":"114:52:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"@openzeppelin/contracts/utils/math/Math.sol","id":4361,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4614,"sourceUnit":2592,"src":"167:53:9","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":4363,"name":"ERC20","nameLocations":["347:5:9"],"nodeType":"IdentifierPath","referencedDeclaration":799,"src":"347:5:9"},"id":4364,"nodeType":"InheritanceSpecifier","src":"347:5:9"},{"baseName":{"id":4365,"name":"Ownable","nameLocations":["354:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"354:7:9"},"id":4366,"nodeType":"InheritanceSpecifier","src":"354:7:9"}],"canonicalName":"DealToken","contractDependencies":[],"contractKind":"contract","documentation":{"id":4362,"nodeType":"StructuredDocumentation","src":"222:102:9","text":" @title DealToken\n @dev ERC20 token with a dynamic pricing mechanism based on token supply"},"fullyImplemented":true,"id":4613,"linearizedBaseContracts":[4613,147,799,189,903,877,933],"name":"DealToken","nameLocation":"334:9:9","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"c7876ea4","id":4369,"mutability":"mutable","name":"basePrice","nameLocation":"408:9:9","nodeType":"VariableDeclaration","scope":4613,"src":"393:38:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4367,"name":"uint256","nodeType":"ElementaryTypeName","src":"393:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"302e303031","id":4368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"420:11:9","subdenomination":"ether","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000_by_1","typeString":"int_const 1000000000000000"},"value":"0.001"},"visibility":"public"},{"constant":false,"functionSelector":"6e97b47b","id":4374,"mutability":"mutable","name":"priceIncreaseFactor","nameLocation":"517:19:9","nodeType":"VariableDeclaration","scope":4613,"src":"502:47:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4370,"name":"uint256","nodeType":"ElementaryTypeName","src":"502:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_1200000000000000000_by_1","typeString":"int_const 1200000000000000000"},"id":4373,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"312e32","id":4371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"539:3:9","typeDescriptions":{"typeIdentifier":"t_rational_6_by_5","typeString":"rational_const 6 / 5"},"value":"1.2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31653138","id":4372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"545:4:9","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"539:10:9","typeDescriptions":{"typeIdentifier":"t_rational_1200000000000000000_by_1","typeString":"int_const 1200000000000000000"}},"visibility":"public"},{"constant":false,"functionSelector":"ce2a9f62","id":4376,"mutability":"mutable","name":"totalEthCollected","nameLocation":"598:17:9","nodeType":"VariableDeclaration","scope":4613,"src":"583:32:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4375,"name":"uint256","nodeType":"ElementaryTypeName","src":"583:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":true,"id":4381,"mutability":"constant","name":"INITIAL_SUPPLY","nameLocation":"669:14:9","nodeType":"VariableDeclaration","scope":4613,"src":"644:58:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4377,"name":"uint256","nodeType":"ElementaryTypeName","src":"644:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000000000_by_1","typeString":"int_const 1000000000000000000000000"},"id":4380,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"315f3030305f303030","id":4378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"686:9:9","typeDescriptions":{"typeIdentifier":"t_rational_1000000_by_1","typeString":"int_const 1000000"},"value":"1_000_000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31653138","id":4379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"698:4:9","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"686:16:9","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000000000_by_1","typeString":"int_const 1000000000000000000000000"}},"visibility":"private"},{"constant":true,"id":4386,"mutability":"constant","name":"MAX_SUPPLY","nameLocation":"752:10:9","nodeType":"VariableDeclaration","scope":4613,"src":"727:55:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4382,"name":"uint256","nodeType":"ElementaryTypeName","src":"727:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000_by_1","typeString":"int_const 10000000000000000000000000"},"id":4385,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31305f3030305f303030","id":4383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"765:10:9","typeDescriptions":{"typeIdentifier":"t_rational_10000000_by_1","typeString":"int_const 10000000"},"value":"10_000_000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31653138","id":4384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"778:4:9","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"765:17:9","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000_by_1","typeString":"int_const 10000000000000000000000000"}},"visibility":"private"},{"anonymous":false,"eventSelector":"8fafebcaf9d154343dad25669bfa277f4fbacd7ac6b0c4fed522580e040a0f33","id":4394,"name":"TokensPurchased","nameLocation":"809:15:9","nodeType":"EventDefinition","parameters":{"id":4393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4388,"indexed":true,"mutability":"mutable","name":"buyer","nameLocation":"850:5:9","nodeType":"VariableDeclaration","scope":4394,"src":"834:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4387,"name":"address","nodeType":"ElementaryTypeName","src":"834:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4390,"indexed":false,"mutability":"mutable","name":"ethAmount","nameLocation":"873:9:9","nodeType":"VariableDeclaration","scope":4394,"src":"865:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4389,"name":"uint256","nodeType":"ElementaryTypeName","src":"865:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4392,"indexed":false,"mutability":"mutable","name":"tokenAmount","nameLocation":"900:11:9","nodeType":"VariableDeclaration","scope":4394,"src":"892:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4391,"name":"uint256","nodeType":"ElementaryTypeName","src":"892:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"824:93:9"},"src":"803:115:9"},{"body":{"id":4411,"nodeType":"Block","src":"986:105:9","statements":[{"expression":{"arguments":[{"expression":{"id":4406,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1057:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1061:6:9","memberName":"sender","nodeType":"MemberAccess","src":"1057:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4408,"name":"INITIAL_SUPPLY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4381,"src":"1069:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4405,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":639,"src":"1051:5:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":4409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1051:33:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4410,"nodeType":"ExpressionStatement","src":"1051:33:9"}]},"id":4412,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"4445414c20546f6b656e","id":4397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"944:12:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_1b6405ef67deddd21d619b53d95f37a23ec223c72a7bc626cb1a7962986eadeb","typeString":"literal_string \"DEAL Token\""},"value":"DEAL Token"},{"hexValue":"4445414c","id":4398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"958:6:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_d22b0c5ff8078d4ad572a877af1be263489f3cd138944d3415f9af9f8176324c","typeString":"literal_string \"DEAL\""},"value":"DEAL"}],"id":4399,"kind":"baseConstructorSpecifier","modifierName":{"id":4396,"name":"ERC20","nameLocations":["938:5:9"],"nodeType":"IdentifierPath","referencedDeclaration":799,"src":"938:5:9"},"nodeType":"ModifierInvocation","src":"938:27:9"},{"arguments":[{"expression":{"id":4401,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"974:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"978:6:9","memberName":"sender","nodeType":"MemberAccess","src":"974:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":4403,"kind":"baseConstructorSpecifier","modifierName":{"id":4400,"name":"Ownable","nameLocations":["966:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"966:7:9"},"nodeType":"ModifierInvocation","src":"966:19:9"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4395,"nodeType":"ParameterList","parameters":[],"src":"935:2:9"},"returnParameters":{"id":4404,"nodeType":"ParameterList","parameters":[],"src":"986:0:9"},"scope":4613,"src":"924:167:9","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4459,"nodeType":"Block","src":"1294:547:9","statements":[{"assignments":[4419],"declarations":[{"constant":false,"id":4419,"mutability":"mutable","name":"currentSupply","nameLocation":"1312:13:9","nodeType":"VariableDeclaration","scope":4459,"src":"1304:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4418,"name":"uint256","nodeType":"ElementaryTypeName","src":"1304:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4422,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":4420,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":372,"src":"1328:11:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":4421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1328:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1304:37:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4423,"name":"currentSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4419,"src":"1416:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":4424,"name":"MAX_SUPPLY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4386,"src":"1433:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1416:27:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4433,"nodeType":"IfStatement","src":"1412:82:9","trueBody":{"id":4432,"nodeType":"Block","src":"1445:49:9","statements":[{"expression":{"expression":{"arguments":[{"id":4428,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1471:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4427,"name":"uint256","nodeType":"ElementaryTypeName","src":"1471:7:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":4426,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1466:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1466:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":4430,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1480:3:9","memberName":"max","nodeType":"MemberAccess","src":"1466:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4417,"id":4431,"nodeType":"Return","src":"1459:24:9"}]}},{"assignments":[4435],"declarations":[{"constant":false,"id":4435,"mutability":"mutable","name":"supplyFactor","nameLocation":"1627:12:9","nodeType":"VariableDeclaration","scope":4459,"src":"1619:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4434,"name":"uint256","nodeType":"ElementaryTypeName","src":"1619:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4442,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4436,"name":"currentSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4419,"src":"1643:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31653138","id":4437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1659:4:9","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"1643:20:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4439,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1642:22:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4440,"name":"MAX_SUPPLY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4386,"src":"1667:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1642:35:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1619:58:9"},{"assignments":[4444],"declarations":[{"constant":false,"id":4444,"mutability":"mutable","name":"priceMultiplier","nameLocation":"1695:15:9","nodeType":"VariableDeclaration","scope":4459,"src":"1687:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4443,"name":"uint256","nodeType":"ElementaryTypeName","src":"1687:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4456,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4445,"name":"basePrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4369,"src":"1713:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4446,"name":"supplyFactor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4435,"src":"1738:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4447,"name":"priceIncreaseFactor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4374,"src":"1754:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31653138","id":4448,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1776:4:9","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"1754:26:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4450,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1753:28:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1738:43:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4452,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1737:45:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"31653138","id":4453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1797:4:9","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"1737:64:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1713:88:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1687:114:9"},{"expression":{"id":4457,"name":"priceMultiplier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4444,"src":"1819:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4417,"id":4458,"nodeType":"Return","src":"1812:22:9"}]},"documentation":{"id":4413,"nodeType":"StructuredDocumentation","src":"1097:135:9","text":" @dev Returns the current token price based on the current supply\n Price increases as more tokens are purchased"},"functionSelector":"eb91d37e","id":4460,"implemented":true,"kind":"function","modifiers":[],"name":"getCurrentPrice","nameLocation":"1246:15:9","nodeType":"FunctionDefinition","parameters":{"id":4414,"nodeType":"ParameterList","parameters":[],"src":"1261:2:9"},"returnParameters":{"id":4417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4416,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4460,"src":"1285:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4415,"name":"uint256","nodeType":"ElementaryTypeName","src":"1285:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1284:9:9"},"scope":4613,"src":"1237:604:9","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":4538,"nodeType":"Block","src":"1927:839:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4465,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1945:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1949:5:9","memberName":"value","nodeType":"MemberAccess","src":"1945:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1957:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1945:13:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d7573742073656e642045544820746f2062757920746f6b656e73","id":4469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1960:29:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_30a3169537af6a19e878efd19359816e5050657af8f1bfb68949c44684f913de","typeString":"literal_string \"Must send ETH to buy tokens\""},"value":"Must send ETH to buy tokens"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_30a3169537af6a19e878efd19359816e5050657af8f1bfb68949c44684f913de","typeString":"literal_string \"Must send ETH to buy tokens\""}],"id":4464,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"1937:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1937:53:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4471,"nodeType":"ExpressionStatement","src":"1937:53:9"},{"assignments":[4473],"declarations":[{"constant":false,"id":4473,"mutability":"mutable","name":"currentPrice","nameLocation":"2009:12:9","nodeType":"VariableDeclaration","scope":4538,"src":"2001:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4472,"name":"uint256","nodeType":"ElementaryTypeName","src":"2001:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4476,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":4474,"name":"getCurrentPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4460,"src":"2024:15:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":4475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2024:17:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2001:40:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4478,"name":"currentPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4473,"src":"2059:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2074:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2059:16:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"50726963652063616c63756c6174696f6e206572726f72","id":4481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2077:25:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_4d24bb6fdc16272faa3d9a86eb0993aea2ad4ea79256f2a3f0b4914367982e44","typeString":"literal_string \"Price calculation error\""},"value":"Price calculation error"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4d24bb6fdc16272faa3d9a86eb0993aea2ad4ea79256f2a3f0b4914367982e44","typeString":"literal_string \"Price calculation error\""}],"id":4477,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2051:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2051:52:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4483,"nodeType":"ExpressionStatement","src":"2051:52:9"},{"assignments":[4485],"declarations":[{"constant":false,"id":4485,"mutability":"mutable","name":"tokensToMint","nameLocation":"2194:12:9","nodeType":"VariableDeclaration","scope":4538,"src":"2186:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4484,"name":"uint256","nodeType":"ElementaryTypeName","src":"2186:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4493,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4486,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2210:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2214:5:9","memberName":"value","nodeType":"MemberAccess","src":"2210:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31653138","id":4488,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2222:4:9","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"2210:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4490,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2209:18:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4491,"name":"currentPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4473,"src":"2230:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2209:33:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2186:56:9"},{"assignments":[4495],"declarations":[{"constant":false,"id":4495,"mutability":"mutable","name":"currentSupply","nameLocation":"2310:13:9","nodeType":"VariableDeclaration","scope":4538,"src":"2302:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4494,"name":"uint256","nodeType":"ElementaryTypeName","src":"2302:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4498,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":4496,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":372,"src":"2326:11:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":4497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2326:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2302:37:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4499,"name":"currentSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4495,"src":"2353:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4500,"name":"tokensToMint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4485,"src":"2369:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2353:28:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4502,"name":"MAX_SUPPLY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4386,"src":"2384:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2353:41:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4511,"nodeType":"IfStatement","src":"2349:113:9","trueBody":{"id":4510,"nodeType":"Block","src":"2396:66:9","statements":[{"expression":{"id":4508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4504,"name":"tokensToMint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4485,"src":"2410:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4505,"name":"MAX_SUPPLY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4386,"src":"2425:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4506,"name":"currentSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4495,"src":"2438:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2425:26:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2410:41:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4509,"nodeType":"ExpressionStatement","src":"2410:41:9"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4513,"name":"tokensToMint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4485,"src":"2480:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4514,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2495:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2480:16:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420656e6f756768204554482073656e7420746f2062757920616e7920746f6b656e73","id":4516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2498:39:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_2635e0c891a3ce0373fd39c7acb0b02d0a3d29985ab4f087fed4e787bad23846","typeString":"literal_string \"Not enough ETH sent to buy any tokens\""},"value":"Not enough ETH sent to buy any tokens"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2635e0c891a3ce0373fd39c7acb0b02d0a3d29985ab4f087fed4e787bad23846","typeString":"literal_string \"Not enough ETH sent to buy any tokens\""}],"id":4512,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2472:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2472:66:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4518,"nodeType":"ExpressionStatement","src":"2472:66:9"},{"expression":{"id":4522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4519,"name":"totalEthCollected","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4376,"src":"2587:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":4520,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2608:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2612:5:9","memberName":"value","nodeType":"MemberAccess","src":"2608:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2587:30:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4523,"nodeType":"ExpressionStatement","src":"2587:30:9"},{"expression":{"arguments":[{"expression":{"id":4525,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2666:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2670:6:9","memberName":"sender","nodeType":"MemberAccess","src":"2666:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4527,"name":"tokensToMint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4485,"src":"2678:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4524,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":639,"src":"2660:5:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":4528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2660:31:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4529,"nodeType":"ExpressionStatement","src":"2660:31:9"},{"eventCall":{"arguments":[{"expression":{"id":4531,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2723:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2727:6:9","memberName":"sender","nodeType":"MemberAccess","src":"2723:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4533,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2735:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2739:5:9","memberName":"value","nodeType":"MemberAccess","src":"2735:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4535,"name":"tokensToMint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4485,"src":"2746:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4530,"name":"TokensPurchased","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4394,"src":"2707:15:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":4536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2707:52:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4537,"nodeType":"EmitStatement","src":"2702:57:9"}]},"documentation":{"id":4461,"nodeType":"StructuredDocumentation","src":"1847:43:9","text":" @dev Buy tokens with ETH"},"functionSelector":"a6f2ae3a","id":4539,"implemented":true,"kind":"function","modifiers":[],"name":"buy","nameLocation":"1904:3:9","nodeType":"FunctionDefinition","parameters":{"id":4462,"nodeType":"ParameterList","parameters":[],"src":"1907:2:9"},"returnParameters":{"id":4463,"nodeType":"ParameterList","parameters":[],"src":"1927:0:9"},"scope":4613,"src":"1895:871:9","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":4578,"nodeType":"Block","src":"2886:228:9","statements":[{"assignments":[4546],"declarations":[{"constant":false,"id":4546,"mutability":"mutable","name":"balance","nameLocation":"2904:7:9","nodeType":"VariableDeclaration","scope":4578,"src":"2896:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4545,"name":"uint256","nodeType":"ElementaryTypeName","src":"2896:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4552,"initialValue":{"expression":{"arguments":[{"id":4549,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2922:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_DealToken_$4613","typeString":"contract DealToken"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_DealToken_$4613","typeString":"contract DealToken"}],"id":4548,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2914:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4547,"name":"address","nodeType":"ElementaryTypeName","src":"2914:7:9","typeDescriptions":{}}},"id":4550,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2914:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2928:7:9","memberName":"balance","nodeType":"MemberAccess","src":"2914:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2896:39:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4554,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4546,"src":"2953:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2963:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2953:11:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f2045544820746f207769746864726177","id":4557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2966:20:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_9df16c5c3e9f487854502591282f9dbd29044f6d3f3bf4c9daa5d3460486dd95","typeString":"literal_string \"No ETH to withdraw\""},"value":"No ETH to withdraw"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9df16c5c3e9f487854502591282f9dbd29044f6d3f3bf4c9daa5d3460486dd95","typeString":"literal_string \"No ETH to withdraw\""}],"id":4553,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2945:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2945:42:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4559,"nodeType":"ExpressionStatement","src":"2945:42:9"},{"assignments":[4561,null],"declarations":[{"constant":false,"id":4561,"mutability":"mutable","name":"success","nameLocation":"3004:7:9","nodeType":"VariableDeclaration","scope":4578,"src":"2999:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4560,"name":"bool","nodeType":"ElementaryTypeName","src":"2999:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":4572,"initialValue":{"arguments":[{"hexValue":"","id":4570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3055:2:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":4564,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"3025:5:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":4565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3025:7:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4563,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3017:8:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":4562,"name":"address","nodeType":"ElementaryTypeName","src":"3017:8:9","stateMutability":"payable","typeDescriptions":{}}},"id":4566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3017:16:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":4567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3034:4:9","memberName":"call","nodeType":"MemberAccess","src":"3017:21:9","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":4569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":4568,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4546,"src":"3046:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"3017:37:9","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":4571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3017:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2998:60:9"},{"expression":{"arguments":[{"id":4574,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4561,"src":"3076:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455448207472616e73666572206661696c6564","id":4575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3085:21:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd","typeString":"literal_string \"ETH transfer failed\""},"value":"ETH transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd","typeString":"literal_string \"ETH transfer failed\""}],"id":4573,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"3068:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3068:39:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4577,"nodeType":"ExpressionStatement","src":"3068:39:9"}]},"documentation":{"id":4540,"nodeType":"StructuredDocumentation","src":"2772:67:9","text":" @dev Withdraw ETH from the contract (owner only)"},"functionSelector":"e086e5ec","id":4579,"implemented":true,"kind":"function","modifiers":[{"id":4543,"kind":"modifierInvocation","modifierName":{"id":4542,"name":"onlyOwner","nameLocations":["2876:9:9"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2876:9:9"},"nodeType":"ModifierInvocation","src":"2876:9:9"}],"name":"withdrawETH","nameLocation":"2853:11:9","nodeType":"FunctionDefinition","parameters":{"id":4541,"nodeType":"ParameterList","parameters":[],"src":"2864:2:9"},"returnParameters":{"id":4544,"nodeType":"ParameterList","parameters":[],"src":"2886:0:9"},"scope":4613,"src":"2844:270:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4591,"nodeType":"Block","src":"3246:42:9","statements":[{"expression":{"id":4589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4587,"name":"basePrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4369,"src":"3256:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4588,"name":"_newBasePrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4582,"src":"3268:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3256:25:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4590,"nodeType":"ExpressionStatement","src":"3256:25:9"}]},"documentation":{"id":4580,"nodeType":"StructuredDocumentation","src":"3120:54:9","text":" @dev Update base price (owner only)"},"functionSelector":"fd5baa88","id":4592,"implemented":true,"kind":"function","modifiers":[{"id":4585,"kind":"modifierInvocation","modifierName":{"id":4584,"name":"onlyOwner","nameLocations":["3236:9:9"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"3236:9:9"},"nodeType":"ModifierInvocation","src":"3236:9:9"}],"name":"updateBasePrice","nameLocation":"3188:15:9","nodeType":"FunctionDefinition","parameters":{"id":4583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4582,"mutability":"mutable","name":"_newBasePrice","nameLocation":"3212:13:9","nodeType":"VariableDeclaration","scope":4592,"src":"3204:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4581,"name":"uint256","nodeType":"ElementaryTypeName","src":"3204:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3203:23:9"},"returnParameters":{"id":4586,"nodeType":"ParameterList","parameters":[],"src":"3246:0:9"},"scope":4613,"src":"3179:109:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4611,"nodeType":"Block","src":"3529:117:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4601,"name":"_newFactor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4595,"src":"3547:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"31653138","id":4602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3561:4:9","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"src":"3547:18:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"466163746f72206d757374206265206174206c6561737420312e30","id":4604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3567:29:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_98d47a114e9ec161988edab8b58a654f584563d48ca8de8bde3ee7b5f933c731","typeString":"literal_string \"Factor must be at least 1.0\""},"value":"Factor must be at least 1.0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_98d47a114e9ec161988edab8b58a654f584563d48ca8de8bde3ee7b5f933c731","typeString":"literal_string \"Factor must be at least 1.0\""}],"id":4600,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"3539:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4605,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3539:58:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4606,"nodeType":"ExpressionStatement","src":"3539:58:9"},{"expression":{"id":4609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4607,"name":"priceIncreaseFactor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4374,"src":"3607:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4608,"name":"_newFactor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4595,"src":"3629:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3607:32:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4610,"nodeType":"ExpressionStatement","src":"3607:32:9"}]},"documentation":{"id":4593,"nodeType":"StructuredDocumentation","src":"3294:156:9","text":" @dev Update price increase factor (owner only)\n @param _newFactor New factor multiplied by 1e18 (e.g., 1.5 * 1e18 for 50% increase)"},"functionSelector":"34436707","id":4612,"implemented":true,"kind":"function","modifiers":[{"id":4598,"kind":"modifierInvocation","modifierName":{"id":4597,"name":"onlyOwner","nameLocations":["3519:9:9"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"3519:9:9"},"nodeType":"ModifierInvocation","src":"3519:9:9"}],"name":"updatePriceIncreaseFactor","nameLocation":"3464:25:9","nodeType":"FunctionDefinition","parameters":{"id":4596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4595,"mutability":"mutable","name":"_newFactor","nameLocation":"3498:10:9","nodeType":"VariableDeclaration","scope":4612,"src":"3490:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4594,"name":"uint256","nodeType":"ElementaryTypeName","src":"3490:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3489:20:9"},"returnParameters":{"id":4599,"nodeType":"ParameterList","parameters":[],"src":"3529:0:9"},"scope":4613,"src":"3455:191:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":4614,"src":"325:3323:9","usedErrors":[13,18,159,164,169,178,183,188],"usedEvents":[24,811,820,4394]}],"src":"32:3617:9"},"id":9}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122044fd5c6dc22ace3217436b923d3288726ebe1f48ed972abfbb54a291caab641964736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PREVRANDAO REVERT TLOAD PUSH14 0xC22ACE3217436B923D3288726EBE 0x1F BASEFEE 0xED SWAP8 0x2A 0xBF 0xBB SLOAD LOG2 SWAP2 0xCA 0xAB PUSH5 0x1964736F6C PUSH4 0x4300081C STOP CALLER ","sourceMap":"657:1315:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122044fd5c6dc22ace3217436b923d3288726ebe1f48ed972abfbb54a291caab641964736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PREVRANDAO REVERT TLOAD PUSH14 0xC22ACE3217436B923D3288726EBE 0x1F BASEFEE 0xED SWAP8 0x2A 0xBF 0xBB SLOAD LOG2 SWAP2 0xCA 0xAB PUSH5 0x1964736F6C PUSH4 0x4300081C STOP CALLER ","sourceMap":"657:1315:6:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204f7d06953f5fe20dd24fbcb0fc8475806a42e254e8536e5da3358df77baeec5e64736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4F PUSH30 0x6953F5FE20DD24FBCB0FC8475806A42E254E8536E5DA3358DF77BAEEC5E PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"281:28026:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204f7d06953f5fe20dd24fbcb0fc8475806a42e254e8536e5da3358df77baeec5e64736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4F PUSH30 0x6953F5FE20DD24FBCB0FC8475806A42E254E8536E5DA3358DF77BAEEC5E PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"281:28026:7:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b619700e36f8286c341dba52edf08c2ac628f28267f87863dc4a18698b0d4f3f64736f6c634300081c0033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB6 NOT PUSH17 0xE36F8286C341DBA52EDF08C2AC628F282 PUSH8 0xF87863DC4A18698B 0xD 0x4F EXTCODEHASH PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"769:34173:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b619700e36f8286c341dba52edf08c2ac628f28267f87863dc4a18698b0d4f3f64736f6c634300081c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB6 NOT PUSH17 0xE36F8286C341DBA52EDF08C2AC628F282 PUSH8 0xF87863DC4A18698B 0xD 0x4F EXTCODEHASH PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"769:34173:8:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"contracts/MockToken.sol":{"DealToken":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"buyer","type":"address"},{"indexed":false,"internalType":"uint256","name":"ethAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"tokenAmount","type":"uint256"}],"name":"TokensPurchased","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"basePrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"buy","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getCurrentPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"priceIncreaseFactor","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalEthCollected","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_newBasePrice","type":"uint256"}],"name":"updateBasePrice","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_newFactor","type":"uint256"}],"name":"updatePriceIncreaseFactor","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"withdrawETH","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_336":{"entryPoint":null,"id":336,"parameterSlots":2,"returnSlots":0},"@_4412":{"entryPoint":null,"id":4412,"parameterSlots":0,"returnSlots":0},"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_mint_639":{"entryPoint":542,"id":639,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":344,"id":146,"parameterSlots":1,"returnSlots":0},"@_update_606":{"entryPoint":678,"id":606,"parameterSlots":3,"returnSlots":0},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":2079,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":2220,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":2094,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":2235,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":2290,"id":null,"parameterSlots":2,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":1381,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":1227,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":2168,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":1678,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":2061,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":2029,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":1513,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":1643,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":1533,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":1819,"id":null,"parameterSlots":2,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":1402,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":1332,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":1791,"id":null,"parameterSlots":2,"returnSlots":1},"identity":{"entryPoint":1523,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":1761,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":2121,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":1285,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":1238,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":1567,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":1418,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":1748,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":1619,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":1431,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":1577,"id":null,"parameterSlots":3,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":1614,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:7000:10","nodeType":"YulBlock","src":"0:7000:10","statements":[{"body":{"nativeSrc":"66:40:10","nodeType":"YulBlock","src":"66:40:10","statements":[{"nativeSrc":"77:22:10","nodeType":"YulAssignment","src":"77:22:10","value":{"arguments":[{"name":"value","nativeSrc":"93:5:10","nodeType":"YulIdentifier","src":"93:5:10"}],"functionName":{"name":"mload","nativeSrc":"87:5:10","nodeType":"YulIdentifier","src":"87:5:10"},"nativeSrc":"87:12:10","nodeType":"YulFunctionCall","src":"87:12:10"},"variableNames":[{"name":"length","nativeSrc":"77:6:10","nodeType":"YulIdentifier","src":"77:6:10"}]}]},"name":"array_length_t_string_memory_ptr","nativeSrc":"7:99:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"49:5:10","nodeType":"YulTypedName","src":"49:5:10","type":""}],"returnVariables":[{"name":"length","nativeSrc":"59:6:10","nodeType":"YulTypedName","src":"59:6:10","type":""}],"src":"7:99:10"},{"body":{"nativeSrc":"140:152:10","nodeType":"YulBlock","src":"140:152:10","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"157:1:10","nodeType":"YulLiteral","src":"157:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"160:77:10","nodeType":"YulLiteral","src":"160:77:10","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"150:6:10","nodeType":"YulIdentifier","src":"150:6:10"},"nativeSrc":"150:88:10","nodeType":"YulFunctionCall","src":"150:88:10"},"nativeSrc":"150:88:10","nodeType":"YulExpressionStatement","src":"150:88:10"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"254:1:10","nodeType":"YulLiteral","src":"254:1:10","type":"","value":"4"},{"kind":"number","nativeSrc":"257:4:10","nodeType":"YulLiteral","src":"257:4:10","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"247:6:10","nodeType":"YulIdentifier","src":"247:6:10"},"nativeSrc":"247:15:10","nodeType":"YulFunctionCall","src":"247:15:10"},"nativeSrc":"247:15:10","nodeType":"YulExpressionStatement","src":"247:15:10"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"278:1:10","nodeType":"YulLiteral","src":"278:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"281:4:10","nodeType":"YulLiteral","src":"281:4:10","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"271:6:10","nodeType":"YulIdentifier","src":"271:6:10"},"nativeSrc":"271:15:10","nodeType":"YulFunctionCall","src":"271:15:10"},"nativeSrc":"271:15:10","nodeType":"YulExpressionStatement","src":"271:15:10"}]},"name":"panic_error_0x41","nativeSrc":"112:180:10","nodeType":"YulFunctionDefinition","src":"112:180:10"},{"body":{"nativeSrc":"326:152:10","nodeType":"YulBlock","src":"326:152:10","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"343:1:10","nodeType":"YulLiteral","src":"343:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"346:77:10","nodeType":"YulLiteral","src":"346:77:10","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"336:6:10","nodeType":"YulIdentifier","src":"336:6:10"},"nativeSrc":"336:88:10","nodeType":"YulFunctionCall","src":"336:88:10"},"nativeSrc":"336:88:10","nodeType":"YulExpressionStatement","src":"336:88:10"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"440:1:10","nodeType":"YulLiteral","src":"440:1:10","type":"","value":"4"},{"kind":"number","nativeSrc":"443:4:10","nodeType":"YulLiteral","src":"443:4:10","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"433:6:10","nodeType":"YulIdentifier","src":"433:6:10"},"nativeSrc":"433:15:10","nodeType":"YulFunctionCall","src":"433:15:10"},"nativeSrc":"433:15:10","nodeType":"YulExpressionStatement","src":"433:15:10"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"464:1:10","nodeType":"YulLiteral","src":"464:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"467:4:10","nodeType":"YulLiteral","src":"467:4:10","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"457:6:10","nodeType":"YulIdentifier","src":"457:6:10"},"nativeSrc":"457:15:10","nodeType":"YulFunctionCall","src":"457:15:10"},"nativeSrc":"457:15:10","nodeType":"YulExpressionStatement","src":"457:15:10"}]},"name":"panic_error_0x22","nativeSrc":"298:180:10","nodeType":"YulFunctionDefinition","src":"298:180:10"},{"body":{"nativeSrc":"535:269:10","nodeType":"YulBlock","src":"535:269:10","statements":[{"nativeSrc":"545:22:10","nodeType":"YulAssignment","src":"545:22:10","value":{"arguments":[{"name":"data","nativeSrc":"559:4:10","nodeType":"YulIdentifier","src":"559:4:10"},{"kind":"number","nativeSrc":"565:1:10","nodeType":"YulLiteral","src":"565:1:10","type":"","value":"2"}],"functionName":{"name":"div","nativeSrc":"555:3:10","nodeType":"YulIdentifier","src":"555:3:10"},"nativeSrc":"555:12:10","nodeType":"YulFunctionCall","src":"555:12:10"},"variableNames":[{"name":"length","nativeSrc":"545:6:10","nodeType":"YulIdentifier","src":"545:6:10"}]},{"nativeSrc":"576:38:10","nodeType":"YulVariableDeclaration","src":"576:38:10","value":{"arguments":[{"name":"data","nativeSrc":"606:4:10","nodeType":"YulIdentifier","src":"606:4:10"},{"kind":"number","nativeSrc":"612:1:10","nodeType":"YulLiteral","src":"612:1:10","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"602:3:10","nodeType":"YulIdentifier","src":"602:3:10"},"nativeSrc":"602:12:10","nodeType":"YulFunctionCall","src":"602:12:10"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"580:18:10","nodeType":"YulTypedName","src":"580:18:10","type":""}]},{"body":{"nativeSrc":"653:51:10","nodeType":"YulBlock","src":"653:51:10","statements":[{"nativeSrc":"667:27:10","nodeType":"YulAssignment","src":"667:27:10","value":{"arguments":[{"name":"length","nativeSrc":"681:6:10","nodeType":"YulIdentifier","src":"681:6:10"},{"kind":"number","nativeSrc":"689:4:10","nodeType":"YulLiteral","src":"689:4:10","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"677:3:10","nodeType":"YulIdentifier","src":"677:3:10"},"nativeSrc":"677:17:10","nodeType":"YulFunctionCall","src":"677:17:10"},"variableNames":[{"name":"length","nativeSrc":"667:6:10","nodeType":"YulIdentifier","src":"667:6:10"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"633:18:10","nodeType":"YulIdentifier","src":"633:18:10"}],"functionName":{"name":"iszero","nativeSrc":"626:6:10","nodeType":"YulIdentifier","src":"626:6:10"},"nativeSrc":"626:26:10","nodeType":"YulFunctionCall","src":"626:26:10"},"nativeSrc":"623:81:10","nodeType":"YulIf","src":"623:81:10"},{"body":{"nativeSrc":"756:42:10","nodeType":"YulBlock","src":"756:42:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nativeSrc":"770:16:10","nodeType":"YulIdentifier","src":"770:16:10"},"nativeSrc":"770:18:10","nodeType":"YulFunctionCall","src":"770:18:10"},"nativeSrc":"770:18:10","nodeType":"YulExpressionStatement","src":"770:18:10"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"720:18:10","nodeType":"YulIdentifier","src":"720:18:10"},{"arguments":[{"name":"length","nativeSrc":"743:6:10","nodeType":"YulIdentifier","src":"743:6:10"},{"kind":"number","nativeSrc":"751:2:10","nodeType":"YulLiteral","src":"751:2:10","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"740:2:10","nodeType":"YulIdentifier","src":"740:2:10"},"nativeSrc":"740:14:10","nodeType":"YulFunctionCall","src":"740:14:10"}],"functionName":{"name":"eq","nativeSrc":"717:2:10","nodeType":"YulIdentifier","src":"717:2:10"},"nativeSrc":"717:38:10","nodeType":"YulFunctionCall","src":"717:38:10"},"nativeSrc":"714:84:10","nodeType":"YulIf","src":"714:84:10"}]},"name":"extract_byte_array_length","nativeSrc":"484:320:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"519:4:10","nodeType":"YulTypedName","src":"519:4:10","type":""}],"returnVariables":[{"name":"length","nativeSrc":"528:6:10","nodeType":"YulTypedName","src":"528:6:10","type":""}],"src":"484:320:10"},{"body":{"nativeSrc":"864:87:10","nodeType":"YulBlock","src":"864:87:10","statements":[{"nativeSrc":"874:11:10","nodeType":"YulAssignment","src":"874:11:10","value":{"name":"ptr","nativeSrc":"882:3:10","nodeType":"YulIdentifier","src":"882:3:10"},"variableNames":[{"name":"data","nativeSrc":"874:4:10","nodeType":"YulIdentifier","src":"874:4:10"}]},{"expression":{"arguments":[{"kind":"number","nativeSrc":"902:1:10","nodeType":"YulLiteral","src":"902:1:10","type":"","value":"0"},{"name":"ptr","nativeSrc":"905:3:10","nodeType":"YulIdentifier","src":"905:3:10"}],"functionName":{"name":"mstore","nativeSrc":"895:6:10","nodeType":"YulIdentifier","src":"895:6:10"},"nativeSrc":"895:14:10","nodeType":"YulFunctionCall","src":"895:14:10"},"nativeSrc":"895:14:10","nodeType":"YulExpressionStatement","src":"895:14:10"},{"nativeSrc":"918:26:10","nodeType":"YulAssignment","src":"918:26:10","value":{"arguments":[{"kind":"number","nativeSrc":"936:1:10","nodeType":"YulLiteral","src":"936:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"939:4:10","nodeType":"YulLiteral","src":"939:4:10","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"926:9:10","nodeType":"YulIdentifier","src":"926:9:10"},"nativeSrc":"926:18:10","nodeType":"YulFunctionCall","src":"926:18:10"},"variableNames":[{"name":"data","nativeSrc":"918:4:10","nodeType":"YulIdentifier","src":"918:4:10"}]}]},"name":"array_dataslot_t_string_storage","nativeSrc":"810:141:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"851:3:10","nodeType":"YulTypedName","src":"851:3:10","type":""}],"returnVariables":[{"name":"data","nativeSrc":"859:4:10","nodeType":"YulTypedName","src":"859:4:10","type":""}],"src":"810:141:10"},{"body":{"nativeSrc":"1001:49:10","nodeType":"YulBlock","src":"1001:49:10","statements":[{"nativeSrc":"1011:33:10","nodeType":"YulAssignment","src":"1011:33:10","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1029:5:10","nodeType":"YulIdentifier","src":"1029:5:10"},{"kind":"number","nativeSrc":"1036:2:10","nodeType":"YulLiteral","src":"1036:2:10","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"1025:3:10","nodeType":"YulIdentifier","src":"1025:3:10"},"nativeSrc":"1025:14:10","nodeType":"YulFunctionCall","src":"1025:14:10"},{"kind":"number","nativeSrc":"1041:2:10","nodeType":"YulLiteral","src":"1041:2:10","type":"","value":"32"}],"functionName":{"name":"div","nativeSrc":"1021:3:10","nodeType":"YulIdentifier","src":"1021:3:10"},"nativeSrc":"1021:23:10","nodeType":"YulFunctionCall","src":"1021:23:10"},"variableNames":[{"name":"result","nativeSrc":"1011:6:10","nodeType":"YulIdentifier","src":"1011:6:10"}]}]},"name":"divide_by_32_ceil","nativeSrc":"957:93:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"984:5:10","nodeType":"YulTypedName","src":"984:5:10","type":""}],"returnVariables":[{"name":"result","nativeSrc":"994:6:10","nodeType":"YulTypedName","src":"994:6:10","type":""}],"src":"957:93:10"},{"body":{"nativeSrc":"1109:54:10","nodeType":"YulBlock","src":"1109:54:10","statements":[{"nativeSrc":"1119:37:10","nodeType":"YulAssignment","src":"1119:37:10","value":{"arguments":[{"name":"bits","nativeSrc":"1144:4:10","nodeType":"YulIdentifier","src":"1144:4:10"},{"name":"value","nativeSrc":"1150:5:10","nodeType":"YulIdentifier","src":"1150:5:10"}],"functionName":{"name":"shl","nativeSrc":"1140:3:10","nodeType":"YulIdentifier","src":"1140:3:10"},"nativeSrc":"1140:16:10","nodeType":"YulFunctionCall","src":"1140:16:10"},"variableNames":[{"name":"newValue","nativeSrc":"1119:8:10","nodeType":"YulIdentifier","src":"1119:8:10"}]}]},"name":"shift_left_dynamic","nativeSrc":"1056:107:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"1084:4:10","nodeType":"YulTypedName","src":"1084:4:10","type":""},{"name":"value","nativeSrc":"1090:5:10","nodeType":"YulTypedName","src":"1090:5:10","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"1100:8:10","nodeType":"YulTypedName","src":"1100:8:10","type":""}],"src":"1056:107:10"},{"body":{"nativeSrc":"1245:317:10","nodeType":"YulBlock","src":"1245:317:10","statements":[{"nativeSrc":"1255:35:10","nodeType":"YulVariableDeclaration","src":"1255:35:10","value":{"arguments":[{"name":"shiftBytes","nativeSrc":"1276:10:10","nodeType":"YulIdentifier","src":"1276:10:10"},{"kind":"number","nativeSrc":"1288:1:10","nodeType":"YulLiteral","src":"1288:1:10","type":"","value":"8"}],"functionName":{"name":"mul","nativeSrc":"1272:3:10","nodeType":"YulIdentifier","src":"1272:3:10"},"nativeSrc":"1272:18:10","nodeType":"YulFunctionCall","src":"1272:18:10"},"variables":[{"name":"shiftBits","nativeSrc":"1259:9:10","nodeType":"YulTypedName","src":"1259:9:10","type":""}]},{"nativeSrc":"1299:109:10","nodeType":"YulVariableDeclaration","src":"1299:109:10","value":{"arguments":[{"name":"shiftBits","nativeSrc":"1330:9:10","nodeType":"YulIdentifier","src":"1330:9:10"},{"kind":"number","nativeSrc":"1341:66:10","nodeType":"YulLiteral","src":"1341:66:10","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"1311:18:10","nodeType":"YulIdentifier","src":"1311:18:10"},"nativeSrc":"1311:97:10","nodeType":"YulFunctionCall","src":"1311:97:10"},"variables":[{"name":"mask","nativeSrc":"1303:4:10","nodeType":"YulTypedName","src":"1303:4:10","type":""}]},{"nativeSrc":"1417:51:10","nodeType":"YulAssignment","src":"1417:51:10","value":{"arguments":[{"name":"shiftBits","nativeSrc":"1448:9:10","nodeType":"YulIdentifier","src":"1448:9:10"},{"name":"toInsert","nativeSrc":"1459:8:10","nodeType":"YulIdentifier","src":"1459:8:10"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"1429:18:10","nodeType":"YulIdentifier","src":"1429:18:10"},"nativeSrc":"1429:39:10","nodeType":"YulFunctionCall","src":"1429:39:10"},"variableNames":[{"name":"toInsert","nativeSrc":"1417:8:10","nodeType":"YulIdentifier","src":"1417:8:10"}]},{"nativeSrc":"1477:30:10","nodeType":"YulAssignment","src":"1477:30:10","value":{"arguments":[{"name":"value","nativeSrc":"1490:5:10","nodeType":"YulIdentifier","src":"1490:5:10"},{"arguments":[{"name":"mask","nativeSrc":"1501:4:10","nodeType":"YulIdentifier","src":"1501:4:10"}],"functionName":{"name":"not","nativeSrc":"1497:3:10","nodeType":"YulIdentifier","src":"1497:3:10"},"nativeSrc":"1497:9:10","nodeType":"YulFunctionCall","src":"1497:9:10"}],"functionName":{"name":"and","nativeSrc":"1486:3:10","nodeType":"YulIdentifier","src":"1486:3:10"},"nativeSrc":"1486:21:10","nodeType":"YulFunctionCall","src":"1486:21:10"},"variableNames":[{"name":"value","nativeSrc":"1477:5:10","nodeType":"YulIdentifier","src":"1477:5:10"}]},{"nativeSrc":"1516:40:10","nodeType":"YulAssignment","src":"1516:40:10","value":{"arguments":[{"name":"value","nativeSrc":"1529:5:10","nodeType":"YulIdentifier","src":"1529:5:10"},{"arguments":[{"name":"toInsert","nativeSrc":"1540:8:10","nodeType":"YulIdentifier","src":"1540:8:10"},{"name":"mask","nativeSrc":"1550:4:10","nodeType":"YulIdentifier","src":"1550:4:10"}],"functionName":{"name":"and","nativeSrc":"1536:3:10","nodeType":"YulIdentifier","src":"1536:3:10"},"nativeSrc":"1536:19:10","nodeType":"YulFunctionCall","src":"1536:19:10"}],"functionName":{"name":"or","nativeSrc":"1526:2:10","nodeType":"YulIdentifier","src":"1526:2:10"},"nativeSrc":"1526:30:10","nodeType":"YulFunctionCall","src":"1526:30:10"},"variableNames":[{"name":"result","nativeSrc":"1516:6:10","nodeType":"YulIdentifier","src":"1516:6:10"}]}]},"name":"update_byte_slice_dynamic32","nativeSrc":"1169:393:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1206:5:10","nodeType":"YulTypedName","src":"1206:5:10","type":""},{"name":"shiftBytes","nativeSrc":"1213:10:10","nodeType":"YulTypedName","src":"1213:10:10","type":""},{"name":"toInsert","nativeSrc":"1225:8:10","nodeType":"YulTypedName","src":"1225:8:10","type":""}],"returnVariables":[{"name":"result","nativeSrc":"1238:6:10","nodeType":"YulTypedName","src":"1238:6:10","type":""}],"src":"1169:393:10"},{"body":{"nativeSrc":"1613:32:10","nodeType":"YulBlock","src":"1613:32:10","statements":[{"nativeSrc":"1623:16:10","nodeType":"YulAssignment","src":"1623:16:10","value":{"name":"value","nativeSrc":"1634:5:10","nodeType":"YulIdentifier","src":"1634:5:10"},"variableNames":[{"name":"cleaned","nativeSrc":"1623:7:10","nodeType":"YulIdentifier","src":"1623:7:10"}]}]},"name":"cleanup_t_uint256","nativeSrc":"1568:77:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1595:5:10","nodeType":"YulTypedName","src":"1595:5:10","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1605:7:10","nodeType":"YulTypedName","src":"1605:7:10","type":""}],"src":"1568:77:10"},{"body":{"nativeSrc":"1683:28:10","nodeType":"YulBlock","src":"1683:28:10","statements":[{"nativeSrc":"1693:12:10","nodeType":"YulAssignment","src":"1693:12:10","value":{"name":"value","nativeSrc":"1700:5:10","nodeType":"YulIdentifier","src":"1700:5:10"},"variableNames":[{"name":"ret","nativeSrc":"1693:3:10","nodeType":"YulIdentifier","src":"1693:3:10"}]}]},"name":"identity","nativeSrc":"1651:60:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1669:5:10","nodeType":"YulTypedName","src":"1669:5:10","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"1679:3:10","nodeType":"YulTypedName","src":"1679:3:10","type":""}],"src":"1651:60:10"},{"body":{"nativeSrc":"1777:82:10","nodeType":"YulBlock","src":"1777:82:10","statements":[{"nativeSrc":"1787:66:10","nodeType":"YulAssignment","src":"1787:66:10","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1845:5:10","nodeType":"YulIdentifier","src":"1845:5:10"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"1827:17:10","nodeType":"YulIdentifier","src":"1827:17:10"},"nativeSrc":"1827:24:10","nodeType":"YulFunctionCall","src":"1827:24:10"}],"functionName":{"name":"identity","nativeSrc":"1818:8:10","nodeType":"YulIdentifier","src":"1818:8:10"},"nativeSrc":"1818:34:10","nodeType":"YulFunctionCall","src":"1818:34:10"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"1800:17:10","nodeType":"YulIdentifier","src":"1800:17:10"},"nativeSrc":"1800:53:10","nodeType":"YulFunctionCall","src":"1800:53:10"},"variableNames":[{"name":"converted","nativeSrc":"1787:9:10","nodeType":"YulIdentifier","src":"1787:9:10"}]}]},"name":"convert_t_uint256_to_t_uint256","nativeSrc":"1717:142:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1757:5:10","nodeType":"YulTypedName","src":"1757:5:10","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"1767:9:10","nodeType":"YulTypedName","src":"1767:9:10","type":""}],"src":"1717:142:10"},{"body":{"nativeSrc":"1912:28:10","nodeType":"YulBlock","src":"1912:28:10","statements":[{"nativeSrc":"1922:12:10","nodeType":"YulAssignment","src":"1922:12:10","value":{"name":"value","nativeSrc":"1929:5:10","nodeType":"YulIdentifier","src":"1929:5:10"},"variableNames":[{"name":"ret","nativeSrc":"1922:3:10","nodeType":"YulIdentifier","src":"1922:3:10"}]}]},"name":"prepare_store_t_uint256","nativeSrc":"1865:75:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1898:5:10","nodeType":"YulTypedName","src":"1898:5:10","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"1908:3:10","nodeType":"YulTypedName","src":"1908:3:10","type":""}],"src":"1865:75:10"},{"body":{"nativeSrc":"2022:193:10","nodeType":"YulBlock","src":"2022:193:10","statements":[{"nativeSrc":"2032:63:10","nodeType":"YulVariableDeclaration","src":"2032:63:10","value":{"arguments":[{"name":"value_0","nativeSrc":"2087:7:10","nodeType":"YulIdentifier","src":"2087:7:10"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nativeSrc":"2056:30:10","nodeType":"YulIdentifier","src":"2056:30:10"},"nativeSrc":"2056:39:10","nodeType":"YulFunctionCall","src":"2056:39:10"},"variables":[{"name":"convertedValue_0","nativeSrc":"2036:16:10","nodeType":"YulTypedName","src":"2036:16:10","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"2111:4:10","nodeType":"YulIdentifier","src":"2111:4:10"},{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"2151:4:10","nodeType":"YulIdentifier","src":"2151:4:10"}],"functionName":{"name":"sload","nativeSrc":"2145:5:10","nodeType":"YulIdentifier","src":"2145:5:10"},"nativeSrc":"2145:11:10","nodeType":"YulFunctionCall","src":"2145:11:10"},{"name":"offset","nativeSrc":"2158:6:10","nodeType":"YulIdentifier","src":"2158:6:10"},{"arguments":[{"name":"convertedValue_0","nativeSrc":"2190:16:10","nodeType":"YulIdentifier","src":"2190:16:10"}],"functionName":{"name":"prepare_store_t_uint256","nativeSrc":"2166:23:10","nodeType":"YulIdentifier","src":"2166:23:10"},"nativeSrc":"2166:41:10","nodeType":"YulFunctionCall","src":"2166:41:10"}],"functionName":{"name":"update_byte_slice_dynamic32","nativeSrc":"2117:27:10","nodeType":"YulIdentifier","src":"2117:27:10"},"nativeSrc":"2117:91:10","nodeType":"YulFunctionCall","src":"2117:91:10"}],"functionName":{"name":"sstore","nativeSrc":"2104:6:10","nodeType":"YulIdentifier","src":"2104:6:10"},"nativeSrc":"2104:105:10","nodeType":"YulFunctionCall","src":"2104:105:10"},"nativeSrc":"2104:105:10","nodeType":"YulExpressionStatement","src":"2104:105:10"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"1946:269:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"1999:4:10","nodeType":"YulTypedName","src":"1999:4:10","type":""},{"name":"offset","nativeSrc":"2005:6:10","nodeType":"YulTypedName","src":"2005:6:10","type":""},{"name":"value_0","nativeSrc":"2013:7:10","nodeType":"YulTypedName","src":"2013:7:10","type":""}],"src":"1946:269:10"},{"body":{"nativeSrc":"2270:24:10","nodeType":"YulBlock","src":"2270:24:10","statements":[{"nativeSrc":"2280:8:10","nodeType":"YulAssignment","src":"2280:8:10","value":{"kind":"number","nativeSrc":"2287:1:10","nodeType":"YulLiteral","src":"2287:1:10","type":"","value":"0"},"variableNames":[{"name":"ret","nativeSrc":"2280:3:10","nodeType":"YulIdentifier","src":"2280:3:10"}]}]},"name":"zero_value_for_split_t_uint256","nativeSrc":"2221:73:10","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nativeSrc":"2266:3:10","nodeType":"YulTypedName","src":"2266:3:10","type":""}],"src":"2221:73:10"},{"body":{"nativeSrc":"2353:136:10","nodeType":"YulBlock","src":"2353:136:10","statements":[{"nativeSrc":"2363:46:10","nodeType":"YulVariableDeclaration","src":"2363:46:10","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nativeSrc":"2377:30:10","nodeType":"YulIdentifier","src":"2377:30:10"},"nativeSrc":"2377:32:10","nodeType":"YulFunctionCall","src":"2377:32:10"},"variables":[{"name":"zero_0","nativeSrc":"2367:6:10","nodeType":"YulTypedName","src":"2367:6:10","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"2462:4:10","nodeType":"YulIdentifier","src":"2462:4:10"},{"name":"offset","nativeSrc":"2468:6:10","nodeType":"YulIdentifier","src":"2468:6:10"},{"name":"zero_0","nativeSrc":"2476:6:10","nodeType":"YulIdentifier","src":"2476:6:10"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"2418:43:10","nodeType":"YulIdentifier","src":"2418:43:10"},"nativeSrc":"2418:65:10","nodeType":"YulFunctionCall","src":"2418:65:10"},"nativeSrc":"2418:65:10","nodeType":"YulExpressionStatement","src":"2418:65:10"}]},"name":"storage_set_to_zero_t_uint256","nativeSrc":"2300:189:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"2339:4:10","nodeType":"YulTypedName","src":"2339:4:10","type":""},{"name":"offset","nativeSrc":"2345:6:10","nodeType":"YulTypedName","src":"2345:6:10","type":""}],"src":"2300:189:10"},{"body":{"nativeSrc":"2545:136:10","nodeType":"YulBlock","src":"2545:136:10","statements":[{"body":{"nativeSrc":"2612:63:10","nodeType":"YulBlock","src":"2612:63:10","statements":[{"expression":{"arguments":[{"name":"start","nativeSrc":"2656:5:10","nodeType":"YulIdentifier","src":"2656:5:10"},{"kind":"number","nativeSrc":"2663:1:10","nodeType":"YulLiteral","src":"2663:1:10","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nativeSrc":"2626:29:10","nodeType":"YulIdentifier","src":"2626:29:10"},"nativeSrc":"2626:39:10","nodeType":"YulFunctionCall","src":"2626:39:10"},"nativeSrc":"2626:39:10","nodeType":"YulExpressionStatement","src":"2626:39:10"}]},"condition":{"arguments":[{"name":"start","nativeSrc":"2565:5:10","nodeType":"YulIdentifier","src":"2565:5:10"},{"name":"end","nativeSrc":"2572:3:10","nodeType":"YulIdentifier","src":"2572:3:10"}],"functionName":{"name":"lt","nativeSrc":"2562:2:10","nodeType":"YulIdentifier","src":"2562:2:10"},"nativeSrc":"2562:14:10","nodeType":"YulFunctionCall","src":"2562:14:10"},"nativeSrc":"2555:120:10","nodeType":"YulForLoop","post":{"nativeSrc":"2577:26:10","nodeType":"YulBlock","src":"2577:26:10","statements":[{"nativeSrc":"2579:22:10","nodeType":"YulAssignment","src":"2579:22:10","value":{"arguments":[{"name":"start","nativeSrc":"2592:5:10","nodeType":"YulIdentifier","src":"2592:5:10"},{"kind":"number","nativeSrc":"2599:1:10","nodeType":"YulLiteral","src":"2599:1:10","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"2588:3:10","nodeType":"YulIdentifier","src":"2588:3:10"},"nativeSrc":"2588:13:10","nodeType":"YulFunctionCall","src":"2588:13:10"},"variableNames":[{"name":"start","nativeSrc":"2579:5:10","nodeType":"YulIdentifier","src":"2579:5:10"}]}]},"pre":{"nativeSrc":"2559:2:10","nodeType":"YulBlock","src":"2559:2:10","statements":[]},"src":"2555:120:10"}]},"name":"clear_storage_range_t_bytes1","nativeSrc":"2495:186:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nativeSrc":"2533:5:10","nodeType":"YulTypedName","src":"2533:5:10","type":""},{"name":"end","nativeSrc":"2540:3:10","nodeType":"YulTypedName","src":"2540:3:10","type":""}],"src":"2495:186:10"},{"body":{"nativeSrc":"2766:464:10","nodeType":"YulBlock","src":"2766:464:10","statements":[{"body":{"nativeSrc":"2792:431:10","nodeType":"YulBlock","src":"2792:431:10","statements":[{"nativeSrc":"2806:54:10","nodeType":"YulVariableDeclaration","src":"2806:54:10","value":{"arguments":[{"name":"array","nativeSrc":"2854:5:10","nodeType":"YulIdentifier","src":"2854:5:10"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"2822:31:10","nodeType":"YulIdentifier","src":"2822:31:10"},"nativeSrc":"2822:38:10","nodeType":"YulFunctionCall","src":"2822:38:10"},"variables":[{"name":"dataArea","nativeSrc":"2810:8:10","nodeType":"YulTypedName","src":"2810:8:10","type":""}]},{"nativeSrc":"2873:63:10","nodeType":"YulVariableDeclaration","src":"2873:63:10","value":{"arguments":[{"name":"dataArea","nativeSrc":"2896:8:10","nodeType":"YulIdentifier","src":"2896:8:10"},{"arguments":[{"name":"startIndex","nativeSrc":"2924:10:10","nodeType":"YulIdentifier","src":"2924:10:10"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"2906:17:10","nodeType":"YulIdentifier","src":"2906:17:10"},"nativeSrc":"2906:29:10","nodeType":"YulFunctionCall","src":"2906:29:10"}],"functionName":{"name":"add","nativeSrc":"2892:3:10","nodeType":"YulIdentifier","src":"2892:3:10"},"nativeSrc":"2892:44:10","nodeType":"YulFunctionCall","src":"2892:44:10"},"variables":[{"name":"deleteStart","nativeSrc":"2877:11:10","nodeType":"YulTypedName","src":"2877:11:10","type":""}]},{"body":{"nativeSrc":"3093:27:10","nodeType":"YulBlock","src":"3093:27:10","statements":[{"nativeSrc":"3095:23:10","nodeType":"YulAssignment","src":"3095:23:10","value":{"name":"dataArea","nativeSrc":"3110:8:10","nodeType":"YulIdentifier","src":"3110:8:10"},"variableNames":[{"name":"deleteStart","nativeSrc":"3095:11:10","nodeType":"YulIdentifier","src":"3095:11:10"}]}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"3077:10:10","nodeType":"YulIdentifier","src":"3077:10:10"},{"kind":"number","nativeSrc":"3089:2:10","nodeType":"YulLiteral","src":"3089:2:10","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"3074:2:10","nodeType":"YulIdentifier","src":"3074:2:10"},"nativeSrc":"3074:18:10","nodeType":"YulFunctionCall","src":"3074:18:10"},"nativeSrc":"3071:49:10","nodeType":"YulIf","src":"3071:49:10"},{"expression":{"arguments":[{"name":"deleteStart","nativeSrc":"3162:11:10","nodeType":"YulIdentifier","src":"3162:11:10"},{"arguments":[{"name":"dataArea","nativeSrc":"3179:8:10","nodeType":"YulIdentifier","src":"3179:8:10"},{"arguments":[{"name":"len","nativeSrc":"3207:3:10","nodeType":"YulIdentifier","src":"3207:3:10"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"3189:17:10","nodeType":"YulIdentifier","src":"3189:17:10"},"nativeSrc":"3189:22:10","nodeType":"YulFunctionCall","src":"3189:22:10"}],"functionName":{"name":"add","nativeSrc":"3175:3:10","nodeType":"YulIdentifier","src":"3175:3:10"},"nativeSrc":"3175:37:10","nodeType":"YulFunctionCall","src":"3175:37:10"}],"functionName":{"name":"clear_storage_range_t_bytes1","nativeSrc":"3133:28:10","nodeType":"YulIdentifier","src":"3133:28:10"},"nativeSrc":"3133:80:10","nodeType":"YulFunctionCall","src":"3133:80:10"},"nativeSrc":"3133:80:10","nodeType":"YulExpressionStatement","src":"3133:80:10"}]},"condition":{"arguments":[{"name":"len","nativeSrc":"2783:3:10","nodeType":"YulIdentifier","src":"2783:3:10"},{"kind":"number","nativeSrc":"2788:2:10","nodeType":"YulLiteral","src":"2788:2:10","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"2780:2:10","nodeType":"YulIdentifier","src":"2780:2:10"},"nativeSrc":"2780:11:10","nodeType":"YulFunctionCall","src":"2780:11:10"},"nativeSrc":"2777:446:10","nodeType":"YulIf","src":"2777:446:10"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"2687:543:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"2742:5:10","nodeType":"YulTypedName","src":"2742:5:10","type":""},{"name":"len","nativeSrc":"2749:3:10","nodeType":"YulTypedName","src":"2749:3:10","type":""},{"name":"startIndex","nativeSrc":"2754:10:10","nodeType":"YulTypedName","src":"2754:10:10","type":""}],"src":"2687:543:10"},{"body":{"nativeSrc":"3299:54:10","nodeType":"YulBlock","src":"3299:54:10","statements":[{"nativeSrc":"3309:37:10","nodeType":"YulAssignment","src":"3309:37:10","value":{"arguments":[{"name":"bits","nativeSrc":"3334:4:10","nodeType":"YulIdentifier","src":"3334:4:10"},{"name":"value","nativeSrc":"3340:5:10","nodeType":"YulIdentifier","src":"3340:5:10"}],"functionName":{"name":"shr","nativeSrc":"3330:3:10","nodeType":"YulIdentifier","src":"3330:3:10"},"nativeSrc":"3330:16:10","nodeType":"YulFunctionCall","src":"3330:16:10"},"variableNames":[{"name":"newValue","nativeSrc":"3309:8:10","nodeType":"YulIdentifier","src":"3309:8:10"}]}]},"name":"shift_right_unsigned_dynamic","nativeSrc":"3236:117:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"3274:4:10","nodeType":"YulTypedName","src":"3274:4:10","type":""},{"name":"value","nativeSrc":"3280:5:10","nodeType":"YulTypedName","src":"3280:5:10","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"3290:8:10","nodeType":"YulTypedName","src":"3290:8:10","type":""}],"src":"3236:117:10"},{"body":{"nativeSrc":"3410:118:10","nodeType":"YulBlock","src":"3410:118:10","statements":[{"nativeSrc":"3420:68:10","nodeType":"YulVariableDeclaration","src":"3420:68:10","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"3469:1:10","nodeType":"YulLiteral","src":"3469:1:10","type":"","value":"8"},{"name":"bytes","nativeSrc":"3472:5:10","nodeType":"YulIdentifier","src":"3472:5:10"}],"functionName":{"name":"mul","nativeSrc":"3465:3:10","nodeType":"YulIdentifier","src":"3465:3:10"},"nativeSrc":"3465:13:10","nodeType":"YulFunctionCall","src":"3465:13:10"},{"arguments":[{"kind":"number","nativeSrc":"3484:1:10","nodeType":"YulLiteral","src":"3484:1:10","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"3480:3:10","nodeType":"YulIdentifier","src":"3480:3:10"},"nativeSrc":"3480:6:10","nodeType":"YulFunctionCall","src":"3480:6:10"}],"functionName":{"name":"shift_right_unsigned_dynamic","nativeSrc":"3436:28:10","nodeType":"YulIdentifier","src":"3436:28:10"},"nativeSrc":"3436:51:10","nodeType":"YulFunctionCall","src":"3436:51:10"}],"functionName":{"name":"not","nativeSrc":"3432:3:10","nodeType":"YulIdentifier","src":"3432:3:10"},"nativeSrc":"3432:56:10","nodeType":"YulFunctionCall","src":"3432:56:10"},"variables":[{"name":"mask","nativeSrc":"3424:4:10","nodeType":"YulTypedName","src":"3424:4:10","type":""}]},{"nativeSrc":"3497:25:10","nodeType":"YulAssignment","src":"3497:25:10","value":{"arguments":[{"name":"data","nativeSrc":"3511:4:10","nodeType":"YulIdentifier","src":"3511:4:10"},{"name":"mask","nativeSrc":"3517:4:10","nodeType":"YulIdentifier","src":"3517:4:10"}],"functionName":{"name":"and","nativeSrc":"3507:3:10","nodeType":"YulIdentifier","src":"3507:3:10"},"nativeSrc":"3507:15:10","nodeType":"YulFunctionCall","src":"3507:15:10"},"variableNames":[{"name":"result","nativeSrc":"3497:6:10","nodeType":"YulIdentifier","src":"3497:6:10"}]}]},"name":"mask_bytes_dynamic","nativeSrc":"3359:169:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"3387:4:10","nodeType":"YulTypedName","src":"3387:4:10","type":""},{"name":"bytes","nativeSrc":"3393:5:10","nodeType":"YulTypedName","src":"3393:5:10","type":""}],"returnVariables":[{"name":"result","nativeSrc":"3403:6:10","nodeType":"YulTypedName","src":"3403:6:10","type":""}],"src":"3359:169:10"},{"body":{"nativeSrc":"3614:214:10","nodeType":"YulBlock","src":"3614:214:10","statements":[{"nativeSrc":"3747:37:10","nodeType":"YulAssignment","src":"3747:37:10","value":{"arguments":[{"name":"data","nativeSrc":"3774:4:10","nodeType":"YulIdentifier","src":"3774:4:10"},{"name":"len","nativeSrc":"3780:3:10","nodeType":"YulIdentifier","src":"3780:3:10"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"3755:18:10","nodeType":"YulIdentifier","src":"3755:18:10"},"nativeSrc":"3755:29:10","nodeType":"YulFunctionCall","src":"3755:29:10"},"variableNames":[{"name":"data","nativeSrc":"3747:4:10","nodeType":"YulIdentifier","src":"3747:4:10"}]},{"nativeSrc":"3793:29:10","nodeType":"YulAssignment","src":"3793:29:10","value":{"arguments":[{"name":"data","nativeSrc":"3804:4:10","nodeType":"YulIdentifier","src":"3804:4:10"},{"arguments":[{"kind":"number","nativeSrc":"3814:1:10","nodeType":"YulLiteral","src":"3814:1:10","type":"","value":"2"},{"name":"len","nativeSrc":"3817:3:10","nodeType":"YulIdentifier","src":"3817:3:10"}],"functionName":{"name":"mul","nativeSrc":"3810:3:10","nodeType":"YulIdentifier","src":"3810:3:10"},"nativeSrc":"3810:11:10","nodeType":"YulFunctionCall","src":"3810:11:10"}],"functionName":{"name":"or","nativeSrc":"3801:2:10","nodeType":"YulIdentifier","src":"3801:2:10"},"nativeSrc":"3801:21:10","nodeType":"YulFunctionCall","src":"3801:21:10"},"variableNames":[{"name":"used","nativeSrc":"3793:4:10","nodeType":"YulIdentifier","src":"3793:4:10"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"3533:295:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"3595:4:10","nodeType":"YulTypedName","src":"3595:4:10","type":""},{"name":"len","nativeSrc":"3601:3:10","nodeType":"YulTypedName","src":"3601:3:10","type":""}],"returnVariables":[{"name":"used","nativeSrc":"3609:4:10","nodeType":"YulTypedName","src":"3609:4:10","type":""}],"src":"3533:295:10"},{"body":{"nativeSrc":"3925:1303:10","nodeType":"YulBlock","src":"3925:1303:10","statements":[{"nativeSrc":"3936:51:10","nodeType":"YulVariableDeclaration","src":"3936:51:10","value":{"arguments":[{"name":"src","nativeSrc":"3983:3:10","nodeType":"YulIdentifier","src":"3983:3:10"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"3950:32:10","nodeType":"YulIdentifier","src":"3950:32:10"},"nativeSrc":"3950:37:10","nodeType":"YulFunctionCall","src":"3950:37:10"},"variables":[{"name":"newLen","nativeSrc":"3940:6:10","nodeType":"YulTypedName","src":"3940:6:10","type":""}]},{"body":{"nativeSrc":"4072:22:10","nodeType":"YulBlock","src":"4072:22:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"4074:16:10","nodeType":"YulIdentifier","src":"4074:16:10"},"nativeSrc":"4074:18:10","nodeType":"YulFunctionCall","src":"4074:18:10"},"nativeSrc":"4074:18:10","nodeType":"YulExpressionStatement","src":"4074:18:10"}]},"condition":{"arguments":[{"name":"newLen","nativeSrc":"4044:6:10","nodeType":"YulIdentifier","src":"4044:6:10"},{"kind":"number","nativeSrc":"4052:18:10","nodeType":"YulLiteral","src":"4052:18:10","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"4041:2:10","nodeType":"YulIdentifier","src":"4041:2:10"},"nativeSrc":"4041:30:10","nodeType":"YulFunctionCall","src":"4041:30:10"},"nativeSrc":"4038:56:10","nodeType":"YulIf","src":"4038:56:10"},{"nativeSrc":"4104:52:10","nodeType":"YulVariableDeclaration","src":"4104:52:10","value":{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"4150:4:10","nodeType":"YulIdentifier","src":"4150:4:10"}],"functionName":{"name":"sload","nativeSrc":"4144:5:10","nodeType":"YulIdentifier","src":"4144:5:10"},"nativeSrc":"4144:11:10","nodeType":"YulFunctionCall","src":"4144:11:10"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"4118:25:10","nodeType":"YulIdentifier","src":"4118:25:10"},"nativeSrc":"4118:38:10","nodeType":"YulFunctionCall","src":"4118:38:10"},"variables":[{"name":"oldLen","nativeSrc":"4108:6:10","nodeType":"YulTypedName","src":"4108:6:10","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"4249:4:10","nodeType":"YulIdentifier","src":"4249:4:10"},{"name":"oldLen","nativeSrc":"4255:6:10","nodeType":"YulIdentifier","src":"4255:6:10"},{"name":"newLen","nativeSrc":"4263:6:10","nodeType":"YulIdentifier","src":"4263:6:10"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"4203:45:10","nodeType":"YulIdentifier","src":"4203:45:10"},"nativeSrc":"4203:67:10","nodeType":"YulFunctionCall","src":"4203:67:10"},"nativeSrc":"4203:67:10","nodeType":"YulExpressionStatement","src":"4203:67:10"},{"nativeSrc":"4280:18:10","nodeType":"YulVariableDeclaration","src":"4280:18:10","value":{"kind":"number","nativeSrc":"4297:1:10","nodeType":"YulLiteral","src":"4297:1:10","type":"","value":"0"},"variables":[{"name":"srcOffset","nativeSrc":"4284:9:10","nodeType":"YulTypedName","src":"4284:9:10","type":""}]},{"nativeSrc":"4308:17:10","nodeType":"YulAssignment","src":"4308:17:10","value":{"kind":"number","nativeSrc":"4321:4:10","nodeType":"YulLiteral","src":"4321:4:10","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nativeSrc":"4308:9:10","nodeType":"YulIdentifier","src":"4308:9:10"}]},{"cases":[{"body":{"nativeSrc":"4372:611:10","nodeType":"YulBlock","src":"4372:611:10","statements":[{"nativeSrc":"4386:37:10","nodeType":"YulVariableDeclaration","src":"4386:37:10","value":{"arguments":[{"name":"newLen","nativeSrc":"4405:6:10","nodeType":"YulIdentifier","src":"4405:6:10"},{"arguments":[{"kind":"number","nativeSrc":"4417:4:10","nodeType":"YulLiteral","src":"4417:4:10","type":"","value":"0x1f"}],"functionName":{"name":"not","nativeSrc":"4413:3:10","nodeType":"YulIdentifier","src":"4413:3:10"},"nativeSrc":"4413:9:10","nodeType":"YulFunctionCall","src":"4413:9:10"}],"functionName":{"name":"and","nativeSrc":"4401:3:10","nodeType":"YulIdentifier","src":"4401:3:10"},"nativeSrc":"4401:22:10","nodeType":"YulFunctionCall","src":"4401:22:10"},"variables":[{"name":"loopEnd","nativeSrc":"4390:7:10","nodeType":"YulTypedName","src":"4390:7:10","type":""}]},{"nativeSrc":"4437:51:10","nodeType":"YulVariableDeclaration","src":"4437:51:10","value":{"arguments":[{"name":"slot","nativeSrc":"4483:4:10","nodeType":"YulIdentifier","src":"4483:4:10"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"4451:31:10","nodeType":"YulIdentifier","src":"4451:31:10"},"nativeSrc":"4451:37:10","nodeType":"YulFunctionCall","src":"4451:37:10"},"variables":[{"name":"dstPtr","nativeSrc":"4441:6:10","nodeType":"YulTypedName","src":"4441:6:10","type":""}]},{"nativeSrc":"4501:10:10","nodeType":"YulVariableDeclaration","src":"4501:10:10","value":{"kind":"number","nativeSrc":"4510:1:10","nodeType":"YulLiteral","src":"4510:1:10","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"4505:1:10","nodeType":"YulTypedName","src":"4505:1:10","type":""}]},{"body":{"nativeSrc":"4569:163:10","nodeType":"YulBlock","src":"4569:163:10","statements":[{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"4594:6:10","nodeType":"YulIdentifier","src":"4594:6:10"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"4612:3:10","nodeType":"YulIdentifier","src":"4612:3:10"},{"name":"srcOffset","nativeSrc":"4617:9:10","nodeType":"YulIdentifier","src":"4617:9:10"}],"functionName":{"name":"add","nativeSrc":"4608:3:10","nodeType":"YulIdentifier","src":"4608:3:10"},"nativeSrc":"4608:19:10","nodeType":"YulFunctionCall","src":"4608:19:10"}],"functionName":{"name":"mload","nativeSrc":"4602:5:10","nodeType":"YulIdentifier","src":"4602:5:10"},"nativeSrc":"4602:26:10","nodeType":"YulFunctionCall","src":"4602:26:10"}],"functionName":{"name":"sstore","nativeSrc":"4587:6:10","nodeType":"YulIdentifier","src":"4587:6:10"},"nativeSrc":"4587:42:10","nodeType":"YulFunctionCall","src":"4587:42:10"},"nativeSrc":"4587:42:10","nodeType":"YulExpressionStatement","src":"4587:42:10"},{"nativeSrc":"4646:24:10","nodeType":"YulAssignment","src":"4646:24:10","value":{"arguments":[{"name":"dstPtr","nativeSrc":"4660:6:10","nodeType":"YulIdentifier","src":"4660:6:10"},{"kind":"number","nativeSrc":"4668:1:10","nodeType":"YulLiteral","src":"4668:1:10","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"4656:3:10","nodeType":"YulIdentifier","src":"4656:3:10"},"nativeSrc":"4656:14:10","nodeType":"YulFunctionCall","src":"4656:14:10"},"variableNames":[{"name":"dstPtr","nativeSrc":"4646:6:10","nodeType":"YulIdentifier","src":"4646:6:10"}]},{"nativeSrc":"4687:31:10","nodeType":"YulAssignment","src":"4687:31:10","value":{"arguments":[{"name":"srcOffset","nativeSrc":"4704:9:10","nodeType":"YulIdentifier","src":"4704:9:10"},{"kind":"number","nativeSrc":"4715:2:10","nodeType":"YulLiteral","src":"4715:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4700:3:10","nodeType":"YulIdentifier","src":"4700:3:10"},"nativeSrc":"4700:18:10","nodeType":"YulFunctionCall","src":"4700:18:10"},"variableNames":[{"name":"srcOffset","nativeSrc":"4687:9:10","nodeType":"YulIdentifier","src":"4687:9:10"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"4535:1:10","nodeType":"YulIdentifier","src":"4535:1:10"},{"name":"loopEnd","nativeSrc":"4538:7:10","nodeType":"YulIdentifier","src":"4538:7:10"}],"functionName":{"name":"lt","nativeSrc":"4532:2:10","nodeType":"YulIdentifier","src":"4532:2:10"},"nativeSrc":"4532:14:10","nodeType":"YulFunctionCall","src":"4532:14:10"},"nativeSrc":"4524:208:10","nodeType":"YulForLoop","post":{"nativeSrc":"4547:21:10","nodeType":"YulBlock","src":"4547:21:10","statements":[{"nativeSrc":"4549:17:10","nodeType":"YulAssignment","src":"4549:17:10","value":{"arguments":[{"name":"i","nativeSrc":"4558:1:10","nodeType":"YulIdentifier","src":"4558:1:10"},{"kind":"number","nativeSrc":"4561:4:10","nodeType":"YulLiteral","src":"4561:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4554:3:10","nodeType":"YulIdentifier","src":"4554:3:10"},"nativeSrc":"4554:12:10","nodeType":"YulFunctionCall","src":"4554:12:10"},"variableNames":[{"name":"i","nativeSrc":"4549:1:10","nodeType":"YulIdentifier","src":"4549:1:10"}]}]},"pre":{"nativeSrc":"4528:3:10","nodeType":"YulBlock","src":"4528:3:10","statements":[]},"src":"4524:208:10"},{"body":{"nativeSrc":"4768:156:10","nodeType":"YulBlock","src":"4768:156:10","statements":[{"nativeSrc":"4786:43:10","nodeType":"YulVariableDeclaration","src":"4786:43:10","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"4813:3:10","nodeType":"YulIdentifier","src":"4813:3:10"},{"name":"srcOffset","nativeSrc":"4818:9:10","nodeType":"YulIdentifier","src":"4818:9:10"}],"functionName":{"name":"add","nativeSrc":"4809:3:10","nodeType":"YulIdentifier","src":"4809:3:10"},"nativeSrc":"4809:19:10","nodeType":"YulFunctionCall","src":"4809:19:10"}],"functionName":{"name":"mload","nativeSrc":"4803:5:10","nodeType":"YulIdentifier","src":"4803:5:10"},"nativeSrc":"4803:26:10","nodeType":"YulFunctionCall","src":"4803:26:10"},"variables":[{"name":"lastValue","nativeSrc":"4790:9:10","nodeType":"YulTypedName","src":"4790:9:10","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"4853:6:10","nodeType":"YulIdentifier","src":"4853:6:10"},{"arguments":[{"name":"lastValue","nativeSrc":"4880:9:10","nodeType":"YulIdentifier","src":"4880:9:10"},{"arguments":[{"name":"newLen","nativeSrc":"4895:6:10","nodeType":"YulIdentifier","src":"4895:6:10"},{"kind":"number","nativeSrc":"4903:4:10","nodeType":"YulLiteral","src":"4903:4:10","type":"","value":"0x1f"}],"functionName":{"name":"and","nativeSrc":"4891:3:10","nodeType":"YulIdentifier","src":"4891:3:10"},"nativeSrc":"4891:17:10","nodeType":"YulFunctionCall","src":"4891:17:10"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"4861:18:10","nodeType":"YulIdentifier","src":"4861:18:10"},"nativeSrc":"4861:48:10","nodeType":"YulFunctionCall","src":"4861:48:10"}],"functionName":{"name":"sstore","nativeSrc":"4846:6:10","nodeType":"YulIdentifier","src":"4846:6:10"},"nativeSrc":"4846:64:10","nodeType":"YulFunctionCall","src":"4846:64:10"},"nativeSrc":"4846:64:10","nodeType":"YulExpressionStatement","src":"4846:64:10"}]},"condition":{"arguments":[{"name":"loopEnd","nativeSrc":"4751:7:10","nodeType":"YulIdentifier","src":"4751:7:10"},{"name":"newLen","nativeSrc":"4760:6:10","nodeType":"YulIdentifier","src":"4760:6:10"}],"functionName":{"name":"lt","nativeSrc":"4748:2:10","nodeType":"YulIdentifier","src":"4748:2:10"},"nativeSrc":"4748:19:10","nodeType":"YulFunctionCall","src":"4748:19:10"},"nativeSrc":"4745:179:10","nodeType":"YulIf","src":"4745:179:10"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"4944:4:10","nodeType":"YulIdentifier","src":"4944:4:10"},{"arguments":[{"arguments":[{"name":"newLen","nativeSrc":"4958:6:10","nodeType":"YulIdentifier","src":"4958:6:10"},{"kind":"number","nativeSrc":"4966:1:10","nodeType":"YulLiteral","src":"4966:1:10","type":"","value":"2"}],"functionName":{"name":"mul","nativeSrc":"4954:3:10","nodeType":"YulIdentifier","src":"4954:3:10"},"nativeSrc":"4954:14:10","nodeType":"YulFunctionCall","src":"4954:14:10"},{"kind":"number","nativeSrc":"4970:1:10","nodeType":"YulLiteral","src":"4970:1:10","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"4950:3:10","nodeType":"YulIdentifier","src":"4950:3:10"},"nativeSrc":"4950:22:10","nodeType":"YulFunctionCall","src":"4950:22:10"}],"functionName":{"name":"sstore","nativeSrc":"4937:6:10","nodeType":"YulIdentifier","src":"4937:6:10"},"nativeSrc":"4937:36:10","nodeType":"YulFunctionCall","src":"4937:36:10"},"nativeSrc":"4937:36:10","nodeType":"YulExpressionStatement","src":"4937:36:10"}]},"nativeSrc":"4365:618:10","nodeType":"YulCase","src":"4365:618:10","value":{"kind":"number","nativeSrc":"4370:1:10","nodeType":"YulLiteral","src":"4370:1:10","type":"","value":"1"}},{"body":{"nativeSrc":"5000:222:10","nodeType":"YulBlock","src":"5000:222:10","statements":[{"nativeSrc":"5014:14:10","nodeType":"YulVariableDeclaration","src":"5014:14:10","value":{"kind":"number","nativeSrc":"5027:1:10","nodeType":"YulLiteral","src":"5027:1:10","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"5018:5:10","nodeType":"YulTypedName","src":"5018:5:10","type":""}]},{"body":{"nativeSrc":"5051:67:10","nodeType":"YulBlock","src":"5051:67:10","statements":[{"nativeSrc":"5069:35:10","nodeType":"YulAssignment","src":"5069:35:10","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"5088:3:10","nodeType":"YulIdentifier","src":"5088:3:10"},{"name":"srcOffset","nativeSrc":"5093:9:10","nodeType":"YulIdentifier","src":"5093:9:10"}],"functionName":{"name":"add","nativeSrc":"5084:3:10","nodeType":"YulIdentifier","src":"5084:3:10"},"nativeSrc":"5084:19:10","nodeType":"YulFunctionCall","src":"5084:19:10"}],"functionName":{"name":"mload","nativeSrc":"5078:5:10","nodeType":"YulIdentifier","src":"5078:5:10"},"nativeSrc":"5078:26:10","nodeType":"YulFunctionCall","src":"5078:26:10"},"variableNames":[{"name":"value","nativeSrc":"5069:5:10","nodeType":"YulIdentifier","src":"5069:5:10"}]}]},"condition":{"name":"newLen","nativeSrc":"5044:6:10","nodeType":"YulIdentifier","src":"5044:6:10"},"nativeSrc":"5041:77:10","nodeType":"YulIf","src":"5041:77:10"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"5138:4:10","nodeType":"YulIdentifier","src":"5138:4:10"},{"arguments":[{"name":"value","nativeSrc":"5197:5:10","nodeType":"YulIdentifier","src":"5197:5:10"},{"name":"newLen","nativeSrc":"5204:6:10","nodeType":"YulIdentifier","src":"5204:6:10"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"5144:52:10","nodeType":"YulIdentifier","src":"5144:52:10"},"nativeSrc":"5144:67:10","nodeType":"YulFunctionCall","src":"5144:67:10"}],"functionName":{"name":"sstore","nativeSrc":"5131:6:10","nodeType":"YulIdentifier","src":"5131:6:10"},"nativeSrc":"5131:81:10","nodeType":"YulFunctionCall","src":"5131:81:10"},"nativeSrc":"5131:81:10","nodeType":"YulExpressionStatement","src":"5131:81:10"}]},"nativeSrc":"4992:230:10","nodeType":"YulCase","src":"4992:230:10","value":"default"}],"expression":{"arguments":[{"name":"newLen","nativeSrc":"4345:6:10","nodeType":"YulIdentifier","src":"4345:6:10"},{"kind":"number","nativeSrc":"4353:2:10","nodeType":"YulLiteral","src":"4353:2:10","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"4342:2:10","nodeType":"YulIdentifier","src":"4342:2:10"},"nativeSrc":"4342:14:10","nodeType":"YulFunctionCall","src":"4342:14:10"},"nativeSrc":"4335:887:10","nodeType":"YulSwitch","src":"4335:887:10"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nativeSrc":"3833:1395:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"3914:4:10","nodeType":"YulTypedName","src":"3914:4:10","type":""},{"name":"src","nativeSrc":"3920:3:10","nodeType":"YulTypedName","src":"3920:3:10","type":""}],"src":"3833:1395:10"},{"body":{"nativeSrc":"5279:81:10","nodeType":"YulBlock","src":"5279:81:10","statements":[{"nativeSrc":"5289:65:10","nodeType":"YulAssignment","src":"5289:65:10","value":{"arguments":[{"name":"value","nativeSrc":"5304:5:10","nodeType":"YulIdentifier","src":"5304:5:10"},{"kind":"number","nativeSrc":"5311:42:10","nodeType":"YulLiteral","src":"5311:42:10","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"5300:3:10","nodeType":"YulIdentifier","src":"5300:3:10"},"nativeSrc":"5300:54:10","nodeType":"YulFunctionCall","src":"5300:54:10"},"variableNames":[{"name":"cleaned","nativeSrc":"5289:7:10","nodeType":"YulIdentifier","src":"5289:7:10"}]}]},"name":"cleanup_t_uint160","nativeSrc":"5234:126:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5261:5:10","nodeType":"YulTypedName","src":"5261:5:10","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"5271:7:10","nodeType":"YulTypedName","src":"5271:7:10","type":""}],"src":"5234:126:10"},{"body":{"nativeSrc":"5411:51:10","nodeType":"YulBlock","src":"5411:51:10","statements":[{"nativeSrc":"5421:35:10","nodeType":"YulAssignment","src":"5421:35:10","value":{"arguments":[{"name":"value","nativeSrc":"5450:5:10","nodeType":"YulIdentifier","src":"5450:5:10"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"5432:17:10","nodeType":"YulIdentifier","src":"5432:17:10"},"nativeSrc":"5432:24:10","nodeType":"YulFunctionCall","src":"5432:24:10"},"variableNames":[{"name":"cleaned","nativeSrc":"5421:7:10","nodeType":"YulIdentifier","src":"5421:7:10"}]}]},"name":"cleanup_t_address","nativeSrc":"5366:96:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5393:5:10","nodeType":"YulTypedName","src":"5393:5:10","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"5403:7:10","nodeType":"YulTypedName","src":"5403:7:10","type":""}],"src":"5366:96:10"},{"body":{"nativeSrc":"5533:53:10","nodeType":"YulBlock","src":"5533:53:10","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"5550:3:10","nodeType":"YulIdentifier","src":"5550:3:10"},{"arguments":[{"name":"value","nativeSrc":"5573:5:10","nodeType":"YulIdentifier","src":"5573:5:10"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"5555:17:10","nodeType":"YulIdentifier","src":"5555:17:10"},"nativeSrc":"5555:24:10","nodeType":"YulFunctionCall","src":"5555:24:10"}],"functionName":{"name":"mstore","nativeSrc":"5543:6:10","nodeType":"YulIdentifier","src":"5543:6:10"},"nativeSrc":"5543:37:10","nodeType":"YulFunctionCall","src":"5543:37:10"},"nativeSrc":"5543:37:10","nodeType":"YulExpressionStatement","src":"5543:37:10"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"5468:118:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5521:5:10","nodeType":"YulTypedName","src":"5521:5:10","type":""},{"name":"pos","nativeSrc":"5528:3:10","nodeType":"YulTypedName","src":"5528:3:10","type":""}],"src":"5468:118:10"},{"body":{"nativeSrc":"5690:124:10","nodeType":"YulBlock","src":"5690:124:10","statements":[{"nativeSrc":"5700:26:10","nodeType":"YulAssignment","src":"5700:26:10","value":{"arguments":[{"name":"headStart","nativeSrc":"5712:9:10","nodeType":"YulIdentifier","src":"5712:9:10"},{"kind":"number","nativeSrc":"5723:2:10","nodeType":"YulLiteral","src":"5723:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5708:3:10","nodeType":"YulIdentifier","src":"5708:3:10"},"nativeSrc":"5708:18:10","nodeType":"YulFunctionCall","src":"5708:18:10"},"variableNames":[{"name":"tail","nativeSrc":"5700:4:10","nodeType":"YulIdentifier","src":"5700:4:10"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"5780:6:10","nodeType":"YulIdentifier","src":"5780:6:10"},{"arguments":[{"name":"headStart","nativeSrc":"5793:9:10","nodeType":"YulIdentifier","src":"5793:9:10"},{"kind":"number","nativeSrc":"5804:1:10","nodeType":"YulLiteral","src":"5804:1:10","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"5789:3:10","nodeType":"YulIdentifier","src":"5789:3:10"},"nativeSrc":"5789:17:10","nodeType":"YulFunctionCall","src":"5789:17:10"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"5736:43:10","nodeType":"YulIdentifier","src":"5736:43:10"},"nativeSrc":"5736:71:10","nodeType":"YulFunctionCall","src":"5736:71:10"},"nativeSrc":"5736:71:10","nodeType":"YulExpressionStatement","src":"5736:71:10"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"5592:222:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5662:9:10","nodeType":"YulTypedName","src":"5662:9:10","type":""},{"name":"value0","nativeSrc":"5674:6:10","nodeType":"YulTypedName","src":"5674:6:10","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5685:4:10","nodeType":"YulTypedName","src":"5685:4:10","type":""}],"src":"5592:222:10"},{"body":{"nativeSrc":"5848:152:10","nodeType":"YulBlock","src":"5848:152:10","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5865:1:10","nodeType":"YulLiteral","src":"5865:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"5868:77:10","nodeType":"YulLiteral","src":"5868:77:10","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"5858:6:10","nodeType":"YulIdentifier","src":"5858:6:10"},"nativeSrc":"5858:88:10","nodeType":"YulFunctionCall","src":"5858:88:10"},"nativeSrc":"5858:88:10","nodeType":"YulExpressionStatement","src":"5858:88:10"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"5962:1:10","nodeType":"YulLiteral","src":"5962:1:10","type":"","value":"4"},{"kind":"number","nativeSrc":"5965:4:10","nodeType":"YulLiteral","src":"5965:4:10","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"5955:6:10","nodeType":"YulIdentifier","src":"5955:6:10"},"nativeSrc":"5955:15:10","nodeType":"YulFunctionCall","src":"5955:15:10"},"nativeSrc":"5955:15:10","nodeType":"YulExpressionStatement","src":"5955:15:10"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"5986:1:10","nodeType":"YulLiteral","src":"5986:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"5989:4:10","nodeType":"YulLiteral","src":"5989:4:10","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"5979:6:10","nodeType":"YulIdentifier","src":"5979:6:10"},"nativeSrc":"5979:15:10","nodeType":"YulFunctionCall","src":"5979:15:10"},"nativeSrc":"5979:15:10","nodeType":"YulExpressionStatement","src":"5979:15:10"}]},"name":"panic_error_0x11","nativeSrc":"5820:180:10","nodeType":"YulFunctionDefinition","src":"5820:180:10"},{"body":{"nativeSrc":"6050:147:10","nodeType":"YulBlock","src":"6050:147:10","statements":[{"nativeSrc":"6060:25:10","nodeType":"YulAssignment","src":"6060:25:10","value":{"arguments":[{"name":"x","nativeSrc":"6083:1:10","nodeType":"YulIdentifier","src":"6083:1:10"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"6065:17:10","nodeType":"YulIdentifier","src":"6065:17:10"},"nativeSrc":"6065:20:10","nodeType":"YulFunctionCall","src":"6065:20:10"},"variableNames":[{"name":"x","nativeSrc":"6060:1:10","nodeType":"YulIdentifier","src":"6060:1:10"}]},{"nativeSrc":"6094:25:10","nodeType":"YulAssignment","src":"6094:25:10","value":{"arguments":[{"name":"y","nativeSrc":"6117:1:10","nodeType":"YulIdentifier","src":"6117:1:10"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"6099:17:10","nodeType":"YulIdentifier","src":"6099:17:10"},"nativeSrc":"6099:20:10","nodeType":"YulFunctionCall","src":"6099:20:10"},"variableNames":[{"name":"y","nativeSrc":"6094:1:10","nodeType":"YulIdentifier","src":"6094:1:10"}]},{"nativeSrc":"6128:16:10","nodeType":"YulAssignment","src":"6128:16:10","value":{"arguments":[{"name":"x","nativeSrc":"6139:1:10","nodeType":"YulIdentifier","src":"6139:1:10"},{"name":"y","nativeSrc":"6142:1:10","nodeType":"YulIdentifier","src":"6142:1:10"}],"functionName":{"name":"add","nativeSrc":"6135:3:10","nodeType":"YulIdentifier","src":"6135:3:10"},"nativeSrc":"6135:9:10","nodeType":"YulFunctionCall","src":"6135:9:10"},"variableNames":[{"name":"sum","nativeSrc":"6128:3:10","nodeType":"YulIdentifier","src":"6128:3:10"}]},{"body":{"nativeSrc":"6168:22:10","nodeType":"YulBlock","src":"6168:22:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"6170:16:10","nodeType":"YulIdentifier","src":"6170:16:10"},"nativeSrc":"6170:18:10","nodeType":"YulFunctionCall","src":"6170:18:10"},"nativeSrc":"6170:18:10","nodeType":"YulExpressionStatement","src":"6170:18:10"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"6160:1:10","nodeType":"YulIdentifier","src":"6160:1:10"},{"name":"sum","nativeSrc":"6163:3:10","nodeType":"YulIdentifier","src":"6163:3:10"}],"functionName":{"name":"gt","nativeSrc":"6157:2:10","nodeType":"YulIdentifier","src":"6157:2:10"},"nativeSrc":"6157:10:10","nodeType":"YulFunctionCall","src":"6157:10:10"},"nativeSrc":"6154:36:10","nodeType":"YulIf","src":"6154:36:10"}]},"name":"checked_add_t_uint256","nativeSrc":"6006:191:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"6037:1:10","nodeType":"YulTypedName","src":"6037:1:10","type":""},{"name":"y","nativeSrc":"6040:1:10","nodeType":"YulTypedName","src":"6040:1:10","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"6046:3:10","nodeType":"YulTypedName","src":"6046:3:10","type":""}],"src":"6006:191:10"},{"body":{"nativeSrc":"6268:53:10","nodeType":"YulBlock","src":"6268:53:10","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"6285:3:10","nodeType":"YulIdentifier","src":"6285:3:10"},{"arguments":[{"name":"value","nativeSrc":"6308:5:10","nodeType":"YulIdentifier","src":"6308:5:10"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"6290:17:10","nodeType":"YulIdentifier","src":"6290:17:10"},"nativeSrc":"6290:24:10","nodeType":"YulFunctionCall","src":"6290:24:10"}],"functionName":{"name":"mstore","nativeSrc":"6278:6:10","nodeType":"YulIdentifier","src":"6278:6:10"},"nativeSrc":"6278:37:10","nodeType":"YulFunctionCall","src":"6278:37:10"},"nativeSrc":"6278:37:10","nodeType":"YulExpressionStatement","src":"6278:37:10"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"6203:118:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6256:5:10","nodeType":"YulTypedName","src":"6256:5:10","type":""},{"name":"pos","nativeSrc":"6263:3:10","nodeType":"YulTypedName","src":"6263:3:10","type":""}],"src":"6203:118:10"},{"body":{"nativeSrc":"6481:288:10","nodeType":"YulBlock","src":"6481:288:10","statements":[{"nativeSrc":"6491:26:10","nodeType":"YulAssignment","src":"6491:26:10","value":{"arguments":[{"name":"headStart","nativeSrc":"6503:9:10","nodeType":"YulIdentifier","src":"6503:9:10"},{"kind":"number","nativeSrc":"6514:2:10","nodeType":"YulLiteral","src":"6514:2:10","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"6499:3:10","nodeType":"YulIdentifier","src":"6499:3:10"},"nativeSrc":"6499:18:10","nodeType":"YulFunctionCall","src":"6499:18:10"},"variableNames":[{"name":"tail","nativeSrc":"6491:4:10","nodeType":"YulIdentifier","src":"6491:4:10"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"6571:6:10","nodeType":"YulIdentifier","src":"6571:6:10"},{"arguments":[{"name":"headStart","nativeSrc":"6584:9:10","nodeType":"YulIdentifier","src":"6584:9:10"},{"kind":"number","nativeSrc":"6595:1:10","nodeType":"YulLiteral","src":"6595:1:10","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"6580:3:10","nodeType":"YulIdentifier","src":"6580:3:10"},"nativeSrc":"6580:17:10","nodeType":"YulFunctionCall","src":"6580:17:10"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"6527:43:10","nodeType":"YulIdentifier","src":"6527:43:10"},"nativeSrc":"6527:71:10","nodeType":"YulFunctionCall","src":"6527:71:10"},"nativeSrc":"6527:71:10","nodeType":"YulExpressionStatement","src":"6527:71:10"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"6652:6:10","nodeType":"YulIdentifier","src":"6652:6:10"},{"arguments":[{"name":"headStart","nativeSrc":"6665:9:10","nodeType":"YulIdentifier","src":"6665:9:10"},{"kind":"number","nativeSrc":"6676:2:10","nodeType":"YulLiteral","src":"6676:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6661:3:10","nodeType":"YulIdentifier","src":"6661:3:10"},"nativeSrc":"6661:18:10","nodeType":"YulFunctionCall","src":"6661:18:10"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"6608:43:10","nodeType":"YulIdentifier","src":"6608:43:10"},"nativeSrc":"6608:72:10","nodeType":"YulFunctionCall","src":"6608:72:10"},"nativeSrc":"6608:72:10","nodeType":"YulExpressionStatement","src":"6608:72:10"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"6734:6:10","nodeType":"YulIdentifier","src":"6734:6:10"},{"arguments":[{"name":"headStart","nativeSrc":"6747:9:10","nodeType":"YulIdentifier","src":"6747:9:10"},{"kind":"number","nativeSrc":"6758:2:10","nodeType":"YulLiteral","src":"6758:2:10","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"6743:3:10","nodeType":"YulIdentifier","src":"6743:3:10"},"nativeSrc":"6743:18:10","nodeType":"YulFunctionCall","src":"6743:18:10"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"6690:43:10","nodeType":"YulIdentifier","src":"6690:43:10"},"nativeSrc":"6690:72:10","nodeType":"YulFunctionCall","src":"6690:72:10"},"nativeSrc":"6690:72:10","nodeType":"YulExpressionStatement","src":"6690:72:10"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"6327:442:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6437:9:10","nodeType":"YulTypedName","src":"6437:9:10","type":""},{"name":"value2","nativeSrc":"6449:6:10","nodeType":"YulTypedName","src":"6449:6:10","type":""},{"name":"value1","nativeSrc":"6457:6:10","nodeType":"YulTypedName","src":"6457:6:10","type":""},{"name":"value0","nativeSrc":"6465:6:10","nodeType":"YulTypedName","src":"6465:6:10","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6476:4:10","nodeType":"YulTypedName","src":"6476:4:10","type":""}],"src":"6327:442:10"},{"body":{"nativeSrc":"6873:124:10","nodeType":"YulBlock","src":"6873:124:10","statements":[{"nativeSrc":"6883:26:10","nodeType":"YulAssignment","src":"6883:26:10","value":{"arguments":[{"name":"headStart","nativeSrc":"6895:9:10","nodeType":"YulIdentifier","src":"6895:9:10"},{"kind":"number","nativeSrc":"6906:2:10","nodeType":"YulLiteral","src":"6906:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6891:3:10","nodeType":"YulIdentifier","src":"6891:3:10"},"nativeSrc":"6891:18:10","nodeType":"YulFunctionCall","src":"6891:18:10"},"variableNames":[{"name":"tail","nativeSrc":"6883:4:10","nodeType":"YulIdentifier","src":"6883:4:10"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"6963:6:10","nodeType":"YulIdentifier","src":"6963:6:10"},{"arguments":[{"name":"headStart","nativeSrc":"6976:9:10","nodeType":"YulIdentifier","src":"6976:9:10"},{"kind":"number","nativeSrc":"6987:1:10","nodeType":"YulLiteral","src":"6987:1:10","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"6972:3:10","nodeType":"YulIdentifier","src":"6972:3:10"},"nativeSrc":"6972:17:10","nodeType":"YulFunctionCall","src":"6972:17:10"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"6919:43:10","nodeType":"YulIdentifier","src":"6919:43:10"},"nativeSrc":"6919:71:10","nodeType":"YulFunctionCall","src":"6919:71:10"},"nativeSrc":"6919:71:10","nodeType":"YulExpressionStatement","src":"6919:71:10"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"6775:222:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6845:9:10","nodeType":"YulTypedName","src":"6845:9:10","type":""},{"name":"value0","nativeSrc":"6857:6:10","nodeType":"YulTypedName","src":"6857:6:10","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6868:4:10","nodeType":"YulTypedName","src":"6868:4:10","type":""}],"src":"6775:222:10"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":10,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH7 0x38D7EA4C68000 PUSH1 0x6 SSTORE PUSH8 0x10A741A462780000 PUSH1 0x7 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x27 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4445414C20546F6B656E00000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4445414C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0xA4 SWAP2 SWAP1 PUSH2 0x71B JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0xB4 SWAP2 SWAP1 PUSH2 0x71B JUMP JUMPDEST POP POP POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x129 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x120 SWAP2 SWAP1 PUSH2 0x82E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x138 DUP2 PUSH2 0x158 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0x153 CALLER PUSH10 0xD3C21BCECCEDA1000000 PUSH2 0x21E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x90D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x290 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x287 SWAP2 SWAP1 PUSH2 0x82E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2A2 PUSH1 0x0 DUP4 DUP4 PUSH2 0x2A6 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2F8 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2EC SWAP2 SWAP1 PUSH2 0x878 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x3CB JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x384 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x8BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x414 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x461 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x4BE SWAP2 SWAP1 PUSH2 0x8F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x54C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x55F JUMPI PUSH2 0x55E PUSH2 0x505 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x5C7 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x58A JUMP JUMPDEST PUSH2 0x5D1 DUP7 DUP4 PUSH2 0x58A JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x618 PUSH2 0x613 PUSH2 0x60E DUP5 PUSH2 0x5E9 JUMP JUMPDEST PUSH2 0x5F3 JUMP JUMPDEST PUSH2 0x5E9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x632 DUP4 PUSH2 0x5FD JUMP JUMPDEST PUSH2 0x646 PUSH2 0x63E DUP3 PUSH2 0x61F JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x597 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x65B PUSH2 0x64E JUMP JUMPDEST PUSH2 0x666 DUP2 DUP5 DUP5 PUSH2 0x629 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x68A JUMPI PUSH2 0x67F PUSH1 0x0 DUP3 PUSH2 0x653 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x66C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x6CF JUMPI PUSH2 0x6A0 DUP2 PUSH2 0x565 JUMP JUMPDEST PUSH2 0x6A9 DUP5 PUSH2 0x57A JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x6B8 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x6CC PUSH2 0x6C4 DUP6 PUSH2 0x57A JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x66B JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6F2 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x6D4 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x70B DUP4 DUP4 PUSH2 0x6E1 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x724 DUP3 PUSH2 0x4CB JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x73D JUMPI PUSH2 0x73C PUSH2 0x4D6 JUMP JUMPDEST JUMPDEST PUSH2 0x747 DUP3 SLOAD PUSH2 0x534 JUMP JUMPDEST PUSH2 0x752 DUP3 DUP3 DUP6 PUSH2 0x68E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x785 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x773 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x77D DUP6 DUP3 PUSH2 0x6FF JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x7E5 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x793 DUP7 PUSH2 0x565 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x7BB JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x796 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x7D8 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x7D4 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x6E1 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x818 DUP3 PUSH2 0x7ED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x828 DUP2 PUSH2 0x80D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x843 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x81F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x883 DUP3 PUSH2 0x5E9 JUMP JUMPDEST SWAP2 POP PUSH2 0x88E DUP4 PUSH2 0x5E9 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x8A6 JUMPI PUSH2 0x8A5 PUSH2 0x849 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x8B5 DUP2 PUSH2 0x5E9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x8D0 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x81F JUMP JUMPDEST PUSH2 0x8DD PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x8AC JUMP JUMPDEST PUSH2 0x8EA PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x8AC JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x907 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x8AC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B8D DUP1 PUSH2 0x91C PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x11F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x95D89B41 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3BA JUMPI DUP1 PUSH4 0xE086E5EC EQ PUSH2 0x3F7 JUMPI DUP1 PUSH4 0xEB91D37E EQ PUSH2 0x40E JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x439 JUMPI DUP1 PUSH4 0xFD5BAA88 EQ PUSH2 0x462 JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2F2 JUMPI DUP1 PUSH4 0xA6F2AE3A EQ PUSH2 0x31D JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x327 JUMPI DUP1 PUSH4 0xC7876EA4 EQ PUSH2 0x364 JUMPI DUP1 PUSH4 0xCE2A9F62 EQ PUSH2 0x38F JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x34436707 GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x34436707 EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0x6E97B47B EQ PUSH2 0x248 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x273 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2B0 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2C7 JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x124 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x18C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1B7 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1F4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x130 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x139 PUSH2 0x48B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146 SWAP2 SWAP1 PUSH2 0x13C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x176 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x171 SWAP2 SWAP1 PUSH2 0x147C JUMP JUMPDEST PUSH2 0x51D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x183 SWAP2 SWAP1 PUSH2 0x14D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x198 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A1 PUSH2 0x540 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AE SWAP2 SWAP1 PUSH2 0x1501 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D9 SWAP2 SWAP1 PUSH2 0x151C JUMP JUMPDEST PUSH2 0x54A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EB SWAP2 SWAP1 PUSH2 0x14D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x200 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x209 PUSH2 0x579 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x216 SWAP2 SWAP1 PUSH2 0x158B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x246 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x241 SWAP2 SWAP1 PUSH2 0x15A6 JUMP JUMPDEST PUSH2 0x582 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x254 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25D PUSH2 0x5DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26A SWAP2 SWAP1 PUSH2 0x1501 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x29A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x295 SWAP2 SWAP1 PUSH2 0x15D3 JUMP JUMPDEST PUSH2 0x5E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A7 SWAP2 SWAP1 PUSH2 0x1501 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C5 PUSH2 0x62D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DC PUSH2 0x641 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E9 SWAP2 SWAP1 PUSH2 0x160F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x307 PUSH2 0x66B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x314 SWAP2 SWAP1 PUSH2 0x13C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x325 PUSH2 0x6FD JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x333 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x34E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x349 SWAP2 SWAP1 PUSH2 0x147C JUMP JUMPDEST PUSH2 0x8B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35B SWAP2 SWAP1 PUSH2 0x14D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x370 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x379 PUSH2 0x8D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x386 SWAP2 SWAP1 PUSH2 0x1501 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A4 PUSH2 0x8DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B1 SWAP2 SWAP1 PUSH2 0x1501 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3DC SWAP2 SWAP1 PUSH2 0x162A JUMP JUMPDEST PUSH2 0x8E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3EE SWAP2 SWAP1 PUSH2 0x1501 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x403 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x40C PUSH2 0x967 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x41A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x423 PUSH2 0xA6E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x430 SWAP2 SWAP1 PUSH2 0x1501 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x445 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x460 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45B SWAP2 SWAP1 PUSH2 0x15D3 JUMP JUMPDEST PUSH2 0xB2B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x46E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x489 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x484 SWAP2 SWAP1 PUSH2 0x15A6 JUMP JUMPDEST PUSH2 0xBB1 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x49A SWAP1 PUSH2 0x1699 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4C6 SWAP1 PUSH2 0x1699 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x513 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4E8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x513 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4F6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x528 PUSH2 0xBC3 JUMP JUMPDEST SWAP1 POP PUSH2 0x535 DUP2 DUP6 DUP6 PUSH2 0xBCB JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x555 PUSH2 0xBC3 JUMP JUMPDEST SWAP1 POP PUSH2 0x562 DUP6 DUP3 DUP6 PUSH2 0xBDD JUMP JUMPDEST PUSH2 0x56D DUP6 DUP6 DUP6 PUSH2 0xC72 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x58A PUSH2 0xD66 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 LT ISZERO PUSH2 0x5D5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5CC SWAP1 PUSH2 0x1716 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x635 PUSH2 0xD66 JUMP JUMPDEST PUSH2 0x63F PUSH1 0x0 PUSH2 0xDED JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x67A SWAP1 PUSH2 0x1699 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6A6 SWAP1 PUSH2 0x1699 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6F3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6C8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6F3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6D6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLVALUE GT PUSH2 0x740 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x737 SWAP1 PUSH2 0x1782 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x74A PUSH2 0xA6E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x78F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x786 SWAP1 PUSH2 0x17EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xDE0B6B3A7640000 CALLVALUE PUSH2 0x7A6 SWAP2 SWAP1 PUSH2 0x183D JUMP JUMPDEST PUSH2 0x7B0 SWAP2 SWAP1 PUSH2 0x18AE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x7BC PUSH2 0x540 JUMP JUMPDEST SWAP1 POP PUSH11 0x84595161401484A000000 DUP3 DUP3 PUSH2 0x7D6 SWAP2 SWAP1 PUSH2 0x18DF JUMP JUMPDEST GT ISZERO PUSH2 0x7F6 JUMPI DUP1 PUSH11 0x84595161401484A000000 PUSH2 0x7F3 SWAP2 SWAP1 PUSH2 0x1913 JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x839 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x830 SWAP1 PUSH2 0x19B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLVALUE PUSH1 0x8 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x84B SWAP2 SWAP1 PUSH2 0x18DF JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x85C CALLER DUP4 PUSH2 0xEB3 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8FAFEBCAF9D154343DAD25669BFA277F4FBACD7AC6B0C4FED522580E040A0F33 CALLVALUE DUP5 PUSH1 0x40 MLOAD PUSH2 0x8A4 SWAP3 SWAP2 SWAP1 PUSH2 0x19D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x8BC PUSH2 0xBC3 JUMP JUMPDEST SWAP1 POP PUSH2 0x8C9 DUP2 DUP6 DUP6 PUSH2 0xC72 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x96F PUSH2 0xD66 JUMP JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x9B7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9AE SWAP1 PUSH2 0x1A4E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x9C1 PUSH2 0x641 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x9E4 SWAP1 PUSH2 0x1A9F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xA21 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xA26 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xA6A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA61 SWAP1 PUSH2 0x1B00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xA79 PUSH2 0x540 JUMP JUMPDEST SWAP1 POP PUSH11 0x84595161401484A000000 DUP2 LT PUSH2 0xAB6 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 POP POP PUSH2 0xB28 JUMP JUMPDEST PUSH1 0x0 PUSH11 0x84595161401484A000000 PUSH8 0xDE0B6B3A7640000 DUP4 PUSH2 0xAD8 SWAP2 SWAP1 PUSH2 0x183D JUMP JUMPDEST PUSH2 0xAE2 SWAP2 SWAP1 PUSH2 0x18AE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 DUP1 PUSH1 0x7 SLOAD PUSH2 0xAFD SWAP2 SWAP1 PUSH2 0x1913 JUMP JUMPDEST DUP4 PUSH2 0xB08 SWAP2 SWAP1 PUSH2 0x183D JUMP JUMPDEST PUSH2 0xB12 SWAP2 SWAP1 PUSH2 0x18AE JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0xB1F SWAP2 SWAP1 PUSH2 0x18DF JUMP JUMPDEST SWAP1 POP DUP1 SWAP4 POP POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xB33 PUSH2 0xD66 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBA5 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB9C SWAP2 SWAP1 PUSH2 0x160F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBAE DUP2 PUSH2 0xDED JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xBB9 PUSH2 0xD66 JUMP JUMPDEST DUP1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xBD8 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xF35 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBE9 DUP5 DUP5 PUSH2 0x8E0 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0xC6C JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xC5C JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC53 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC6B DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0xF35 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCE4 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCDB SWAP2 SWAP1 PUSH2 0x160F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD56 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD4D SWAP2 SWAP1 PUSH2 0x160F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD61 DUP4 DUP4 DUP4 PUSH2 0x110C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xD6E PUSH2 0xBC3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD8C PUSH2 0x641 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDEB JUMPI PUSH2 0xDAF PUSH2 0xBC3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDE2 SWAP2 SWAP1 PUSH2 0x160F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF25 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF1C SWAP2 SWAP1 PUSH2 0x160F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF31 PUSH1 0x0 DUP4 DUP4 PUSH2 0x110C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFA7 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF9E SWAP2 SWAP1 PUSH2 0x160F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1019 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1010 SWAP2 SWAP1 PUSH2 0x160F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1106 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x10FD SWAP2 SWAP1 PUSH2 0x1501 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x115E JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1152 SWAP2 SWAP1 PUSH2 0x18DF JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1231 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x11EA JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11E1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x127A JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x12C7 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1324 SWAP2 SWAP1 PUSH2 0x1501 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x136B JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1350 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1393 DUP3 PUSH2 0x1331 JUMP JUMPDEST PUSH2 0x139D DUP2 DUP6 PUSH2 0x133C JUMP JUMPDEST SWAP4 POP PUSH2 0x13AD DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x134D JUMP JUMPDEST PUSH2 0x13B6 DUP2 PUSH2 0x1377 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x13DB DUP2 DUP5 PUSH2 0x1388 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1413 DUP3 PUSH2 0x13E8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1423 DUP2 PUSH2 0x1408 JUMP JUMPDEST DUP2 EQ PUSH2 0x142E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1440 DUP2 PUSH2 0x141A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1459 DUP2 PUSH2 0x1446 JUMP JUMPDEST DUP2 EQ PUSH2 0x1464 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1476 DUP2 PUSH2 0x1450 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1493 JUMPI PUSH2 0x1492 PUSH2 0x13E3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x14A1 DUP6 DUP3 DUP7 ADD PUSH2 0x1431 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x14B2 DUP6 DUP3 DUP7 ADD PUSH2 0x1467 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14D1 DUP2 PUSH2 0x14BC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14EC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x14C8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x14FB DUP2 PUSH2 0x1446 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1516 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x14F2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1535 JUMPI PUSH2 0x1534 PUSH2 0x13E3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1543 DUP7 DUP3 DUP8 ADD PUSH2 0x1431 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1554 DUP7 DUP3 DUP8 ADD PUSH2 0x1431 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1565 DUP7 DUP3 DUP8 ADD PUSH2 0x1467 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1585 DUP2 PUSH2 0x156F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15A0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x157C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15BC JUMPI PUSH2 0x15BB PUSH2 0x13E3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x15CA DUP5 DUP3 DUP6 ADD PUSH2 0x1467 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15E9 JUMPI PUSH2 0x15E8 PUSH2 0x13E3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x15F7 DUP5 DUP3 DUP6 ADD PUSH2 0x1431 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1609 DUP2 PUSH2 0x1408 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1624 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1600 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1641 JUMPI PUSH2 0x1640 PUSH2 0x13E3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x164F DUP6 DUP3 DUP7 ADD PUSH2 0x1431 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1660 DUP6 DUP3 DUP7 ADD PUSH2 0x1431 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x16B1 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x16C4 JUMPI PUSH2 0x16C3 PUSH2 0x166A JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x466163746F72206D757374206265206174206C6561737420312E300000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1700 PUSH1 0x1B DUP4 PUSH2 0x133C JUMP JUMPDEST SWAP2 POP PUSH2 0x170B DUP3 PUSH2 0x16CA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x172F DUP2 PUSH2 0x16F3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4D7573742073656E642045544820746F2062757920746F6B656E730000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x176C PUSH1 0x1B DUP4 PUSH2 0x133C JUMP JUMPDEST SWAP2 POP PUSH2 0x1777 DUP3 PUSH2 0x1736 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x179B DUP2 PUSH2 0x175F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x50726963652063616C63756C6174696F6E206572726F72000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17D8 PUSH1 0x17 DUP4 PUSH2 0x133C JUMP JUMPDEST SWAP2 POP PUSH2 0x17E3 DUP3 PUSH2 0x17A2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1807 DUP2 PUSH2 0x17CB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1848 DUP3 PUSH2 0x1446 JUMP JUMPDEST SWAP2 POP PUSH2 0x1853 DUP4 PUSH2 0x1446 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1861 DUP2 PUSH2 0x1446 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1878 JUMPI PUSH2 0x1877 PUSH2 0x180E JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x18B9 DUP3 PUSH2 0x1446 JUMP JUMPDEST SWAP2 POP PUSH2 0x18C4 DUP4 PUSH2 0x1446 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x18D4 JUMPI PUSH2 0x18D3 PUSH2 0x187F JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18EA DUP3 PUSH2 0x1446 JUMP JUMPDEST SWAP2 POP PUSH2 0x18F5 DUP4 PUSH2 0x1446 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x190D JUMPI PUSH2 0x190C PUSH2 0x180E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x191E DUP3 PUSH2 0x1446 JUMP JUMPDEST SWAP2 POP PUSH2 0x1929 DUP4 PUSH2 0x1446 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1941 JUMPI PUSH2 0x1940 PUSH2 0x180E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F756768204554482073656E7420746F2062757920616E792074 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F6B656E73000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19A3 PUSH1 0x25 DUP4 PUSH2 0x133C JUMP JUMPDEST SWAP2 POP PUSH2 0x19AE DUP3 PUSH2 0x1947 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x19D2 DUP2 PUSH2 0x1996 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x19EE PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x14F2 JUMP JUMPDEST PUSH2 0x19FB PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x14F2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E6F2045544820746F2077697468647261770000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A38 PUSH1 0x12 DUP4 PUSH2 0x133C JUMP JUMPDEST SWAP2 POP PUSH2 0x1A43 DUP3 PUSH2 0x1A02 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1A67 DUP2 PUSH2 0x1A2B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A89 PUSH1 0x0 DUP4 PUSH2 0x1A6E JUMP JUMPDEST SWAP2 POP PUSH2 0x1A94 DUP3 PUSH2 0x1A79 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AAA DUP3 PUSH2 0x1A7C JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455448207472616E73666572206661696C656400000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AEA PUSH1 0x13 DUP4 PUSH2 0x133C JUMP JUMPDEST SWAP2 POP PUSH2 0x1AF5 DUP3 PUSH2 0x1AB4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B19 DUP2 PUSH2 0x1ADD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1B35 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1600 JUMP JUMPDEST PUSH2 0x1B42 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x14F2 JUMP JUMPDEST PUSH2 0x1B4F PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x14F2 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH13 0x67E1AFB7515215D4E5071634E0 DUP1 0xC8 BLOBBASEFEE 0xD6 PUSH10 0x3EAEC38B3B3312D2F410 0xE8 PUSH28 0x6764736F6C634300081C003300000000000000000000000000000000 ","sourceMap":"325:3323:9:-:0;;;420:11;393:38;;539:10;502:47;;924:167;;;;;;;;;;974:10;1601:113:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1675:5;1667;:13;;;;;;:::i;:::-;;1700:7;1690;:17;;;;;;:::i;:::-;;1601:113;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1051:33:9::2;1057:10;686:16;1051:5;;;:33;;:::i;:::-;325:3323:::0;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7458:208:2:-;7547:1;7528:21;;:7;:21;;;7524:91;;7601:1;7572:32;;;;;;;;;;;:::i;:::-;;;;;;;;7524:91;7624:35;7640:1;7644:7;7653:5;7624:7;;;:35;;:::i;:::-;7458:208;;:::o;6008:1107::-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;7:99:10:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;5234:126::-;5271:7;5311:42;5304:5;5300:54;5289:65;;5234:126;;;:::o;5366:96::-;5403:7;5432:24;5450:5;5432:24;:::i;:::-;5421:35;;5366:96;;;:::o;5468:118::-;5555:24;5573:5;5555:24;:::i;:::-;5550:3;5543:37;5468:118;;:::o;5592:222::-;5685:4;5723:2;5712:9;5708:18;5700:26;;5736:71;5804:1;5793:9;5789:17;5780:6;5736:71;:::i;:::-;5592:222;;;;:::o;5820:180::-;5868:77;5865:1;5858:88;5965:4;5962:1;5955:15;5989:4;5986:1;5979:15;6006:191;6046:3;6065:20;6083:1;6065:20;:::i;:::-;6060:25;;6099:20;6117:1;6099:20;:::i;:::-;6094:25;;6142:1;6139;6135:9;6128:16;;6163:3;6160:1;6157:10;6154:36;;;6170:18;;:::i;:::-;6154:36;6006:191;;;;:::o;6203:118::-;6290:24;6308:5;6290:24;:::i;:::-;6285:3;6278:37;6203:118;;:::o;6327:442::-;6476:4;6514:2;6503:9;6499:18;6491:26;;6527:71;6595:1;6584:9;6580:17;6571:6;6527:71;:::i;:::-;6608:72;6676:2;6665:9;6661:18;6652:6;6608:72;:::i;:::-;6690;6758:2;6747:9;6743:18;6734:6;6690:72;:::i;:::-;6327:442;;;;;;:::o;6775:222::-;6868:4;6906:2;6895:9;6891:18;6883:26;;6919:71;6987:1;6976:9;6972:17;6963:6;6919:71;:::i;:::-;6775:222;;;;:::o;325:3323:9:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_approve_690":{"entryPoint":3019,"id":690,"parameterSlots":3,"returnSlots":0},"@_approve_750":{"entryPoint":3893,"id":750,"parameterSlots":4,"returnSlots":0},"@_checkOwner_84":{"entryPoint":3430,"id":84,"parameterSlots":0,"returnSlots":0},"@_mint_639":{"entryPoint":3763,"id":639,"parameterSlots":2,"returnSlots":0},"@_msgSender_915":{"entryPoint":3011,"id":915,"parameterSlots":0,"returnSlots":1},"@_spendAllowance_798":{"entryPoint":3037,"id":798,"parameterSlots":3,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":3565,"id":146,"parameterSlots":1,"returnSlots":0},"@_transfer_529":{"entryPoint":3186,"id":529,"parameterSlots":3,"returnSlots":0},"@_update_606":{"entryPoint":4364,"id":606,"parameterSlots":3,"returnSlots":0},"@allowance_426":{"entryPoint":2272,"id":426,"parameterSlots":2,"returnSlots":1},"@approve_450":{"entryPoint":1309,"id":450,"parameterSlots":2,"returnSlots":1},"@balanceOf_385":{"entryPoint":1509,"id":385,"parameterSlots":1,"returnSlots":1},"@basePrice_4369":{"entryPoint":2260,"id":4369,"parameterSlots":0,"returnSlots":0},"@buy_4539":{"entryPoint":1789,"id":4539,"parameterSlots":0,"returnSlots":0},"@decimals_363":{"entryPoint":1401,"id":363,"parameterSlots":0,"returnSlots":1},"@getCurrentPrice_4460":{"entryPoint":2670,"id":4460,"parameterSlots":0,"returnSlots":1},"@name_345":{"entryPoint":1163,"id":345,"parameterSlots":0,"returnSlots":1},"@owner_67":{"entryPoint":1601,"id":67,"parameterSlots":0,"returnSlots":1},"@priceIncreaseFactor_4374":{"entryPoint":1503,"id":4374,"parameterSlots":0,"returnSlots":0},"@renounceOwnership_98":{"entryPoint":1581,"id":98,"parameterSlots":0,"returnSlots":0},"@symbol_354":{"entryPoint":1643,"id":354,"parameterSlots":0,"returnSlots":1},"@totalEthCollected_4376":{"entryPoint":2266,"id":4376,"parameterSlots":0,"returnSlots":0},"@totalSupply_372":{"entryPoint":1344,"id":372,"parameterSlots":0,"returnSlots":1},"@transferFrom_482":{"entryPoint":1354,"id":482,"parameterSlots":3,"returnSlots":1},"@transferOwnership_126":{"entryPoint":2859,"id":126,"parameterSlots":1,"returnSlots":0},"@transfer_409":{"entryPoint":2225,"id":409,"parameterSlots":2,"returnSlots":1},"@updateBasePrice_4592":{"entryPoint":2993,"id":4592,"parameterSlots":1,"returnSlots":0},"@updatePriceIncreaseFactor_4612":{"entryPoint":1410,"id":4612,"parameterSlots":1,"returnSlots":0},"@withdrawETH_4579":{"entryPoint":2407,"id":4579,"parameterSlots":0,"returnSlots":0},"abi_decode_t_address":{"entryPoint":5169,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":5223,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":5587,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":5674,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":5404,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":5244,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256":{"entryPoint":5542,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":5632,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":5320,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":5000,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_2635e0c891a3ce0373fd39c7acb0b02d0a3d29985ab4f087fed4e787bad23846_to_t_string_memory_ptr_fromStack":{"entryPoint":6550,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_30a3169537af6a19e878efd19359816e5050657af8f1bfb68949c44684f913de_to_t_string_memory_ptr_fromStack":{"entryPoint":5983,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_4d24bb6fdc16272faa3d9a86eb0993aea2ad4ea79256f2a3f0b4914367982e44_to_t_string_memory_ptr_fromStack":{"entryPoint":6091,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_98d47a114e9ec161988edab8b58a654f584563d48ca8de8bde3ee7b5f933c731_to_t_string_memory_ptr_fromStack":{"entryPoint":5875,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9df16c5c3e9f487854502591282f9dbd29044f6d3f3bf4c9daa5d3460486dd95_to_t_string_memory_ptr_fromStack":{"entryPoint":6699,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":6780,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd_to_t_string_memory_ptr_fromStack":{"entryPoint":6877,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":5362,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":5500,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":6815,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":5647,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":6944,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":5335,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5057,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_2635e0c891a3ce0373fd39c7acb0b02d0a3d29985ab4f087fed4e787bad23846__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6585,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_30a3169537af6a19e878efd19359816e5050657af8f1bfb68949c44684f913de__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6018,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4d24bb6fdc16272faa3d9a86eb0993aea2ad4ea79256f2a3f0b4914367982e44__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6126,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_98d47a114e9ec161988edab8b58a654f584563d48ca8de8bde3ee7b5f933c731__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5910,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9df16c5c3e9f487854502591282f9dbd29044f6d3f3bf4c9daa5d3460486dd95__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6734,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6912,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":5377,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":6617,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":5515,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":4913,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":6766,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":4924,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":6367,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":6318,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":6205,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":6419,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":5128,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":5308,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":5096,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":5190,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":5487,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":4941,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":5785,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":6158,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":6271,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":5738,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":5091,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":4983,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_2635e0c891a3ce0373fd39c7acb0b02d0a3d29985ab4f087fed4e787bad23846":{"entryPoint":6471,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_30a3169537af6a19e878efd19359816e5050657af8f1bfb68949c44684f913de":{"entryPoint":5942,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_4d24bb6fdc16272faa3d9a86eb0993aea2ad4ea79256f2a3f0b4914367982e44":{"entryPoint":6050,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_98d47a114e9ec161988edab8b58a654f584563d48ca8de8bde3ee7b5f933c731":{"entryPoint":5834,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9df16c5c3e9f487854502591282f9dbd29044f6d3f3bf4c9daa5d3460486dd95":{"entryPoint":6658,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470":{"entryPoint":6777,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd":{"entryPoint":6836,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":5146,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":5200,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:15996:10","nodeType":"YulBlock","src":"0:15996:10","statements":[{"body":{"nativeSrc":"66:40:10","nodeType":"YulBlock","src":"66:40:10","statements":[{"nativeSrc":"77:22:10","nodeType":"YulAssignment","src":"77:22:10","value":{"arguments":[{"name":"value","nativeSrc":"93:5:10","nodeType":"YulIdentifier","src":"93:5:10"}],"functionName":{"name":"mload","nativeSrc":"87:5:10","nodeType":"YulIdentifier","src":"87:5:10"},"nativeSrc":"87:12:10","nodeType":"YulFunctionCall","src":"87:12:10"},"variableNames":[{"name":"length","nativeSrc":"77:6:10","nodeType":"YulIdentifier","src":"77:6:10"}]}]},"name":"array_length_t_string_memory_ptr","nativeSrc":"7:99:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"49:5:10","nodeType":"YulTypedName","src":"49:5:10","type":""}],"returnVariables":[{"name":"length","nativeSrc":"59:6:10","nodeType":"YulTypedName","src":"59:6:10","type":""}],"src":"7:99:10"},{"body":{"nativeSrc":"208:73:10","nodeType":"YulBlock","src":"208:73:10","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"225:3:10","nodeType":"YulIdentifier","src":"225:3:10"},{"name":"length","nativeSrc":"230:6:10","nodeType":"YulIdentifier","src":"230:6:10"}],"functionName":{"name":"mstore","nativeSrc":"218:6:10","nodeType":"YulIdentifier","src":"218:6:10"},"nativeSrc":"218:19:10","nodeType":"YulFunctionCall","src":"218:19:10"},"nativeSrc":"218:19:10","nodeType":"YulExpressionStatement","src":"218:19:10"},{"nativeSrc":"246:29:10","nodeType":"YulAssignment","src":"246:29:10","value":{"arguments":[{"name":"pos","nativeSrc":"265:3:10","nodeType":"YulIdentifier","src":"265:3:10"},{"kind":"number","nativeSrc":"270:4:10","nodeType":"YulLiteral","src":"270:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"261:3:10","nodeType":"YulIdentifier","src":"261:3:10"},"nativeSrc":"261:14:10","nodeType":"YulFunctionCall","src":"261:14:10"},"variableNames":[{"name":"updated_pos","nativeSrc":"246:11:10","nodeType":"YulIdentifier","src":"246:11:10"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"112:169:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"180:3:10","nodeType":"YulTypedName","src":"180:3:10","type":""},{"name":"length","nativeSrc":"185:6:10","nodeType":"YulTypedName","src":"185:6:10","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"196:11:10","nodeType":"YulTypedName","src":"196:11:10","type":""}],"src":"112:169:10"},{"body":{"nativeSrc":"349:186:10","nodeType":"YulBlock","src":"349:186:10","statements":[{"nativeSrc":"360:10:10","nodeType":"YulVariableDeclaration","src":"360:10:10","value":{"kind":"number","nativeSrc":"369:1:10","nodeType":"YulLiteral","src":"369:1:10","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"364:1:10","nodeType":"YulTypedName","src":"364:1:10","type":""}]},{"body":{"nativeSrc":"429:63:10","nodeType":"YulBlock","src":"429:63:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"454:3:10","nodeType":"YulIdentifier","src":"454:3:10"},{"name":"i","nativeSrc":"459:1:10","nodeType":"YulIdentifier","src":"459:1:10"}],"functionName":{"name":"add","nativeSrc":"450:3:10","nodeType":"YulIdentifier","src":"450:3:10"},"nativeSrc":"450:11:10","nodeType":"YulFunctionCall","src":"450:11:10"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"473:3:10","nodeType":"YulIdentifier","src":"473:3:10"},{"name":"i","nativeSrc":"478:1:10","nodeType":"YulIdentifier","src":"478:1:10"}],"functionName":{"name":"add","nativeSrc":"469:3:10","nodeType":"YulIdentifier","src":"469:3:10"},"nativeSrc":"469:11:10","nodeType":"YulFunctionCall","src":"469:11:10"}],"functionName":{"name":"mload","nativeSrc":"463:5:10","nodeType":"YulIdentifier","src":"463:5:10"},"nativeSrc":"463:18:10","nodeType":"YulFunctionCall","src":"463:18:10"}],"functionName":{"name":"mstore","nativeSrc":"443:6:10","nodeType":"YulIdentifier","src":"443:6:10"},"nativeSrc":"443:39:10","nodeType":"YulFunctionCall","src":"443:39:10"},"nativeSrc":"443:39:10","nodeType":"YulExpressionStatement","src":"443:39:10"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"390:1:10","nodeType":"YulIdentifier","src":"390:1:10"},{"name":"length","nativeSrc":"393:6:10","nodeType":"YulIdentifier","src":"393:6:10"}],"functionName":{"name":"lt","nativeSrc":"387:2:10","nodeType":"YulIdentifier","src":"387:2:10"},"nativeSrc":"387:13:10","nodeType":"YulFunctionCall","src":"387:13:10"},"nativeSrc":"379:113:10","nodeType":"YulForLoop","post":{"nativeSrc":"401:19:10","nodeType":"YulBlock","src":"401:19:10","statements":[{"nativeSrc":"403:15:10","nodeType":"YulAssignment","src":"403:15:10","value":{"arguments":[{"name":"i","nativeSrc":"412:1:10","nodeType":"YulIdentifier","src":"412:1:10"},{"kind":"number","nativeSrc":"415:2:10","nodeType":"YulLiteral","src":"415:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"408:3:10","nodeType":"YulIdentifier","src":"408:3:10"},"nativeSrc":"408:10:10","nodeType":"YulFunctionCall","src":"408:10:10"},"variableNames":[{"name":"i","nativeSrc":"403:1:10","nodeType":"YulIdentifier","src":"403:1:10"}]}]},"pre":{"nativeSrc":"383:3:10","nodeType":"YulBlock","src":"383:3:10","statements":[]},"src":"379:113:10"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"512:3:10","nodeType":"YulIdentifier","src":"512:3:10"},{"name":"length","nativeSrc":"517:6:10","nodeType":"YulIdentifier","src":"517:6:10"}],"functionName":{"name":"add","nativeSrc":"508:3:10","nodeType":"YulIdentifier","src":"508:3:10"},"nativeSrc":"508:16:10","nodeType":"YulFunctionCall","src":"508:16:10"},{"kind":"number","nativeSrc":"526:1:10","nodeType":"YulLiteral","src":"526:1:10","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"501:6:10","nodeType":"YulIdentifier","src":"501:6:10"},"nativeSrc":"501:27:10","nodeType":"YulFunctionCall","src":"501:27:10"},"nativeSrc":"501:27:10","nodeType":"YulExpressionStatement","src":"501:27:10"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"287:248:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"331:3:10","nodeType":"YulTypedName","src":"331:3:10","type":""},{"name":"dst","nativeSrc":"336:3:10","nodeType":"YulTypedName","src":"336:3:10","type":""},{"name":"length","nativeSrc":"341:6:10","nodeType":"YulTypedName","src":"341:6:10","type":""}],"src":"287:248:10"},{"body":{"nativeSrc":"589:54:10","nodeType":"YulBlock","src":"589:54:10","statements":[{"nativeSrc":"599:38:10","nodeType":"YulAssignment","src":"599:38:10","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"617:5:10","nodeType":"YulIdentifier","src":"617:5:10"},{"kind":"number","nativeSrc":"624:2:10","nodeType":"YulLiteral","src":"624:2:10","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"613:3:10","nodeType":"YulIdentifier","src":"613:3:10"},"nativeSrc":"613:14:10","nodeType":"YulFunctionCall","src":"613:14:10"},{"arguments":[{"kind":"number","nativeSrc":"633:2:10","nodeType":"YulLiteral","src":"633:2:10","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"629:3:10","nodeType":"YulIdentifier","src":"629:3:10"},"nativeSrc":"629:7:10","nodeType":"YulFunctionCall","src":"629:7:10"}],"functionName":{"name":"and","nativeSrc":"609:3:10","nodeType":"YulIdentifier","src":"609:3:10"},"nativeSrc":"609:28:10","nodeType":"YulFunctionCall","src":"609:28:10"},"variableNames":[{"name":"result","nativeSrc":"599:6:10","nodeType":"YulIdentifier","src":"599:6:10"}]}]},"name":"round_up_to_mul_of_32","nativeSrc":"541:102:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"572:5:10","nodeType":"YulTypedName","src":"572:5:10","type":""}],"returnVariables":[{"name":"result","nativeSrc":"582:6:10","nodeType":"YulTypedName","src":"582:6:10","type":""}],"src":"541:102:10"},{"body":{"nativeSrc":"741:285:10","nodeType":"YulBlock","src":"741:285:10","statements":[{"nativeSrc":"751:53:10","nodeType":"YulVariableDeclaration","src":"751:53:10","value":{"arguments":[{"name":"value","nativeSrc":"798:5:10","nodeType":"YulIdentifier","src":"798:5:10"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"765:32:10","nodeType":"YulIdentifier","src":"765:32:10"},"nativeSrc":"765:39:10","nodeType":"YulFunctionCall","src":"765:39:10"},"variables":[{"name":"length","nativeSrc":"755:6:10","nodeType":"YulTypedName","src":"755:6:10","type":""}]},{"nativeSrc":"813:78:10","nodeType":"YulAssignment","src":"813:78:10","value":{"arguments":[{"name":"pos","nativeSrc":"879:3:10","nodeType":"YulIdentifier","src":"879:3:10"},{"name":"length","nativeSrc":"884:6:10","nodeType":"YulIdentifier","src":"884:6:10"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"820:58:10","nodeType":"YulIdentifier","src":"820:58:10"},"nativeSrc":"820:71:10","nodeType":"YulFunctionCall","src":"820:71:10"},"variableNames":[{"name":"pos","nativeSrc":"813:3:10","nodeType":"YulIdentifier","src":"813:3:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"939:5:10","nodeType":"YulIdentifier","src":"939:5:10"},{"kind":"number","nativeSrc":"946:4:10","nodeType":"YulLiteral","src":"946:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"935:3:10","nodeType":"YulIdentifier","src":"935:3:10"},"nativeSrc":"935:16:10","nodeType":"YulFunctionCall","src":"935:16:10"},{"name":"pos","nativeSrc":"953:3:10","nodeType":"YulIdentifier","src":"953:3:10"},{"name":"length","nativeSrc":"958:6:10","nodeType":"YulIdentifier","src":"958:6:10"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"900:34:10","nodeType":"YulIdentifier","src":"900:34:10"},"nativeSrc":"900:65:10","nodeType":"YulFunctionCall","src":"900:65:10"},"nativeSrc":"900:65:10","nodeType":"YulExpressionStatement","src":"900:65:10"},{"nativeSrc":"974:46:10","nodeType":"YulAssignment","src":"974:46:10","value":{"arguments":[{"name":"pos","nativeSrc":"985:3:10","nodeType":"YulIdentifier","src":"985:3:10"},{"arguments":[{"name":"length","nativeSrc":"1012:6:10","nodeType":"YulIdentifier","src":"1012:6:10"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"990:21:10","nodeType":"YulIdentifier","src":"990:21:10"},"nativeSrc":"990:29:10","nodeType":"YulFunctionCall","src":"990:29:10"}],"functionName":{"name":"add","nativeSrc":"981:3:10","nodeType":"YulIdentifier","src":"981:3:10"},"nativeSrc":"981:39:10","nodeType":"YulFunctionCall","src":"981:39:10"},"variableNames":[{"name":"end","nativeSrc":"974:3:10","nodeType":"YulIdentifier","src":"974:3:10"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"649:377:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"722:5:10","nodeType":"YulTypedName","src":"722:5:10","type":""},{"name":"pos","nativeSrc":"729:3:10","nodeType":"YulTypedName","src":"729:3:10","type":""}],"returnVariables":[{"name":"end","nativeSrc":"737:3:10","nodeType":"YulTypedName","src":"737:3:10","type":""}],"src":"649:377:10"},{"body":{"nativeSrc":"1150:195:10","nodeType":"YulBlock","src":"1150:195:10","statements":[{"nativeSrc":"1160:26:10","nodeType":"YulAssignment","src":"1160:26:10","value":{"arguments":[{"name":"headStart","nativeSrc":"1172:9:10","nodeType":"YulIdentifier","src":"1172:9:10"},{"kind":"number","nativeSrc":"1183:2:10","nodeType":"YulLiteral","src":"1183:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1168:3:10","nodeType":"YulIdentifier","src":"1168:3:10"},"nativeSrc":"1168:18:10","nodeType":"YulFunctionCall","src":"1168:18:10"},"variableNames":[{"name":"tail","nativeSrc":"1160:4:10","nodeType":"YulIdentifier","src":"1160:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1207:9:10","nodeType":"YulIdentifier","src":"1207:9:10"},{"kind":"number","nativeSrc":"1218:1:10","nodeType":"YulLiteral","src":"1218:1:10","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"1203:3:10","nodeType":"YulIdentifier","src":"1203:3:10"},"nativeSrc":"1203:17:10","nodeType":"YulFunctionCall","src":"1203:17:10"},{"arguments":[{"name":"tail","nativeSrc":"1226:4:10","nodeType":"YulIdentifier","src":"1226:4:10"},{"name":"headStart","nativeSrc":"1232:9:10","nodeType":"YulIdentifier","src":"1232:9:10"}],"functionName":{"name":"sub","nativeSrc":"1222:3:10","nodeType":"YulIdentifier","src":"1222:3:10"},"nativeSrc":"1222:20:10","nodeType":"YulFunctionCall","src":"1222:20:10"}],"functionName":{"name":"mstore","nativeSrc":"1196:6:10","nodeType":"YulIdentifier","src":"1196:6:10"},"nativeSrc":"1196:47:10","nodeType":"YulFunctionCall","src":"1196:47:10"},"nativeSrc":"1196:47:10","nodeType":"YulExpressionStatement","src":"1196:47:10"},{"nativeSrc":"1252:86:10","nodeType":"YulAssignment","src":"1252:86:10","value":{"arguments":[{"name":"value0","nativeSrc":"1324:6:10","nodeType":"YulIdentifier","src":"1324:6:10"},{"name":"tail","nativeSrc":"1333:4:10","nodeType":"YulIdentifier","src":"1333:4:10"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"1260:63:10","nodeType":"YulIdentifier","src":"1260:63:10"},"nativeSrc":"1260:78:10","nodeType":"YulFunctionCall","src":"1260:78:10"},"variableNames":[{"name":"tail","nativeSrc":"1252:4:10","nodeType":"YulIdentifier","src":"1252:4:10"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"1032:313:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1122:9:10","nodeType":"YulTypedName","src":"1122:9:10","type":""},{"name":"value0","nativeSrc":"1134:6:10","nodeType":"YulTypedName","src":"1134:6:10","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1145:4:10","nodeType":"YulTypedName","src":"1145:4:10","type":""}],"src":"1032:313:10"},{"body":{"nativeSrc":"1391:35:10","nodeType":"YulBlock","src":"1391:35:10","statements":[{"nativeSrc":"1401:19:10","nodeType":"YulAssignment","src":"1401:19:10","value":{"arguments":[{"kind":"number","nativeSrc":"1417:2:10","nodeType":"YulLiteral","src":"1417:2:10","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"1411:5:10","nodeType":"YulIdentifier","src":"1411:5:10"},"nativeSrc":"1411:9:10","nodeType":"YulFunctionCall","src":"1411:9:10"},"variableNames":[{"name":"memPtr","nativeSrc":"1401:6:10","nodeType":"YulIdentifier","src":"1401:6:10"}]}]},"name":"allocate_unbounded","nativeSrc":"1351:75:10","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"1384:6:10","nodeType":"YulTypedName","src":"1384:6:10","type":""}],"src":"1351:75:10"},{"body":{"nativeSrc":"1521:28:10","nodeType":"YulBlock","src":"1521:28:10","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1538:1:10","nodeType":"YulLiteral","src":"1538:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"1541:1:10","nodeType":"YulLiteral","src":"1541:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1531:6:10","nodeType":"YulIdentifier","src":"1531:6:10"},"nativeSrc":"1531:12:10","nodeType":"YulFunctionCall","src":"1531:12:10"},"nativeSrc":"1531:12:10","nodeType":"YulExpressionStatement","src":"1531:12:10"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"1432:117:10","nodeType":"YulFunctionDefinition","src":"1432:117:10"},{"body":{"nativeSrc":"1644:28:10","nodeType":"YulBlock","src":"1644:28:10","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1661:1:10","nodeType":"YulLiteral","src":"1661:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"1664:1:10","nodeType":"YulLiteral","src":"1664:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1654:6:10","nodeType":"YulIdentifier","src":"1654:6:10"},"nativeSrc":"1654:12:10","nodeType":"YulFunctionCall","src":"1654:12:10"},"nativeSrc":"1654:12:10","nodeType":"YulExpressionStatement","src":"1654:12:10"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"1555:117:10","nodeType":"YulFunctionDefinition","src":"1555:117:10"},{"body":{"nativeSrc":"1723:81:10","nodeType":"YulBlock","src":"1723:81:10","statements":[{"nativeSrc":"1733:65:10","nodeType":"YulAssignment","src":"1733:65:10","value":{"arguments":[{"name":"value","nativeSrc":"1748:5:10","nodeType":"YulIdentifier","src":"1748:5:10"},{"kind":"number","nativeSrc":"1755:42:10","nodeType":"YulLiteral","src":"1755:42:10","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"1744:3:10","nodeType":"YulIdentifier","src":"1744:3:10"},"nativeSrc":"1744:54:10","nodeType":"YulFunctionCall","src":"1744:54:10"},"variableNames":[{"name":"cleaned","nativeSrc":"1733:7:10","nodeType":"YulIdentifier","src":"1733:7:10"}]}]},"name":"cleanup_t_uint160","nativeSrc":"1678:126:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1705:5:10","nodeType":"YulTypedName","src":"1705:5:10","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1715:7:10","nodeType":"YulTypedName","src":"1715:7:10","type":""}],"src":"1678:126:10"},{"body":{"nativeSrc":"1855:51:10","nodeType":"YulBlock","src":"1855:51:10","statements":[{"nativeSrc":"1865:35:10","nodeType":"YulAssignment","src":"1865:35:10","value":{"arguments":[{"name":"value","nativeSrc":"1894:5:10","nodeType":"YulIdentifier","src":"1894:5:10"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"1876:17:10","nodeType":"YulIdentifier","src":"1876:17:10"},"nativeSrc":"1876:24:10","nodeType":"YulFunctionCall","src":"1876:24:10"},"variableNames":[{"name":"cleaned","nativeSrc":"1865:7:10","nodeType":"YulIdentifier","src":"1865:7:10"}]}]},"name":"cleanup_t_address","nativeSrc":"1810:96:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1837:5:10","nodeType":"YulTypedName","src":"1837:5:10","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1847:7:10","nodeType":"YulTypedName","src":"1847:7:10","type":""}],"src":"1810:96:10"},{"body":{"nativeSrc":"1955:79:10","nodeType":"YulBlock","src":"1955:79:10","statements":[{"body":{"nativeSrc":"2012:16:10","nodeType":"YulBlock","src":"2012:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2021:1:10","nodeType":"YulLiteral","src":"2021:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"2024:1:10","nodeType":"YulLiteral","src":"2024:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2014:6:10","nodeType":"YulIdentifier","src":"2014:6:10"},"nativeSrc":"2014:12:10","nodeType":"YulFunctionCall","src":"2014:12:10"},"nativeSrc":"2014:12:10","nodeType":"YulExpressionStatement","src":"2014:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1978:5:10","nodeType":"YulIdentifier","src":"1978:5:10"},{"arguments":[{"name":"value","nativeSrc":"2003:5:10","nodeType":"YulIdentifier","src":"2003:5:10"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"1985:17:10","nodeType":"YulIdentifier","src":"1985:17:10"},"nativeSrc":"1985:24:10","nodeType":"YulFunctionCall","src":"1985:24:10"}],"functionName":{"name":"eq","nativeSrc":"1975:2:10","nodeType":"YulIdentifier","src":"1975:2:10"},"nativeSrc":"1975:35:10","nodeType":"YulFunctionCall","src":"1975:35:10"}],"functionName":{"name":"iszero","nativeSrc":"1968:6:10","nodeType":"YulIdentifier","src":"1968:6:10"},"nativeSrc":"1968:43:10","nodeType":"YulFunctionCall","src":"1968:43:10"},"nativeSrc":"1965:63:10","nodeType":"YulIf","src":"1965:63:10"}]},"name":"validator_revert_t_address","nativeSrc":"1912:122:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1948:5:10","nodeType":"YulTypedName","src":"1948:5:10","type":""}],"src":"1912:122:10"},{"body":{"nativeSrc":"2092:87:10","nodeType":"YulBlock","src":"2092:87:10","statements":[{"nativeSrc":"2102:29:10","nodeType":"YulAssignment","src":"2102:29:10","value":{"arguments":[{"name":"offset","nativeSrc":"2124:6:10","nodeType":"YulIdentifier","src":"2124:6:10"}],"functionName":{"name":"calldataload","nativeSrc":"2111:12:10","nodeType":"YulIdentifier","src":"2111:12:10"},"nativeSrc":"2111:20:10","nodeType":"YulFunctionCall","src":"2111:20:10"},"variableNames":[{"name":"value","nativeSrc":"2102:5:10","nodeType":"YulIdentifier","src":"2102:5:10"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"2167:5:10","nodeType":"YulIdentifier","src":"2167:5:10"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"2140:26:10","nodeType":"YulIdentifier","src":"2140:26:10"},"nativeSrc":"2140:33:10","nodeType":"YulFunctionCall","src":"2140:33:10"},"nativeSrc":"2140:33:10","nodeType":"YulExpressionStatement","src":"2140:33:10"}]},"name":"abi_decode_t_address","nativeSrc":"2040:139:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"2070:6:10","nodeType":"YulTypedName","src":"2070:6:10","type":""},{"name":"end","nativeSrc":"2078:3:10","nodeType":"YulTypedName","src":"2078:3:10","type":""}],"returnVariables":[{"name":"value","nativeSrc":"2086:5:10","nodeType":"YulTypedName","src":"2086:5:10","type":""}],"src":"2040:139:10"},{"body":{"nativeSrc":"2230:32:10","nodeType":"YulBlock","src":"2230:32:10","statements":[{"nativeSrc":"2240:16:10","nodeType":"YulAssignment","src":"2240:16:10","value":{"name":"value","nativeSrc":"2251:5:10","nodeType":"YulIdentifier","src":"2251:5:10"},"variableNames":[{"name":"cleaned","nativeSrc":"2240:7:10","nodeType":"YulIdentifier","src":"2240:7:10"}]}]},"name":"cleanup_t_uint256","nativeSrc":"2185:77:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2212:5:10","nodeType":"YulTypedName","src":"2212:5:10","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"2222:7:10","nodeType":"YulTypedName","src":"2222:7:10","type":""}],"src":"2185:77:10"},{"body":{"nativeSrc":"2311:79:10","nodeType":"YulBlock","src":"2311:79:10","statements":[{"body":{"nativeSrc":"2368:16:10","nodeType":"YulBlock","src":"2368:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2377:1:10","nodeType":"YulLiteral","src":"2377:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"2380:1:10","nodeType":"YulLiteral","src":"2380:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2370:6:10","nodeType":"YulIdentifier","src":"2370:6:10"},"nativeSrc":"2370:12:10","nodeType":"YulFunctionCall","src":"2370:12:10"},"nativeSrc":"2370:12:10","nodeType":"YulExpressionStatement","src":"2370:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2334:5:10","nodeType":"YulIdentifier","src":"2334:5:10"},{"arguments":[{"name":"value","nativeSrc":"2359:5:10","nodeType":"YulIdentifier","src":"2359:5:10"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"2341:17:10","nodeType":"YulIdentifier","src":"2341:17:10"},"nativeSrc":"2341:24:10","nodeType":"YulFunctionCall","src":"2341:24:10"}],"functionName":{"name":"eq","nativeSrc":"2331:2:10","nodeType":"YulIdentifier","src":"2331:2:10"},"nativeSrc":"2331:35:10","nodeType":"YulFunctionCall","src":"2331:35:10"}],"functionName":{"name":"iszero","nativeSrc":"2324:6:10","nodeType":"YulIdentifier","src":"2324:6:10"},"nativeSrc":"2324:43:10","nodeType":"YulFunctionCall","src":"2324:43:10"},"nativeSrc":"2321:63:10","nodeType":"YulIf","src":"2321:63:10"}]},"name":"validator_revert_t_uint256","nativeSrc":"2268:122:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2304:5:10","nodeType":"YulTypedName","src":"2304:5:10","type":""}],"src":"2268:122:10"},{"body":{"nativeSrc":"2448:87:10","nodeType":"YulBlock","src":"2448:87:10","statements":[{"nativeSrc":"2458:29:10","nodeType":"YulAssignment","src":"2458:29:10","value":{"arguments":[{"name":"offset","nativeSrc":"2480:6:10","nodeType":"YulIdentifier","src":"2480:6:10"}],"functionName":{"name":"calldataload","nativeSrc":"2467:12:10","nodeType":"YulIdentifier","src":"2467:12:10"},"nativeSrc":"2467:20:10","nodeType":"YulFunctionCall","src":"2467:20:10"},"variableNames":[{"name":"value","nativeSrc":"2458:5:10","nodeType":"YulIdentifier","src":"2458:5:10"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"2523:5:10","nodeType":"YulIdentifier","src":"2523:5:10"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"2496:26:10","nodeType":"YulIdentifier","src":"2496:26:10"},"nativeSrc":"2496:33:10","nodeType":"YulFunctionCall","src":"2496:33:10"},"nativeSrc":"2496:33:10","nodeType":"YulExpressionStatement","src":"2496:33:10"}]},"name":"abi_decode_t_uint256","nativeSrc":"2396:139:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"2426:6:10","nodeType":"YulTypedName","src":"2426:6:10","type":""},{"name":"end","nativeSrc":"2434:3:10","nodeType":"YulTypedName","src":"2434:3:10","type":""}],"returnVariables":[{"name":"value","nativeSrc":"2442:5:10","nodeType":"YulTypedName","src":"2442:5:10","type":""}],"src":"2396:139:10"},{"body":{"nativeSrc":"2624:391:10","nodeType":"YulBlock","src":"2624:391:10","statements":[{"body":{"nativeSrc":"2670:83:10","nodeType":"YulBlock","src":"2670:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"2672:77:10","nodeType":"YulIdentifier","src":"2672:77:10"},"nativeSrc":"2672:79:10","nodeType":"YulFunctionCall","src":"2672:79:10"},"nativeSrc":"2672:79:10","nodeType":"YulExpressionStatement","src":"2672:79:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2645:7:10","nodeType":"YulIdentifier","src":"2645:7:10"},{"name":"headStart","nativeSrc":"2654:9:10","nodeType":"YulIdentifier","src":"2654:9:10"}],"functionName":{"name":"sub","nativeSrc":"2641:3:10","nodeType":"YulIdentifier","src":"2641:3:10"},"nativeSrc":"2641:23:10","nodeType":"YulFunctionCall","src":"2641:23:10"},{"kind":"number","nativeSrc":"2666:2:10","nodeType":"YulLiteral","src":"2666:2:10","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"2637:3:10","nodeType":"YulIdentifier","src":"2637:3:10"},"nativeSrc":"2637:32:10","nodeType":"YulFunctionCall","src":"2637:32:10"},"nativeSrc":"2634:119:10","nodeType":"YulIf","src":"2634:119:10"},{"nativeSrc":"2763:117:10","nodeType":"YulBlock","src":"2763:117:10","statements":[{"nativeSrc":"2778:15:10","nodeType":"YulVariableDeclaration","src":"2778:15:10","value":{"kind":"number","nativeSrc":"2792:1:10","nodeType":"YulLiteral","src":"2792:1:10","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"2782:6:10","nodeType":"YulTypedName","src":"2782:6:10","type":""}]},{"nativeSrc":"2807:63:10","nodeType":"YulAssignment","src":"2807:63:10","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2842:9:10","nodeType":"YulIdentifier","src":"2842:9:10"},{"name":"offset","nativeSrc":"2853:6:10","nodeType":"YulIdentifier","src":"2853:6:10"}],"functionName":{"name":"add","nativeSrc":"2838:3:10","nodeType":"YulIdentifier","src":"2838:3:10"},"nativeSrc":"2838:22:10","nodeType":"YulFunctionCall","src":"2838:22:10"},{"name":"dataEnd","nativeSrc":"2862:7:10","nodeType":"YulIdentifier","src":"2862:7:10"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"2817:20:10","nodeType":"YulIdentifier","src":"2817:20:10"},"nativeSrc":"2817:53:10","nodeType":"YulFunctionCall","src":"2817:53:10"},"variableNames":[{"name":"value0","nativeSrc":"2807:6:10","nodeType":"YulIdentifier","src":"2807:6:10"}]}]},{"nativeSrc":"2890:118:10","nodeType":"YulBlock","src":"2890:118:10","statements":[{"nativeSrc":"2905:16:10","nodeType":"YulVariableDeclaration","src":"2905:16:10","value":{"kind":"number","nativeSrc":"2919:2:10","nodeType":"YulLiteral","src":"2919:2:10","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"2909:6:10","nodeType":"YulTypedName","src":"2909:6:10","type":""}]},{"nativeSrc":"2935:63:10","nodeType":"YulAssignment","src":"2935:63:10","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2970:9:10","nodeType":"YulIdentifier","src":"2970:9:10"},{"name":"offset","nativeSrc":"2981:6:10","nodeType":"YulIdentifier","src":"2981:6:10"}],"functionName":{"name":"add","nativeSrc":"2966:3:10","nodeType":"YulIdentifier","src":"2966:3:10"},"nativeSrc":"2966:22:10","nodeType":"YulFunctionCall","src":"2966:22:10"},{"name":"dataEnd","nativeSrc":"2990:7:10","nodeType":"YulIdentifier","src":"2990:7:10"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"2945:20:10","nodeType":"YulIdentifier","src":"2945:20:10"},"nativeSrc":"2945:53:10","nodeType":"YulFunctionCall","src":"2945:53:10"},"variableNames":[{"name":"value1","nativeSrc":"2935:6:10","nodeType":"YulIdentifier","src":"2935:6:10"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nativeSrc":"2541:474:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2586:9:10","nodeType":"YulTypedName","src":"2586:9:10","type":""},{"name":"dataEnd","nativeSrc":"2597:7:10","nodeType":"YulTypedName","src":"2597:7:10","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2609:6:10","nodeType":"YulTypedName","src":"2609:6:10","type":""},{"name":"value1","nativeSrc":"2617:6:10","nodeType":"YulTypedName","src":"2617:6:10","type":""}],"src":"2541:474:10"},{"body":{"nativeSrc":"3063:48:10","nodeType":"YulBlock","src":"3063:48:10","statements":[{"nativeSrc":"3073:32:10","nodeType":"YulAssignment","src":"3073:32:10","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3098:5:10","nodeType":"YulIdentifier","src":"3098:5:10"}],"functionName":{"name":"iszero","nativeSrc":"3091:6:10","nodeType":"YulIdentifier","src":"3091:6:10"},"nativeSrc":"3091:13:10","nodeType":"YulFunctionCall","src":"3091:13:10"}],"functionName":{"name":"iszero","nativeSrc":"3084:6:10","nodeType":"YulIdentifier","src":"3084:6:10"},"nativeSrc":"3084:21:10","nodeType":"YulFunctionCall","src":"3084:21:10"},"variableNames":[{"name":"cleaned","nativeSrc":"3073:7:10","nodeType":"YulIdentifier","src":"3073:7:10"}]}]},"name":"cleanup_t_bool","nativeSrc":"3021:90:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3045:5:10","nodeType":"YulTypedName","src":"3045:5:10","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"3055:7:10","nodeType":"YulTypedName","src":"3055:7:10","type":""}],"src":"3021:90:10"},{"body":{"nativeSrc":"3176:50:10","nodeType":"YulBlock","src":"3176:50:10","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"3193:3:10","nodeType":"YulIdentifier","src":"3193:3:10"},{"arguments":[{"name":"value","nativeSrc":"3213:5:10","nodeType":"YulIdentifier","src":"3213:5:10"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"3198:14:10","nodeType":"YulIdentifier","src":"3198:14:10"},"nativeSrc":"3198:21:10","nodeType":"YulFunctionCall","src":"3198:21:10"}],"functionName":{"name":"mstore","nativeSrc":"3186:6:10","nodeType":"YulIdentifier","src":"3186:6:10"},"nativeSrc":"3186:34:10","nodeType":"YulFunctionCall","src":"3186:34:10"},"nativeSrc":"3186:34:10","nodeType":"YulExpressionStatement","src":"3186:34:10"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"3117:109:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3164:5:10","nodeType":"YulTypedName","src":"3164:5:10","type":""},{"name":"pos","nativeSrc":"3171:3:10","nodeType":"YulTypedName","src":"3171:3:10","type":""}],"src":"3117:109:10"},{"body":{"nativeSrc":"3324:118:10","nodeType":"YulBlock","src":"3324:118:10","statements":[{"nativeSrc":"3334:26:10","nodeType":"YulAssignment","src":"3334:26:10","value":{"arguments":[{"name":"headStart","nativeSrc":"3346:9:10","nodeType":"YulIdentifier","src":"3346:9:10"},{"kind":"number","nativeSrc":"3357:2:10","nodeType":"YulLiteral","src":"3357:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3342:3:10","nodeType":"YulIdentifier","src":"3342:3:10"},"nativeSrc":"3342:18:10","nodeType":"YulFunctionCall","src":"3342:18:10"},"variableNames":[{"name":"tail","nativeSrc":"3334:4:10","nodeType":"YulIdentifier","src":"3334:4:10"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"3408:6:10","nodeType":"YulIdentifier","src":"3408:6:10"},{"arguments":[{"name":"headStart","nativeSrc":"3421:9:10","nodeType":"YulIdentifier","src":"3421:9:10"},{"kind":"number","nativeSrc":"3432:1:10","nodeType":"YulLiteral","src":"3432:1:10","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"3417:3:10","nodeType":"YulIdentifier","src":"3417:3:10"},"nativeSrc":"3417:17:10","nodeType":"YulFunctionCall","src":"3417:17:10"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"3370:37:10","nodeType":"YulIdentifier","src":"3370:37:10"},"nativeSrc":"3370:65:10","nodeType":"YulFunctionCall","src":"3370:65:10"},"nativeSrc":"3370:65:10","nodeType":"YulExpressionStatement","src":"3370:65:10"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"3232:210:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3296:9:10","nodeType":"YulTypedName","src":"3296:9:10","type":""},{"name":"value0","nativeSrc":"3308:6:10","nodeType":"YulTypedName","src":"3308:6:10","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3319:4:10","nodeType":"YulTypedName","src":"3319:4:10","type":""}],"src":"3232:210:10"},{"body":{"nativeSrc":"3513:53:10","nodeType":"YulBlock","src":"3513:53:10","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"3530:3:10","nodeType":"YulIdentifier","src":"3530:3:10"},{"arguments":[{"name":"value","nativeSrc":"3553:5:10","nodeType":"YulIdentifier","src":"3553:5:10"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"3535:17:10","nodeType":"YulIdentifier","src":"3535:17:10"},"nativeSrc":"3535:24:10","nodeType":"YulFunctionCall","src":"3535:24:10"}],"functionName":{"name":"mstore","nativeSrc":"3523:6:10","nodeType":"YulIdentifier","src":"3523:6:10"},"nativeSrc":"3523:37:10","nodeType":"YulFunctionCall","src":"3523:37:10"},"nativeSrc":"3523:37:10","nodeType":"YulExpressionStatement","src":"3523:37:10"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"3448:118:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3501:5:10","nodeType":"YulTypedName","src":"3501:5:10","type":""},{"name":"pos","nativeSrc":"3508:3:10","nodeType":"YulTypedName","src":"3508:3:10","type":""}],"src":"3448:118:10"},{"body":{"nativeSrc":"3670:124:10","nodeType":"YulBlock","src":"3670:124:10","statements":[{"nativeSrc":"3680:26:10","nodeType":"YulAssignment","src":"3680:26:10","value":{"arguments":[{"name":"headStart","nativeSrc":"3692:9:10","nodeType":"YulIdentifier","src":"3692:9:10"},{"kind":"number","nativeSrc":"3703:2:10","nodeType":"YulLiteral","src":"3703:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3688:3:10","nodeType":"YulIdentifier","src":"3688:3:10"},"nativeSrc":"3688:18:10","nodeType":"YulFunctionCall","src":"3688:18:10"},"variableNames":[{"name":"tail","nativeSrc":"3680:4:10","nodeType":"YulIdentifier","src":"3680:4:10"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"3760:6:10","nodeType":"YulIdentifier","src":"3760:6:10"},{"arguments":[{"name":"headStart","nativeSrc":"3773:9:10","nodeType":"YulIdentifier","src":"3773:9:10"},{"kind":"number","nativeSrc":"3784:1:10","nodeType":"YulLiteral","src":"3784:1:10","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"3769:3:10","nodeType":"YulIdentifier","src":"3769:3:10"},"nativeSrc":"3769:17:10","nodeType":"YulFunctionCall","src":"3769:17:10"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"3716:43:10","nodeType":"YulIdentifier","src":"3716:43:10"},"nativeSrc":"3716:71:10","nodeType":"YulFunctionCall","src":"3716:71:10"},"nativeSrc":"3716:71:10","nodeType":"YulExpressionStatement","src":"3716:71:10"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"3572:222:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3642:9:10","nodeType":"YulTypedName","src":"3642:9:10","type":""},{"name":"value0","nativeSrc":"3654:6:10","nodeType":"YulTypedName","src":"3654:6:10","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3665:4:10","nodeType":"YulTypedName","src":"3665:4:10","type":""}],"src":"3572:222:10"},{"body":{"nativeSrc":"3900:519:10","nodeType":"YulBlock","src":"3900:519:10","statements":[{"body":{"nativeSrc":"3946:83:10","nodeType":"YulBlock","src":"3946:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"3948:77:10","nodeType":"YulIdentifier","src":"3948:77:10"},"nativeSrc":"3948:79:10","nodeType":"YulFunctionCall","src":"3948:79:10"},"nativeSrc":"3948:79:10","nodeType":"YulExpressionStatement","src":"3948:79:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3921:7:10","nodeType":"YulIdentifier","src":"3921:7:10"},{"name":"headStart","nativeSrc":"3930:9:10","nodeType":"YulIdentifier","src":"3930:9:10"}],"functionName":{"name":"sub","nativeSrc":"3917:3:10","nodeType":"YulIdentifier","src":"3917:3:10"},"nativeSrc":"3917:23:10","nodeType":"YulFunctionCall","src":"3917:23:10"},{"kind":"number","nativeSrc":"3942:2:10","nodeType":"YulLiteral","src":"3942:2:10","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"3913:3:10","nodeType":"YulIdentifier","src":"3913:3:10"},"nativeSrc":"3913:32:10","nodeType":"YulFunctionCall","src":"3913:32:10"},"nativeSrc":"3910:119:10","nodeType":"YulIf","src":"3910:119:10"},{"nativeSrc":"4039:117:10","nodeType":"YulBlock","src":"4039:117:10","statements":[{"nativeSrc":"4054:15:10","nodeType":"YulVariableDeclaration","src":"4054:15:10","value":{"kind":"number","nativeSrc":"4068:1:10","nodeType":"YulLiteral","src":"4068:1:10","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"4058:6:10","nodeType":"YulTypedName","src":"4058:6:10","type":""}]},{"nativeSrc":"4083:63:10","nodeType":"YulAssignment","src":"4083:63:10","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4118:9:10","nodeType":"YulIdentifier","src":"4118:9:10"},{"name":"offset","nativeSrc":"4129:6:10","nodeType":"YulIdentifier","src":"4129:6:10"}],"functionName":{"name":"add","nativeSrc":"4114:3:10","nodeType":"YulIdentifier","src":"4114:3:10"},"nativeSrc":"4114:22:10","nodeType":"YulFunctionCall","src":"4114:22:10"},{"name":"dataEnd","nativeSrc":"4138:7:10","nodeType":"YulIdentifier","src":"4138:7:10"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"4093:20:10","nodeType":"YulIdentifier","src":"4093:20:10"},"nativeSrc":"4093:53:10","nodeType":"YulFunctionCall","src":"4093:53:10"},"variableNames":[{"name":"value0","nativeSrc":"4083:6:10","nodeType":"YulIdentifier","src":"4083:6:10"}]}]},{"nativeSrc":"4166:118:10","nodeType":"YulBlock","src":"4166:118:10","statements":[{"nativeSrc":"4181:16:10","nodeType":"YulVariableDeclaration","src":"4181:16:10","value":{"kind":"number","nativeSrc":"4195:2:10","nodeType":"YulLiteral","src":"4195:2:10","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"4185:6:10","nodeType":"YulTypedName","src":"4185:6:10","type":""}]},{"nativeSrc":"4211:63:10","nodeType":"YulAssignment","src":"4211:63:10","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4246:9:10","nodeType":"YulIdentifier","src":"4246:9:10"},{"name":"offset","nativeSrc":"4257:6:10","nodeType":"YulIdentifier","src":"4257:6:10"}],"functionName":{"name":"add","nativeSrc":"4242:3:10","nodeType":"YulIdentifier","src":"4242:3:10"},"nativeSrc":"4242:22:10","nodeType":"YulFunctionCall","src":"4242:22:10"},{"name":"dataEnd","nativeSrc":"4266:7:10","nodeType":"YulIdentifier","src":"4266:7:10"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"4221:20:10","nodeType":"YulIdentifier","src":"4221:20:10"},"nativeSrc":"4221:53:10","nodeType":"YulFunctionCall","src":"4221:53:10"},"variableNames":[{"name":"value1","nativeSrc":"4211:6:10","nodeType":"YulIdentifier","src":"4211:6:10"}]}]},{"nativeSrc":"4294:118:10","nodeType":"YulBlock","src":"4294:118:10","statements":[{"nativeSrc":"4309:16:10","nodeType":"YulVariableDeclaration","src":"4309:16:10","value":{"kind":"number","nativeSrc":"4323:2:10","nodeType":"YulLiteral","src":"4323:2:10","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"4313:6:10","nodeType":"YulTypedName","src":"4313:6:10","type":""}]},{"nativeSrc":"4339:63:10","nodeType":"YulAssignment","src":"4339:63:10","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4374:9:10","nodeType":"YulIdentifier","src":"4374:9:10"},{"name":"offset","nativeSrc":"4385:6:10","nodeType":"YulIdentifier","src":"4385:6:10"}],"functionName":{"name":"add","nativeSrc":"4370:3:10","nodeType":"YulIdentifier","src":"4370:3:10"},"nativeSrc":"4370:22:10","nodeType":"YulFunctionCall","src":"4370:22:10"},{"name":"dataEnd","nativeSrc":"4394:7:10","nodeType":"YulIdentifier","src":"4394:7:10"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"4349:20:10","nodeType":"YulIdentifier","src":"4349:20:10"},"nativeSrc":"4349:53:10","nodeType":"YulFunctionCall","src":"4349:53:10"},"variableNames":[{"name":"value2","nativeSrc":"4339:6:10","nodeType":"YulIdentifier","src":"4339:6:10"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nativeSrc":"3800:619:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3854:9:10","nodeType":"YulTypedName","src":"3854:9:10","type":""},{"name":"dataEnd","nativeSrc":"3865:7:10","nodeType":"YulTypedName","src":"3865:7:10","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3877:6:10","nodeType":"YulTypedName","src":"3877:6:10","type":""},{"name":"value1","nativeSrc":"3885:6:10","nodeType":"YulTypedName","src":"3885:6:10","type":""},{"name":"value2","nativeSrc":"3893:6:10","nodeType":"YulTypedName","src":"3893:6:10","type":""}],"src":"3800:619:10"},{"body":{"nativeSrc":"4468:43:10","nodeType":"YulBlock","src":"4468:43:10","statements":[{"nativeSrc":"4478:27:10","nodeType":"YulAssignment","src":"4478:27:10","value":{"arguments":[{"name":"value","nativeSrc":"4493:5:10","nodeType":"YulIdentifier","src":"4493:5:10"},{"kind":"number","nativeSrc":"4500:4:10","nodeType":"YulLiteral","src":"4500:4:10","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"4489:3:10","nodeType":"YulIdentifier","src":"4489:3:10"},"nativeSrc":"4489:16:10","nodeType":"YulFunctionCall","src":"4489:16:10"},"variableNames":[{"name":"cleaned","nativeSrc":"4478:7:10","nodeType":"YulIdentifier","src":"4478:7:10"}]}]},"name":"cleanup_t_uint8","nativeSrc":"4425:86:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4450:5:10","nodeType":"YulTypedName","src":"4450:5:10","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"4460:7:10","nodeType":"YulTypedName","src":"4460:7:10","type":""}],"src":"4425:86:10"},{"body":{"nativeSrc":"4578:51:10","nodeType":"YulBlock","src":"4578:51:10","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"4595:3:10","nodeType":"YulIdentifier","src":"4595:3:10"},{"arguments":[{"name":"value","nativeSrc":"4616:5:10","nodeType":"YulIdentifier","src":"4616:5:10"}],"functionName":{"name":"cleanup_t_uint8","nativeSrc":"4600:15:10","nodeType":"YulIdentifier","src":"4600:15:10"},"nativeSrc":"4600:22:10","nodeType":"YulFunctionCall","src":"4600:22:10"}],"functionName":{"name":"mstore","nativeSrc":"4588:6:10","nodeType":"YulIdentifier","src":"4588:6:10"},"nativeSrc":"4588:35:10","nodeType":"YulFunctionCall","src":"4588:35:10"},"nativeSrc":"4588:35:10","nodeType":"YulExpressionStatement","src":"4588:35:10"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nativeSrc":"4517:112:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4566:5:10","nodeType":"YulTypedName","src":"4566:5:10","type":""},{"name":"pos","nativeSrc":"4573:3:10","nodeType":"YulTypedName","src":"4573:3:10","type":""}],"src":"4517:112:10"},{"body":{"nativeSrc":"4729:120:10","nodeType":"YulBlock","src":"4729:120:10","statements":[{"nativeSrc":"4739:26:10","nodeType":"YulAssignment","src":"4739:26:10","value":{"arguments":[{"name":"headStart","nativeSrc":"4751:9:10","nodeType":"YulIdentifier","src":"4751:9:10"},{"kind":"number","nativeSrc":"4762:2:10","nodeType":"YulLiteral","src":"4762:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4747:3:10","nodeType":"YulIdentifier","src":"4747:3:10"},"nativeSrc":"4747:18:10","nodeType":"YulFunctionCall","src":"4747:18:10"},"variableNames":[{"name":"tail","nativeSrc":"4739:4:10","nodeType":"YulIdentifier","src":"4739:4:10"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"4815:6:10","nodeType":"YulIdentifier","src":"4815:6:10"},{"arguments":[{"name":"headStart","nativeSrc":"4828:9:10","nodeType":"YulIdentifier","src":"4828:9:10"},{"kind":"number","nativeSrc":"4839:1:10","nodeType":"YulLiteral","src":"4839:1:10","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"4824:3:10","nodeType":"YulIdentifier","src":"4824:3:10"},"nativeSrc":"4824:17:10","nodeType":"YulFunctionCall","src":"4824:17:10"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nativeSrc":"4775:39:10","nodeType":"YulIdentifier","src":"4775:39:10"},"nativeSrc":"4775:67:10","nodeType":"YulFunctionCall","src":"4775:67:10"},"nativeSrc":"4775:67:10","nodeType":"YulExpressionStatement","src":"4775:67:10"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nativeSrc":"4635:214:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4701:9:10","nodeType":"YulTypedName","src":"4701:9:10","type":""},{"name":"value0","nativeSrc":"4713:6:10","nodeType":"YulTypedName","src":"4713:6:10","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4724:4:10","nodeType":"YulTypedName","src":"4724:4:10","type":""}],"src":"4635:214:10"},{"body":{"nativeSrc":"4921:263:10","nodeType":"YulBlock","src":"4921:263:10","statements":[{"body":{"nativeSrc":"4967:83:10","nodeType":"YulBlock","src":"4967:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"4969:77:10","nodeType":"YulIdentifier","src":"4969:77:10"},"nativeSrc":"4969:79:10","nodeType":"YulFunctionCall","src":"4969:79:10"},"nativeSrc":"4969:79:10","nodeType":"YulExpressionStatement","src":"4969:79:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"4942:7:10","nodeType":"YulIdentifier","src":"4942:7:10"},{"name":"headStart","nativeSrc":"4951:9:10","nodeType":"YulIdentifier","src":"4951:9:10"}],"functionName":{"name":"sub","nativeSrc":"4938:3:10","nodeType":"YulIdentifier","src":"4938:3:10"},"nativeSrc":"4938:23:10","nodeType":"YulFunctionCall","src":"4938:23:10"},{"kind":"number","nativeSrc":"4963:2:10","nodeType":"YulLiteral","src":"4963:2:10","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"4934:3:10","nodeType":"YulIdentifier","src":"4934:3:10"},"nativeSrc":"4934:32:10","nodeType":"YulFunctionCall","src":"4934:32:10"},"nativeSrc":"4931:119:10","nodeType":"YulIf","src":"4931:119:10"},{"nativeSrc":"5060:117:10","nodeType":"YulBlock","src":"5060:117:10","statements":[{"nativeSrc":"5075:15:10","nodeType":"YulVariableDeclaration","src":"5075:15:10","value":{"kind":"number","nativeSrc":"5089:1:10","nodeType":"YulLiteral","src":"5089:1:10","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"5079:6:10","nodeType":"YulTypedName","src":"5079:6:10","type":""}]},{"nativeSrc":"5104:63:10","nodeType":"YulAssignment","src":"5104:63:10","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5139:9:10","nodeType":"YulIdentifier","src":"5139:9:10"},{"name":"offset","nativeSrc":"5150:6:10","nodeType":"YulIdentifier","src":"5150:6:10"}],"functionName":{"name":"add","nativeSrc":"5135:3:10","nodeType":"YulIdentifier","src":"5135:3:10"},"nativeSrc":"5135:22:10","nodeType":"YulFunctionCall","src":"5135:22:10"},{"name":"dataEnd","nativeSrc":"5159:7:10","nodeType":"YulIdentifier","src":"5159:7:10"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"5114:20:10","nodeType":"YulIdentifier","src":"5114:20:10"},"nativeSrc":"5114:53:10","nodeType":"YulFunctionCall","src":"5114:53:10"},"variableNames":[{"name":"value0","nativeSrc":"5104:6:10","nodeType":"YulIdentifier","src":"5104:6:10"}]}]}]},"name":"abi_decode_tuple_t_uint256","nativeSrc":"4855:329:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4891:9:10","nodeType":"YulTypedName","src":"4891:9:10","type":""},{"name":"dataEnd","nativeSrc":"4902:7:10","nodeType":"YulTypedName","src":"4902:7:10","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"4914:6:10","nodeType":"YulTypedName","src":"4914:6:10","type":""}],"src":"4855:329:10"},{"body":{"nativeSrc":"5256:263:10","nodeType":"YulBlock","src":"5256:263:10","statements":[{"body":{"nativeSrc":"5302:83:10","nodeType":"YulBlock","src":"5302:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"5304:77:10","nodeType":"YulIdentifier","src":"5304:77:10"},"nativeSrc":"5304:79:10","nodeType":"YulFunctionCall","src":"5304:79:10"},"nativeSrc":"5304:79:10","nodeType":"YulExpressionStatement","src":"5304:79:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"5277:7:10","nodeType":"YulIdentifier","src":"5277:7:10"},{"name":"headStart","nativeSrc":"5286:9:10","nodeType":"YulIdentifier","src":"5286:9:10"}],"functionName":{"name":"sub","nativeSrc":"5273:3:10","nodeType":"YulIdentifier","src":"5273:3:10"},"nativeSrc":"5273:23:10","nodeType":"YulFunctionCall","src":"5273:23:10"},{"kind":"number","nativeSrc":"5298:2:10","nodeType":"YulLiteral","src":"5298:2:10","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"5269:3:10","nodeType":"YulIdentifier","src":"5269:3:10"},"nativeSrc":"5269:32:10","nodeType":"YulFunctionCall","src":"5269:32:10"},"nativeSrc":"5266:119:10","nodeType":"YulIf","src":"5266:119:10"},{"nativeSrc":"5395:117:10","nodeType":"YulBlock","src":"5395:117:10","statements":[{"nativeSrc":"5410:15:10","nodeType":"YulVariableDeclaration","src":"5410:15:10","value":{"kind":"number","nativeSrc":"5424:1:10","nodeType":"YulLiteral","src":"5424:1:10","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"5414:6:10","nodeType":"YulTypedName","src":"5414:6:10","type":""}]},{"nativeSrc":"5439:63:10","nodeType":"YulAssignment","src":"5439:63:10","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5474:9:10","nodeType":"YulIdentifier","src":"5474:9:10"},{"name":"offset","nativeSrc":"5485:6:10","nodeType":"YulIdentifier","src":"5485:6:10"}],"functionName":{"name":"add","nativeSrc":"5470:3:10","nodeType":"YulIdentifier","src":"5470:3:10"},"nativeSrc":"5470:22:10","nodeType":"YulFunctionCall","src":"5470:22:10"},{"name":"dataEnd","nativeSrc":"5494:7:10","nodeType":"YulIdentifier","src":"5494:7:10"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"5449:20:10","nodeType":"YulIdentifier","src":"5449:20:10"},"nativeSrc":"5449:53:10","nodeType":"YulFunctionCall","src":"5449:53:10"},"variableNames":[{"name":"value0","nativeSrc":"5439:6:10","nodeType":"YulIdentifier","src":"5439:6:10"}]}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"5190:329:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5226:9:10","nodeType":"YulTypedName","src":"5226:9:10","type":""},{"name":"dataEnd","nativeSrc":"5237:7:10","nodeType":"YulTypedName","src":"5237:7:10","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"5249:6:10","nodeType":"YulTypedName","src":"5249:6:10","type":""}],"src":"5190:329:10"},{"body":{"nativeSrc":"5590:53:10","nodeType":"YulBlock","src":"5590:53:10","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"5607:3:10","nodeType":"YulIdentifier","src":"5607:3:10"},{"arguments":[{"name":"value","nativeSrc":"5630:5:10","nodeType":"YulIdentifier","src":"5630:5:10"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"5612:17:10","nodeType":"YulIdentifier","src":"5612:17:10"},"nativeSrc":"5612:24:10","nodeType":"YulFunctionCall","src":"5612:24:10"}],"functionName":{"name":"mstore","nativeSrc":"5600:6:10","nodeType":"YulIdentifier","src":"5600:6:10"},"nativeSrc":"5600:37:10","nodeType":"YulFunctionCall","src":"5600:37:10"},"nativeSrc":"5600:37:10","nodeType":"YulExpressionStatement","src":"5600:37:10"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"5525:118:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5578:5:10","nodeType":"YulTypedName","src":"5578:5:10","type":""},{"name":"pos","nativeSrc":"5585:3:10","nodeType":"YulTypedName","src":"5585:3:10","type":""}],"src":"5525:118:10"},{"body":{"nativeSrc":"5747:124:10","nodeType":"YulBlock","src":"5747:124:10","statements":[{"nativeSrc":"5757:26:10","nodeType":"YulAssignment","src":"5757:26:10","value":{"arguments":[{"name":"headStart","nativeSrc":"5769:9:10","nodeType":"YulIdentifier","src":"5769:9:10"},{"kind":"number","nativeSrc":"5780:2:10","nodeType":"YulLiteral","src":"5780:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5765:3:10","nodeType":"YulIdentifier","src":"5765:3:10"},"nativeSrc":"5765:18:10","nodeType":"YulFunctionCall","src":"5765:18:10"},"variableNames":[{"name":"tail","nativeSrc":"5757:4:10","nodeType":"YulIdentifier","src":"5757:4:10"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"5837:6:10","nodeType":"YulIdentifier","src":"5837:6:10"},{"arguments":[{"name":"headStart","nativeSrc":"5850:9:10","nodeType":"YulIdentifier","src":"5850:9:10"},{"kind":"number","nativeSrc":"5861:1:10","nodeType":"YulLiteral","src":"5861:1:10","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"5846:3:10","nodeType":"YulIdentifier","src":"5846:3:10"},"nativeSrc":"5846:17:10","nodeType":"YulFunctionCall","src":"5846:17:10"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"5793:43:10","nodeType":"YulIdentifier","src":"5793:43:10"},"nativeSrc":"5793:71:10","nodeType":"YulFunctionCall","src":"5793:71:10"},"nativeSrc":"5793:71:10","nodeType":"YulExpressionStatement","src":"5793:71:10"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"5649:222:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5719:9:10","nodeType":"YulTypedName","src":"5719:9:10","type":""},{"name":"value0","nativeSrc":"5731:6:10","nodeType":"YulTypedName","src":"5731:6:10","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5742:4:10","nodeType":"YulTypedName","src":"5742:4:10","type":""}],"src":"5649:222:10"},{"body":{"nativeSrc":"5960:391:10","nodeType":"YulBlock","src":"5960:391:10","statements":[{"body":{"nativeSrc":"6006:83:10","nodeType":"YulBlock","src":"6006:83:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"6008:77:10","nodeType":"YulIdentifier","src":"6008:77:10"},"nativeSrc":"6008:79:10","nodeType":"YulFunctionCall","src":"6008:79:10"},"nativeSrc":"6008:79:10","nodeType":"YulExpressionStatement","src":"6008:79:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"5981:7:10","nodeType":"YulIdentifier","src":"5981:7:10"},{"name":"headStart","nativeSrc":"5990:9:10","nodeType":"YulIdentifier","src":"5990:9:10"}],"functionName":{"name":"sub","nativeSrc":"5977:3:10","nodeType":"YulIdentifier","src":"5977:3:10"},"nativeSrc":"5977:23:10","nodeType":"YulFunctionCall","src":"5977:23:10"},{"kind":"number","nativeSrc":"6002:2:10","nodeType":"YulLiteral","src":"6002:2:10","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"5973:3:10","nodeType":"YulIdentifier","src":"5973:3:10"},"nativeSrc":"5973:32:10","nodeType":"YulFunctionCall","src":"5973:32:10"},"nativeSrc":"5970:119:10","nodeType":"YulIf","src":"5970:119:10"},{"nativeSrc":"6099:117:10","nodeType":"YulBlock","src":"6099:117:10","statements":[{"nativeSrc":"6114:15:10","nodeType":"YulVariableDeclaration","src":"6114:15:10","value":{"kind":"number","nativeSrc":"6128:1:10","nodeType":"YulLiteral","src":"6128:1:10","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"6118:6:10","nodeType":"YulTypedName","src":"6118:6:10","type":""}]},{"nativeSrc":"6143:63:10","nodeType":"YulAssignment","src":"6143:63:10","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6178:9:10","nodeType":"YulIdentifier","src":"6178:9:10"},{"name":"offset","nativeSrc":"6189:6:10","nodeType":"YulIdentifier","src":"6189:6:10"}],"functionName":{"name":"add","nativeSrc":"6174:3:10","nodeType":"YulIdentifier","src":"6174:3:10"},"nativeSrc":"6174:22:10","nodeType":"YulFunctionCall","src":"6174:22:10"},{"name":"dataEnd","nativeSrc":"6198:7:10","nodeType":"YulIdentifier","src":"6198:7:10"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"6153:20:10","nodeType":"YulIdentifier","src":"6153:20:10"},"nativeSrc":"6153:53:10","nodeType":"YulFunctionCall","src":"6153:53:10"},"variableNames":[{"name":"value0","nativeSrc":"6143:6:10","nodeType":"YulIdentifier","src":"6143:6:10"}]}]},{"nativeSrc":"6226:118:10","nodeType":"YulBlock","src":"6226:118:10","statements":[{"nativeSrc":"6241:16:10","nodeType":"YulVariableDeclaration","src":"6241:16:10","value":{"kind":"number","nativeSrc":"6255:2:10","nodeType":"YulLiteral","src":"6255:2:10","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"6245:6:10","nodeType":"YulTypedName","src":"6245:6:10","type":""}]},{"nativeSrc":"6271:63:10","nodeType":"YulAssignment","src":"6271:63:10","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6306:9:10","nodeType":"YulIdentifier","src":"6306:9:10"},{"name":"offset","nativeSrc":"6317:6:10","nodeType":"YulIdentifier","src":"6317:6:10"}],"functionName":{"name":"add","nativeSrc":"6302:3:10","nodeType":"YulIdentifier","src":"6302:3:10"},"nativeSrc":"6302:22:10","nodeType":"YulFunctionCall","src":"6302:22:10"},{"name":"dataEnd","nativeSrc":"6326:7:10","nodeType":"YulIdentifier","src":"6326:7:10"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"6281:20:10","nodeType":"YulIdentifier","src":"6281:20:10"},"nativeSrc":"6281:53:10","nodeType":"YulFunctionCall","src":"6281:53:10"},"variableNames":[{"name":"value1","nativeSrc":"6271:6:10","nodeType":"YulIdentifier","src":"6271:6:10"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nativeSrc":"5877:474:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5922:9:10","nodeType":"YulTypedName","src":"5922:9:10","type":""},{"name":"dataEnd","nativeSrc":"5933:7:10","nodeType":"YulTypedName","src":"5933:7:10","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"5945:6:10","nodeType":"YulTypedName","src":"5945:6:10","type":""},{"name":"value1","nativeSrc":"5953:6:10","nodeType":"YulTypedName","src":"5953:6:10","type":""}],"src":"5877:474:10"},{"body":{"nativeSrc":"6385:152:10","nodeType":"YulBlock","src":"6385:152:10","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6402:1:10","nodeType":"YulLiteral","src":"6402:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"6405:77:10","nodeType":"YulLiteral","src":"6405:77:10","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"6395:6:10","nodeType":"YulIdentifier","src":"6395:6:10"},"nativeSrc":"6395:88:10","nodeType":"YulFunctionCall","src":"6395:88:10"},"nativeSrc":"6395:88:10","nodeType":"YulExpressionStatement","src":"6395:88:10"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6499:1:10","nodeType":"YulLiteral","src":"6499:1:10","type":"","value":"4"},{"kind":"number","nativeSrc":"6502:4:10","nodeType":"YulLiteral","src":"6502:4:10","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"6492:6:10","nodeType":"YulIdentifier","src":"6492:6:10"},"nativeSrc":"6492:15:10","nodeType":"YulFunctionCall","src":"6492:15:10"},"nativeSrc":"6492:15:10","nodeType":"YulExpressionStatement","src":"6492:15:10"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"6523:1:10","nodeType":"YulLiteral","src":"6523:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"6526:4:10","nodeType":"YulLiteral","src":"6526:4:10","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"6516:6:10","nodeType":"YulIdentifier","src":"6516:6:10"},"nativeSrc":"6516:15:10","nodeType":"YulFunctionCall","src":"6516:15:10"},"nativeSrc":"6516:15:10","nodeType":"YulExpressionStatement","src":"6516:15:10"}]},"name":"panic_error_0x22","nativeSrc":"6357:180:10","nodeType":"YulFunctionDefinition","src":"6357:180:10"},{"body":{"nativeSrc":"6594:269:10","nodeType":"YulBlock","src":"6594:269:10","statements":[{"nativeSrc":"6604:22:10","nodeType":"YulAssignment","src":"6604:22:10","value":{"arguments":[{"name":"data","nativeSrc":"6618:4:10","nodeType":"YulIdentifier","src":"6618:4:10"},{"kind":"number","nativeSrc":"6624:1:10","nodeType":"YulLiteral","src":"6624:1:10","type":"","value":"2"}],"functionName":{"name":"div","nativeSrc":"6614:3:10","nodeType":"YulIdentifier","src":"6614:3:10"},"nativeSrc":"6614:12:10","nodeType":"YulFunctionCall","src":"6614:12:10"},"variableNames":[{"name":"length","nativeSrc":"6604:6:10","nodeType":"YulIdentifier","src":"6604:6:10"}]},{"nativeSrc":"6635:38:10","nodeType":"YulVariableDeclaration","src":"6635:38:10","value":{"arguments":[{"name":"data","nativeSrc":"6665:4:10","nodeType":"YulIdentifier","src":"6665:4:10"},{"kind":"number","nativeSrc":"6671:1:10","nodeType":"YulLiteral","src":"6671:1:10","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"6661:3:10","nodeType":"YulIdentifier","src":"6661:3:10"},"nativeSrc":"6661:12:10","nodeType":"YulFunctionCall","src":"6661:12:10"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"6639:18:10","nodeType":"YulTypedName","src":"6639:18:10","type":""}]},{"body":{"nativeSrc":"6712:51:10","nodeType":"YulBlock","src":"6712:51:10","statements":[{"nativeSrc":"6726:27:10","nodeType":"YulAssignment","src":"6726:27:10","value":{"arguments":[{"name":"length","nativeSrc":"6740:6:10","nodeType":"YulIdentifier","src":"6740:6:10"},{"kind":"number","nativeSrc":"6748:4:10","nodeType":"YulLiteral","src":"6748:4:10","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"6736:3:10","nodeType":"YulIdentifier","src":"6736:3:10"},"nativeSrc":"6736:17:10","nodeType":"YulFunctionCall","src":"6736:17:10"},"variableNames":[{"name":"length","nativeSrc":"6726:6:10","nodeType":"YulIdentifier","src":"6726:6:10"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"6692:18:10","nodeType":"YulIdentifier","src":"6692:18:10"}],"functionName":{"name":"iszero","nativeSrc":"6685:6:10","nodeType":"YulIdentifier","src":"6685:6:10"},"nativeSrc":"6685:26:10","nodeType":"YulFunctionCall","src":"6685:26:10"},"nativeSrc":"6682:81:10","nodeType":"YulIf","src":"6682:81:10"},{"body":{"nativeSrc":"6815:42:10","nodeType":"YulBlock","src":"6815:42:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nativeSrc":"6829:16:10","nodeType":"YulIdentifier","src":"6829:16:10"},"nativeSrc":"6829:18:10","nodeType":"YulFunctionCall","src":"6829:18:10"},"nativeSrc":"6829:18:10","nodeType":"YulExpressionStatement","src":"6829:18:10"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"6779:18:10","nodeType":"YulIdentifier","src":"6779:18:10"},{"arguments":[{"name":"length","nativeSrc":"6802:6:10","nodeType":"YulIdentifier","src":"6802:6:10"},{"kind":"number","nativeSrc":"6810:2:10","nodeType":"YulLiteral","src":"6810:2:10","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"6799:2:10","nodeType":"YulIdentifier","src":"6799:2:10"},"nativeSrc":"6799:14:10","nodeType":"YulFunctionCall","src":"6799:14:10"}],"functionName":{"name":"eq","nativeSrc":"6776:2:10","nodeType":"YulIdentifier","src":"6776:2:10"},"nativeSrc":"6776:38:10","nodeType":"YulFunctionCall","src":"6776:38:10"},"nativeSrc":"6773:84:10","nodeType":"YulIf","src":"6773:84:10"}]},"name":"extract_byte_array_length","nativeSrc":"6543:320:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"6578:4:10","nodeType":"YulTypedName","src":"6578:4:10","type":""}],"returnVariables":[{"name":"length","nativeSrc":"6587:6:10","nodeType":"YulTypedName","src":"6587:6:10","type":""}],"src":"6543:320:10"},{"body":{"nativeSrc":"6975:71:10","nodeType":"YulBlock","src":"6975:71:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"6997:6:10","nodeType":"YulIdentifier","src":"6997:6:10"},{"kind":"number","nativeSrc":"7005:1:10","nodeType":"YulLiteral","src":"7005:1:10","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"6993:3:10","nodeType":"YulIdentifier","src":"6993:3:10"},"nativeSrc":"6993:14:10","nodeType":"YulFunctionCall","src":"6993:14:10"},{"hexValue":"466163746f72206d757374206265206174206c6561737420312e30","kind":"string","nativeSrc":"7009:29:10","nodeType":"YulLiteral","src":"7009:29:10","type":"","value":"Factor must be at least 1.0"}],"functionName":{"name":"mstore","nativeSrc":"6986:6:10","nodeType":"YulIdentifier","src":"6986:6:10"},"nativeSrc":"6986:53:10","nodeType":"YulFunctionCall","src":"6986:53:10"},"nativeSrc":"6986:53:10","nodeType":"YulExpressionStatement","src":"6986:53:10"}]},"name":"store_literal_in_memory_98d47a114e9ec161988edab8b58a654f584563d48ca8de8bde3ee7b5f933c731","nativeSrc":"6869:177:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"6967:6:10","nodeType":"YulTypedName","src":"6967:6:10","type":""}],"src":"6869:177:10"},{"body":{"nativeSrc":"7198:220:10","nodeType":"YulBlock","src":"7198:220:10","statements":[{"nativeSrc":"7208:74:10","nodeType":"YulAssignment","src":"7208:74:10","value":{"arguments":[{"name":"pos","nativeSrc":"7274:3:10","nodeType":"YulIdentifier","src":"7274:3:10"},{"kind":"number","nativeSrc":"7279:2:10","nodeType":"YulLiteral","src":"7279:2:10","type":"","value":"27"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"7215:58:10","nodeType":"YulIdentifier","src":"7215:58:10"},"nativeSrc":"7215:67:10","nodeType":"YulFunctionCall","src":"7215:67:10"},"variableNames":[{"name":"pos","nativeSrc":"7208:3:10","nodeType":"YulIdentifier","src":"7208:3:10"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"7380:3:10","nodeType":"YulIdentifier","src":"7380:3:10"}],"functionName":{"name":"store_literal_in_memory_98d47a114e9ec161988edab8b58a654f584563d48ca8de8bde3ee7b5f933c731","nativeSrc":"7291:88:10","nodeType":"YulIdentifier","src":"7291:88:10"},"nativeSrc":"7291:93:10","nodeType":"YulFunctionCall","src":"7291:93:10"},"nativeSrc":"7291:93:10","nodeType":"YulExpressionStatement","src":"7291:93:10"},{"nativeSrc":"7393:19:10","nodeType":"YulAssignment","src":"7393:19:10","value":{"arguments":[{"name":"pos","nativeSrc":"7404:3:10","nodeType":"YulIdentifier","src":"7404:3:10"},{"kind":"number","nativeSrc":"7409:2:10","nodeType":"YulLiteral","src":"7409:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7400:3:10","nodeType":"YulIdentifier","src":"7400:3:10"},"nativeSrc":"7400:12:10","nodeType":"YulFunctionCall","src":"7400:12:10"},"variableNames":[{"name":"end","nativeSrc":"7393:3:10","nodeType":"YulIdentifier","src":"7393:3:10"}]}]},"name":"abi_encode_t_stringliteral_98d47a114e9ec161988edab8b58a654f584563d48ca8de8bde3ee7b5f933c731_to_t_string_memory_ptr_fromStack","nativeSrc":"7052:366:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"7186:3:10","nodeType":"YulTypedName","src":"7186:3:10","type":""}],"returnVariables":[{"name":"end","nativeSrc":"7194:3:10","nodeType":"YulTypedName","src":"7194:3:10","type":""}],"src":"7052:366:10"},{"body":{"nativeSrc":"7595:248:10","nodeType":"YulBlock","src":"7595:248:10","statements":[{"nativeSrc":"7605:26:10","nodeType":"YulAssignment","src":"7605:26:10","value":{"arguments":[{"name":"headStart","nativeSrc":"7617:9:10","nodeType":"YulIdentifier","src":"7617:9:10"},{"kind":"number","nativeSrc":"7628:2:10","nodeType":"YulLiteral","src":"7628:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7613:3:10","nodeType":"YulIdentifier","src":"7613:3:10"},"nativeSrc":"7613:18:10","nodeType":"YulFunctionCall","src":"7613:18:10"},"variableNames":[{"name":"tail","nativeSrc":"7605:4:10","nodeType":"YulIdentifier","src":"7605:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7652:9:10","nodeType":"YulIdentifier","src":"7652:9:10"},{"kind":"number","nativeSrc":"7663:1:10","nodeType":"YulLiteral","src":"7663:1:10","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"7648:3:10","nodeType":"YulIdentifier","src":"7648:3:10"},"nativeSrc":"7648:17:10","nodeType":"YulFunctionCall","src":"7648:17:10"},{"arguments":[{"name":"tail","nativeSrc":"7671:4:10","nodeType":"YulIdentifier","src":"7671:4:10"},{"name":"headStart","nativeSrc":"7677:9:10","nodeType":"YulIdentifier","src":"7677:9:10"}],"functionName":{"name":"sub","nativeSrc":"7667:3:10","nodeType":"YulIdentifier","src":"7667:3:10"},"nativeSrc":"7667:20:10","nodeType":"YulFunctionCall","src":"7667:20:10"}],"functionName":{"name":"mstore","nativeSrc":"7641:6:10","nodeType":"YulIdentifier","src":"7641:6:10"},"nativeSrc":"7641:47:10","nodeType":"YulFunctionCall","src":"7641:47:10"},"nativeSrc":"7641:47:10","nodeType":"YulExpressionStatement","src":"7641:47:10"},{"nativeSrc":"7697:139:10","nodeType":"YulAssignment","src":"7697:139:10","value":{"arguments":[{"name":"tail","nativeSrc":"7831:4:10","nodeType":"YulIdentifier","src":"7831:4:10"}],"functionName":{"name":"abi_encode_t_stringliteral_98d47a114e9ec161988edab8b58a654f584563d48ca8de8bde3ee7b5f933c731_to_t_string_memory_ptr_fromStack","nativeSrc":"7705:124:10","nodeType":"YulIdentifier","src":"7705:124:10"},"nativeSrc":"7705:131:10","nodeType":"YulFunctionCall","src":"7705:131:10"},"variableNames":[{"name":"tail","nativeSrc":"7697:4:10","nodeType":"YulIdentifier","src":"7697:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_98d47a114e9ec161988edab8b58a654f584563d48ca8de8bde3ee7b5f933c731__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"7424:419:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7575:9:10","nodeType":"YulTypedName","src":"7575:9:10","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7590:4:10","nodeType":"YulTypedName","src":"7590:4:10","type":""}],"src":"7424:419:10"},{"body":{"nativeSrc":"7955:71:10","nodeType":"YulBlock","src":"7955:71:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"7977:6:10","nodeType":"YulIdentifier","src":"7977:6:10"},{"kind":"number","nativeSrc":"7985:1:10","nodeType":"YulLiteral","src":"7985:1:10","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"7973:3:10","nodeType":"YulIdentifier","src":"7973:3:10"},"nativeSrc":"7973:14:10","nodeType":"YulFunctionCall","src":"7973:14:10"},{"hexValue":"4d7573742073656e642045544820746f2062757920746f6b656e73","kind":"string","nativeSrc":"7989:29:10","nodeType":"YulLiteral","src":"7989:29:10","type":"","value":"Must send ETH to buy tokens"}],"functionName":{"name":"mstore","nativeSrc":"7966:6:10","nodeType":"YulIdentifier","src":"7966:6:10"},"nativeSrc":"7966:53:10","nodeType":"YulFunctionCall","src":"7966:53:10"},"nativeSrc":"7966:53:10","nodeType":"YulExpressionStatement","src":"7966:53:10"}]},"name":"store_literal_in_memory_30a3169537af6a19e878efd19359816e5050657af8f1bfb68949c44684f913de","nativeSrc":"7849:177:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"7947:6:10","nodeType":"YulTypedName","src":"7947:6:10","type":""}],"src":"7849:177:10"},{"body":{"nativeSrc":"8178:220:10","nodeType":"YulBlock","src":"8178:220:10","statements":[{"nativeSrc":"8188:74:10","nodeType":"YulAssignment","src":"8188:74:10","value":{"arguments":[{"name":"pos","nativeSrc":"8254:3:10","nodeType":"YulIdentifier","src":"8254:3:10"},{"kind":"number","nativeSrc":"8259:2:10","nodeType":"YulLiteral","src":"8259:2:10","type":"","value":"27"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"8195:58:10","nodeType":"YulIdentifier","src":"8195:58:10"},"nativeSrc":"8195:67:10","nodeType":"YulFunctionCall","src":"8195:67:10"},"variableNames":[{"name":"pos","nativeSrc":"8188:3:10","nodeType":"YulIdentifier","src":"8188:3:10"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"8360:3:10","nodeType":"YulIdentifier","src":"8360:3:10"}],"functionName":{"name":"store_literal_in_memory_30a3169537af6a19e878efd19359816e5050657af8f1bfb68949c44684f913de","nativeSrc":"8271:88:10","nodeType":"YulIdentifier","src":"8271:88:10"},"nativeSrc":"8271:93:10","nodeType":"YulFunctionCall","src":"8271:93:10"},"nativeSrc":"8271:93:10","nodeType":"YulExpressionStatement","src":"8271:93:10"},{"nativeSrc":"8373:19:10","nodeType":"YulAssignment","src":"8373:19:10","value":{"arguments":[{"name":"pos","nativeSrc":"8384:3:10","nodeType":"YulIdentifier","src":"8384:3:10"},{"kind":"number","nativeSrc":"8389:2:10","nodeType":"YulLiteral","src":"8389:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8380:3:10","nodeType":"YulIdentifier","src":"8380:3:10"},"nativeSrc":"8380:12:10","nodeType":"YulFunctionCall","src":"8380:12:10"},"variableNames":[{"name":"end","nativeSrc":"8373:3:10","nodeType":"YulIdentifier","src":"8373:3:10"}]}]},"name":"abi_encode_t_stringliteral_30a3169537af6a19e878efd19359816e5050657af8f1bfb68949c44684f913de_to_t_string_memory_ptr_fromStack","nativeSrc":"8032:366:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"8166:3:10","nodeType":"YulTypedName","src":"8166:3:10","type":""}],"returnVariables":[{"name":"end","nativeSrc":"8174:3:10","nodeType":"YulTypedName","src":"8174:3:10","type":""}],"src":"8032:366:10"},{"body":{"nativeSrc":"8575:248:10","nodeType":"YulBlock","src":"8575:248:10","statements":[{"nativeSrc":"8585:26:10","nodeType":"YulAssignment","src":"8585:26:10","value":{"arguments":[{"name":"headStart","nativeSrc":"8597:9:10","nodeType":"YulIdentifier","src":"8597:9:10"},{"kind":"number","nativeSrc":"8608:2:10","nodeType":"YulLiteral","src":"8608:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8593:3:10","nodeType":"YulIdentifier","src":"8593:3:10"},"nativeSrc":"8593:18:10","nodeType":"YulFunctionCall","src":"8593:18:10"},"variableNames":[{"name":"tail","nativeSrc":"8585:4:10","nodeType":"YulIdentifier","src":"8585:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8632:9:10","nodeType":"YulIdentifier","src":"8632:9:10"},{"kind":"number","nativeSrc":"8643:1:10","nodeType":"YulLiteral","src":"8643:1:10","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"8628:3:10","nodeType":"YulIdentifier","src":"8628:3:10"},"nativeSrc":"8628:17:10","nodeType":"YulFunctionCall","src":"8628:17:10"},{"arguments":[{"name":"tail","nativeSrc":"8651:4:10","nodeType":"YulIdentifier","src":"8651:4:10"},{"name":"headStart","nativeSrc":"8657:9:10","nodeType":"YulIdentifier","src":"8657:9:10"}],"functionName":{"name":"sub","nativeSrc":"8647:3:10","nodeType":"YulIdentifier","src":"8647:3:10"},"nativeSrc":"8647:20:10","nodeType":"YulFunctionCall","src":"8647:20:10"}],"functionName":{"name":"mstore","nativeSrc":"8621:6:10","nodeType":"YulIdentifier","src":"8621:6:10"},"nativeSrc":"8621:47:10","nodeType":"YulFunctionCall","src":"8621:47:10"},"nativeSrc":"8621:47:10","nodeType":"YulExpressionStatement","src":"8621:47:10"},{"nativeSrc":"8677:139:10","nodeType":"YulAssignment","src":"8677:139:10","value":{"arguments":[{"name":"tail","nativeSrc":"8811:4:10","nodeType":"YulIdentifier","src":"8811:4:10"}],"functionName":{"name":"abi_encode_t_stringliteral_30a3169537af6a19e878efd19359816e5050657af8f1bfb68949c44684f913de_to_t_string_memory_ptr_fromStack","nativeSrc":"8685:124:10","nodeType":"YulIdentifier","src":"8685:124:10"},"nativeSrc":"8685:131:10","nodeType":"YulFunctionCall","src":"8685:131:10"},"variableNames":[{"name":"tail","nativeSrc":"8677:4:10","nodeType":"YulIdentifier","src":"8677:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_30a3169537af6a19e878efd19359816e5050657af8f1bfb68949c44684f913de__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"8404:419:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8555:9:10","nodeType":"YulTypedName","src":"8555:9:10","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"8570:4:10","nodeType":"YulTypedName","src":"8570:4:10","type":""}],"src":"8404:419:10"},{"body":{"nativeSrc":"8935:67:10","nodeType":"YulBlock","src":"8935:67:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"8957:6:10","nodeType":"YulIdentifier","src":"8957:6:10"},{"kind":"number","nativeSrc":"8965:1:10","nodeType":"YulLiteral","src":"8965:1:10","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"8953:3:10","nodeType":"YulIdentifier","src":"8953:3:10"},"nativeSrc":"8953:14:10","nodeType":"YulFunctionCall","src":"8953:14:10"},{"hexValue":"50726963652063616c63756c6174696f6e206572726f72","kind":"string","nativeSrc":"8969:25:10","nodeType":"YulLiteral","src":"8969:25:10","type":"","value":"Price calculation error"}],"functionName":{"name":"mstore","nativeSrc":"8946:6:10","nodeType":"YulIdentifier","src":"8946:6:10"},"nativeSrc":"8946:49:10","nodeType":"YulFunctionCall","src":"8946:49:10"},"nativeSrc":"8946:49:10","nodeType":"YulExpressionStatement","src":"8946:49:10"}]},"name":"store_literal_in_memory_4d24bb6fdc16272faa3d9a86eb0993aea2ad4ea79256f2a3f0b4914367982e44","nativeSrc":"8829:173:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"8927:6:10","nodeType":"YulTypedName","src":"8927:6:10","type":""}],"src":"8829:173:10"},{"body":{"nativeSrc":"9154:220:10","nodeType":"YulBlock","src":"9154:220:10","statements":[{"nativeSrc":"9164:74:10","nodeType":"YulAssignment","src":"9164:74:10","value":{"arguments":[{"name":"pos","nativeSrc":"9230:3:10","nodeType":"YulIdentifier","src":"9230:3:10"},{"kind":"number","nativeSrc":"9235:2:10","nodeType":"YulLiteral","src":"9235:2:10","type":"","value":"23"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"9171:58:10","nodeType":"YulIdentifier","src":"9171:58:10"},"nativeSrc":"9171:67:10","nodeType":"YulFunctionCall","src":"9171:67:10"},"variableNames":[{"name":"pos","nativeSrc":"9164:3:10","nodeType":"YulIdentifier","src":"9164:3:10"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"9336:3:10","nodeType":"YulIdentifier","src":"9336:3:10"}],"functionName":{"name":"store_literal_in_memory_4d24bb6fdc16272faa3d9a86eb0993aea2ad4ea79256f2a3f0b4914367982e44","nativeSrc":"9247:88:10","nodeType":"YulIdentifier","src":"9247:88:10"},"nativeSrc":"9247:93:10","nodeType":"YulFunctionCall","src":"9247:93:10"},"nativeSrc":"9247:93:10","nodeType":"YulExpressionStatement","src":"9247:93:10"},{"nativeSrc":"9349:19:10","nodeType":"YulAssignment","src":"9349:19:10","value":{"arguments":[{"name":"pos","nativeSrc":"9360:3:10","nodeType":"YulIdentifier","src":"9360:3:10"},{"kind":"number","nativeSrc":"9365:2:10","nodeType":"YulLiteral","src":"9365:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9356:3:10","nodeType":"YulIdentifier","src":"9356:3:10"},"nativeSrc":"9356:12:10","nodeType":"YulFunctionCall","src":"9356:12:10"},"variableNames":[{"name":"end","nativeSrc":"9349:3:10","nodeType":"YulIdentifier","src":"9349:3:10"}]}]},"name":"abi_encode_t_stringliteral_4d24bb6fdc16272faa3d9a86eb0993aea2ad4ea79256f2a3f0b4914367982e44_to_t_string_memory_ptr_fromStack","nativeSrc":"9008:366:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"9142:3:10","nodeType":"YulTypedName","src":"9142:3:10","type":""}],"returnVariables":[{"name":"end","nativeSrc":"9150:3:10","nodeType":"YulTypedName","src":"9150:3:10","type":""}],"src":"9008:366:10"},{"body":{"nativeSrc":"9551:248:10","nodeType":"YulBlock","src":"9551:248:10","statements":[{"nativeSrc":"9561:26:10","nodeType":"YulAssignment","src":"9561:26:10","value":{"arguments":[{"name":"headStart","nativeSrc":"9573:9:10","nodeType":"YulIdentifier","src":"9573:9:10"},{"kind":"number","nativeSrc":"9584:2:10","nodeType":"YulLiteral","src":"9584:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9569:3:10","nodeType":"YulIdentifier","src":"9569:3:10"},"nativeSrc":"9569:18:10","nodeType":"YulFunctionCall","src":"9569:18:10"},"variableNames":[{"name":"tail","nativeSrc":"9561:4:10","nodeType":"YulIdentifier","src":"9561:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9608:9:10","nodeType":"YulIdentifier","src":"9608:9:10"},{"kind":"number","nativeSrc":"9619:1:10","nodeType":"YulLiteral","src":"9619:1:10","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"9604:3:10","nodeType":"YulIdentifier","src":"9604:3:10"},"nativeSrc":"9604:17:10","nodeType":"YulFunctionCall","src":"9604:17:10"},{"arguments":[{"name":"tail","nativeSrc":"9627:4:10","nodeType":"YulIdentifier","src":"9627:4:10"},{"name":"headStart","nativeSrc":"9633:9:10","nodeType":"YulIdentifier","src":"9633:9:10"}],"functionName":{"name":"sub","nativeSrc":"9623:3:10","nodeType":"YulIdentifier","src":"9623:3:10"},"nativeSrc":"9623:20:10","nodeType":"YulFunctionCall","src":"9623:20:10"}],"functionName":{"name":"mstore","nativeSrc":"9597:6:10","nodeType":"YulIdentifier","src":"9597:6:10"},"nativeSrc":"9597:47:10","nodeType":"YulFunctionCall","src":"9597:47:10"},"nativeSrc":"9597:47:10","nodeType":"YulExpressionStatement","src":"9597:47:10"},{"nativeSrc":"9653:139:10","nodeType":"YulAssignment","src":"9653:139:10","value":{"arguments":[{"name":"tail","nativeSrc":"9787:4:10","nodeType":"YulIdentifier","src":"9787:4:10"}],"functionName":{"name":"abi_encode_t_stringliteral_4d24bb6fdc16272faa3d9a86eb0993aea2ad4ea79256f2a3f0b4914367982e44_to_t_string_memory_ptr_fromStack","nativeSrc":"9661:124:10","nodeType":"YulIdentifier","src":"9661:124:10"},"nativeSrc":"9661:131:10","nodeType":"YulFunctionCall","src":"9661:131:10"},"variableNames":[{"name":"tail","nativeSrc":"9653:4:10","nodeType":"YulIdentifier","src":"9653:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_4d24bb6fdc16272faa3d9a86eb0993aea2ad4ea79256f2a3f0b4914367982e44__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"9380:419:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9531:9:10","nodeType":"YulTypedName","src":"9531:9:10","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"9546:4:10","nodeType":"YulTypedName","src":"9546:4:10","type":""}],"src":"9380:419:10"},{"body":{"nativeSrc":"9833:152:10","nodeType":"YulBlock","src":"9833:152:10","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"9850:1:10","nodeType":"YulLiteral","src":"9850:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"9853:77:10","nodeType":"YulLiteral","src":"9853:77:10","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"9843:6:10","nodeType":"YulIdentifier","src":"9843:6:10"},"nativeSrc":"9843:88:10","nodeType":"YulFunctionCall","src":"9843:88:10"},"nativeSrc":"9843:88:10","nodeType":"YulExpressionStatement","src":"9843:88:10"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"9947:1:10","nodeType":"YulLiteral","src":"9947:1:10","type":"","value":"4"},{"kind":"number","nativeSrc":"9950:4:10","nodeType":"YulLiteral","src":"9950:4:10","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"9940:6:10","nodeType":"YulIdentifier","src":"9940:6:10"},"nativeSrc":"9940:15:10","nodeType":"YulFunctionCall","src":"9940:15:10"},"nativeSrc":"9940:15:10","nodeType":"YulExpressionStatement","src":"9940:15:10"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"9971:1:10","nodeType":"YulLiteral","src":"9971:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"9974:4:10","nodeType":"YulLiteral","src":"9974:4:10","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"9964:6:10","nodeType":"YulIdentifier","src":"9964:6:10"},"nativeSrc":"9964:15:10","nodeType":"YulFunctionCall","src":"9964:15:10"},"nativeSrc":"9964:15:10","nodeType":"YulExpressionStatement","src":"9964:15:10"}]},"name":"panic_error_0x11","nativeSrc":"9805:180:10","nodeType":"YulFunctionDefinition","src":"9805:180:10"},{"body":{"nativeSrc":"10039:362:10","nodeType":"YulBlock","src":"10039:362:10","statements":[{"nativeSrc":"10049:25:10","nodeType":"YulAssignment","src":"10049:25:10","value":{"arguments":[{"name":"x","nativeSrc":"10072:1:10","nodeType":"YulIdentifier","src":"10072:1:10"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"10054:17:10","nodeType":"YulIdentifier","src":"10054:17:10"},"nativeSrc":"10054:20:10","nodeType":"YulFunctionCall","src":"10054:20:10"},"variableNames":[{"name":"x","nativeSrc":"10049:1:10","nodeType":"YulIdentifier","src":"10049:1:10"}]},{"nativeSrc":"10083:25:10","nodeType":"YulAssignment","src":"10083:25:10","value":{"arguments":[{"name":"y","nativeSrc":"10106:1:10","nodeType":"YulIdentifier","src":"10106:1:10"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"10088:17:10","nodeType":"YulIdentifier","src":"10088:17:10"},"nativeSrc":"10088:20:10","nodeType":"YulFunctionCall","src":"10088:20:10"},"variableNames":[{"name":"y","nativeSrc":"10083:1:10","nodeType":"YulIdentifier","src":"10083:1:10"}]},{"nativeSrc":"10117:28:10","nodeType":"YulVariableDeclaration","src":"10117:28:10","value":{"arguments":[{"name":"x","nativeSrc":"10140:1:10","nodeType":"YulIdentifier","src":"10140:1:10"},{"name":"y","nativeSrc":"10143:1:10","nodeType":"YulIdentifier","src":"10143:1:10"}],"functionName":{"name":"mul","nativeSrc":"10136:3:10","nodeType":"YulIdentifier","src":"10136:3:10"},"nativeSrc":"10136:9:10","nodeType":"YulFunctionCall","src":"10136:9:10"},"variables":[{"name":"product_raw","nativeSrc":"10121:11:10","nodeType":"YulTypedName","src":"10121:11:10","type":""}]},{"nativeSrc":"10154:41:10","nodeType":"YulAssignment","src":"10154:41:10","value":{"arguments":[{"name":"product_raw","nativeSrc":"10183:11:10","nodeType":"YulIdentifier","src":"10183:11:10"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"10165:17:10","nodeType":"YulIdentifier","src":"10165:17:10"},"nativeSrc":"10165:30:10","nodeType":"YulFunctionCall","src":"10165:30:10"},"variableNames":[{"name":"product","nativeSrc":"10154:7:10","nodeType":"YulIdentifier","src":"10154:7:10"}]},{"body":{"nativeSrc":"10372:22:10","nodeType":"YulBlock","src":"10372:22:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"10374:16:10","nodeType":"YulIdentifier","src":"10374:16:10"},"nativeSrc":"10374:18:10","nodeType":"YulFunctionCall","src":"10374:18:10"},"nativeSrc":"10374:18:10","nodeType":"YulExpressionStatement","src":"10374:18:10"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nativeSrc":"10305:1:10","nodeType":"YulIdentifier","src":"10305:1:10"}],"functionName":{"name":"iszero","nativeSrc":"10298:6:10","nodeType":"YulIdentifier","src":"10298:6:10"},"nativeSrc":"10298:9:10","nodeType":"YulFunctionCall","src":"10298:9:10"},{"arguments":[{"name":"y","nativeSrc":"10328:1:10","nodeType":"YulIdentifier","src":"10328:1:10"},{"arguments":[{"name":"product","nativeSrc":"10335:7:10","nodeType":"YulIdentifier","src":"10335:7:10"},{"name":"x","nativeSrc":"10344:1:10","nodeType":"YulIdentifier","src":"10344:1:10"}],"functionName":{"name":"div","nativeSrc":"10331:3:10","nodeType":"YulIdentifier","src":"10331:3:10"},"nativeSrc":"10331:15:10","nodeType":"YulFunctionCall","src":"10331:15:10"}],"functionName":{"name":"eq","nativeSrc":"10325:2:10","nodeType":"YulIdentifier","src":"10325:2:10"},"nativeSrc":"10325:22:10","nodeType":"YulFunctionCall","src":"10325:22:10"}],"functionName":{"name":"or","nativeSrc":"10278:2:10","nodeType":"YulIdentifier","src":"10278:2:10"},"nativeSrc":"10278:83:10","nodeType":"YulFunctionCall","src":"10278:83:10"}],"functionName":{"name":"iszero","nativeSrc":"10258:6:10","nodeType":"YulIdentifier","src":"10258:6:10"},"nativeSrc":"10258:113:10","nodeType":"YulFunctionCall","src":"10258:113:10"},"nativeSrc":"10255:139:10","nodeType":"YulIf","src":"10255:139:10"}]},"name":"checked_mul_t_uint256","nativeSrc":"9991:410:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"10022:1:10","nodeType":"YulTypedName","src":"10022:1:10","type":""},{"name":"y","nativeSrc":"10025:1:10","nodeType":"YulTypedName","src":"10025:1:10","type":""}],"returnVariables":[{"name":"product","nativeSrc":"10031:7:10","nodeType":"YulTypedName","src":"10031:7:10","type":""}],"src":"9991:410:10"},{"body":{"nativeSrc":"10435:152:10","nodeType":"YulBlock","src":"10435:152:10","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"10452:1:10","nodeType":"YulLiteral","src":"10452:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"10455:77:10","nodeType":"YulLiteral","src":"10455:77:10","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"10445:6:10","nodeType":"YulIdentifier","src":"10445:6:10"},"nativeSrc":"10445:88:10","nodeType":"YulFunctionCall","src":"10445:88:10"},"nativeSrc":"10445:88:10","nodeType":"YulExpressionStatement","src":"10445:88:10"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"10549:1:10","nodeType":"YulLiteral","src":"10549:1:10","type":"","value":"4"},{"kind":"number","nativeSrc":"10552:4:10","nodeType":"YulLiteral","src":"10552:4:10","type":"","value":"0x12"}],"functionName":{"name":"mstore","nativeSrc":"10542:6:10","nodeType":"YulIdentifier","src":"10542:6:10"},"nativeSrc":"10542:15:10","nodeType":"YulFunctionCall","src":"10542:15:10"},"nativeSrc":"10542:15:10","nodeType":"YulExpressionStatement","src":"10542:15:10"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"10573:1:10","nodeType":"YulLiteral","src":"10573:1:10","type":"","value":"0"},{"kind":"number","nativeSrc":"10576:4:10","nodeType":"YulLiteral","src":"10576:4:10","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"10566:6:10","nodeType":"YulIdentifier","src":"10566:6:10"},"nativeSrc":"10566:15:10","nodeType":"YulFunctionCall","src":"10566:15:10"},"nativeSrc":"10566:15:10","nodeType":"YulExpressionStatement","src":"10566:15:10"}]},"name":"panic_error_0x12","nativeSrc":"10407:180:10","nodeType":"YulFunctionDefinition","src":"10407:180:10"},{"body":{"nativeSrc":"10635:143:10","nodeType":"YulBlock","src":"10635:143:10","statements":[{"nativeSrc":"10645:25:10","nodeType":"YulAssignment","src":"10645:25:10","value":{"arguments":[{"name":"x","nativeSrc":"10668:1:10","nodeType":"YulIdentifier","src":"10668:1:10"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"10650:17:10","nodeType":"YulIdentifier","src":"10650:17:10"},"nativeSrc":"10650:20:10","nodeType":"YulFunctionCall","src":"10650:20:10"},"variableNames":[{"name":"x","nativeSrc":"10645:1:10","nodeType":"YulIdentifier","src":"10645:1:10"}]},{"nativeSrc":"10679:25:10","nodeType":"YulAssignment","src":"10679:25:10","value":{"arguments":[{"name":"y","nativeSrc":"10702:1:10","nodeType":"YulIdentifier","src":"10702:1:10"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"10684:17:10","nodeType":"YulIdentifier","src":"10684:17:10"},"nativeSrc":"10684:20:10","nodeType":"YulFunctionCall","src":"10684:20:10"},"variableNames":[{"name":"y","nativeSrc":"10679:1:10","nodeType":"YulIdentifier","src":"10679:1:10"}]},{"body":{"nativeSrc":"10726:22:10","nodeType":"YulBlock","src":"10726:22:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nativeSrc":"10728:16:10","nodeType":"YulIdentifier","src":"10728:16:10"},"nativeSrc":"10728:18:10","nodeType":"YulFunctionCall","src":"10728:18:10"},"nativeSrc":"10728:18:10","nodeType":"YulExpressionStatement","src":"10728:18:10"}]},"condition":{"arguments":[{"name":"y","nativeSrc":"10723:1:10","nodeType":"YulIdentifier","src":"10723:1:10"}],"functionName":{"name":"iszero","nativeSrc":"10716:6:10","nodeType":"YulIdentifier","src":"10716:6:10"},"nativeSrc":"10716:9:10","nodeType":"YulFunctionCall","src":"10716:9:10"},"nativeSrc":"10713:35:10","nodeType":"YulIf","src":"10713:35:10"},{"nativeSrc":"10758:14:10","nodeType":"YulAssignment","src":"10758:14:10","value":{"arguments":[{"name":"x","nativeSrc":"10767:1:10","nodeType":"YulIdentifier","src":"10767:1:10"},{"name":"y","nativeSrc":"10770:1:10","nodeType":"YulIdentifier","src":"10770:1:10"}],"functionName":{"name":"div","nativeSrc":"10763:3:10","nodeType":"YulIdentifier","src":"10763:3:10"},"nativeSrc":"10763:9:10","nodeType":"YulFunctionCall","src":"10763:9:10"},"variableNames":[{"name":"r","nativeSrc":"10758:1:10","nodeType":"YulIdentifier","src":"10758:1:10"}]}]},"name":"checked_div_t_uint256","nativeSrc":"10593:185:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"10624:1:10","nodeType":"YulTypedName","src":"10624:1:10","type":""},{"name":"y","nativeSrc":"10627:1:10","nodeType":"YulTypedName","src":"10627:1:10","type":""}],"returnVariables":[{"name":"r","nativeSrc":"10633:1:10","nodeType":"YulTypedName","src":"10633:1:10","type":""}],"src":"10593:185:10"},{"body":{"nativeSrc":"10828:147:10","nodeType":"YulBlock","src":"10828:147:10","statements":[{"nativeSrc":"10838:25:10","nodeType":"YulAssignment","src":"10838:25:10","value":{"arguments":[{"name":"x","nativeSrc":"10861:1:10","nodeType":"YulIdentifier","src":"10861:1:10"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"10843:17:10","nodeType":"YulIdentifier","src":"10843:17:10"},"nativeSrc":"10843:20:10","nodeType":"YulFunctionCall","src":"10843:20:10"},"variableNames":[{"name":"x","nativeSrc":"10838:1:10","nodeType":"YulIdentifier","src":"10838:1:10"}]},{"nativeSrc":"10872:25:10","nodeType":"YulAssignment","src":"10872:25:10","value":{"arguments":[{"name":"y","nativeSrc":"10895:1:10","nodeType":"YulIdentifier","src":"10895:1:10"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"10877:17:10","nodeType":"YulIdentifier","src":"10877:17:10"},"nativeSrc":"10877:20:10","nodeType":"YulFunctionCall","src":"10877:20:10"},"variableNames":[{"name":"y","nativeSrc":"10872:1:10","nodeType":"YulIdentifier","src":"10872:1:10"}]},{"nativeSrc":"10906:16:10","nodeType":"YulAssignment","src":"10906:16:10","value":{"arguments":[{"name":"x","nativeSrc":"10917:1:10","nodeType":"YulIdentifier","src":"10917:1:10"},{"name":"y","nativeSrc":"10920:1:10","nodeType":"YulIdentifier","src":"10920:1:10"}],"functionName":{"name":"add","nativeSrc":"10913:3:10","nodeType":"YulIdentifier","src":"10913:3:10"},"nativeSrc":"10913:9:10","nodeType":"YulFunctionCall","src":"10913:9:10"},"variableNames":[{"name":"sum","nativeSrc":"10906:3:10","nodeType":"YulIdentifier","src":"10906:3:10"}]},{"body":{"nativeSrc":"10946:22:10","nodeType":"YulBlock","src":"10946:22:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"10948:16:10","nodeType":"YulIdentifier","src":"10948:16:10"},"nativeSrc":"10948:18:10","nodeType":"YulFunctionCall","src":"10948:18:10"},"nativeSrc":"10948:18:10","nodeType":"YulExpressionStatement","src":"10948:18:10"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"10938:1:10","nodeType":"YulIdentifier","src":"10938:1:10"},{"name":"sum","nativeSrc":"10941:3:10","nodeType":"YulIdentifier","src":"10941:3:10"}],"functionName":{"name":"gt","nativeSrc":"10935:2:10","nodeType":"YulIdentifier","src":"10935:2:10"},"nativeSrc":"10935:10:10","nodeType":"YulFunctionCall","src":"10935:10:10"},"nativeSrc":"10932:36:10","nodeType":"YulIf","src":"10932:36:10"}]},"name":"checked_add_t_uint256","nativeSrc":"10784:191:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"10815:1:10","nodeType":"YulTypedName","src":"10815:1:10","type":""},{"name":"y","nativeSrc":"10818:1:10","nodeType":"YulTypedName","src":"10818:1:10","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"10824:3:10","nodeType":"YulTypedName","src":"10824:3:10","type":""}],"src":"10784:191:10"},{"body":{"nativeSrc":"11026:149:10","nodeType":"YulBlock","src":"11026:149:10","statements":[{"nativeSrc":"11036:25:10","nodeType":"YulAssignment","src":"11036:25:10","value":{"arguments":[{"name":"x","nativeSrc":"11059:1:10","nodeType":"YulIdentifier","src":"11059:1:10"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"11041:17:10","nodeType":"YulIdentifier","src":"11041:17:10"},"nativeSrc":"11041:20:10","nodeType":"YulFunctionCall","src":"11041:20:10"},"variableNames":[{"name":"x","nativeSrc":"11036:1:10","nodeType":"YulIdentifier","src":"11036:1:10"}]},{"nativeSrc":"11070:25:10","nodeType":"YulAssignment","src":"11070:25:10","value":{"arguments":[{"name":"y","nativeSrc":"11093:1:10","nodeType":"YulIdentifier","src":"11093:1:10"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"11075:17:10","nodeType":"YulIdentifier","src":"11075:17:10"},"nativeSrc":"11075:20:10","nodeType":"YulFunctionCall","src":"11075:20:10"},"variableNames":[{"name":"y","nativeSrc":"11070:1:10","nodeType":"YulIdentifier","src":"11070:1:10"}]},{"nativeSrc":"11104:17:10","nodeType":"YulAssignment","src":"11104:17:10","value":{"arguments":[{"name":"x","nativeSrc":"11116:1:10","nodeType":"YulIdentifier","src":"11116:1:10"},{"name":"y","nativeSrc":"11119:1:10","nodeType":"YulIdentifier","src":"11119:1:10"}],"functionName":{"name":"sub","nativeSrc":"11112:3:10","nodeType":"YulIdentifier","src":"11112:3:10"},"nativeSrc":"11112:9:10","nodeType":"YulFunctionCall","src":"11112:9:10"},"variableNames":[{"name":"diff","nativeSrc":"11104:4:10","nodeType":"YulIdentifier","src":"11104:4:10"}]},{"body":{"nativeSrc":"11146:22:10","nodeType":"YulBlock","src":"11146:22:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"11148:16:10","nodeType":"YulIdentifier","src":"11148:16:10"},"nativeSrc":"11148:18:10","nodeType":"YulFunctionCall","src":"11148:18:10"},"nativeSrc":"11148:18:10","nodeType":"YulExpressionStatement","src":"11148:18:10"}]},"condition":{"arguments":[{"name":"diff","nativeSrc":"11137:4:10","nodeType":"YulIdentifier","src":"11137:4:10"},{"name":"x","nativeSrc":"11143:1:10","nodeType":"YulIdentifier","src":"11143:1:10"}],"functionName":{"name":"gt","nativeSrc":"11134:2:10","nodeType":"YulIdentifier","src":"11134:2:10"},"nativeSrc":"11134:11:10","nodeType":"YulFunctionCall","src":"11134:11:10"},"nativeSrc":"11131:37:10","nodeType":"YulIf","src":"11131:37:10"}]},"name":"checked_sub_t_uint256","nativeSrc":"10981:194:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"11012:1:10","nodeType":"YulTypedName","src":"11012:1:10","type":""},{"name":"y","nativeSrc":"11015:1:10","nodeType":"YulTypedName","src":"11015:1:10","type":""}],"returnVariables":[{"name":"diff","nativeSrc":"11021:4:10","nodeType":"YulTypedName","src":"11021:4:10","type":""}],"src":"10981:194:10"},{"body":{"nativeSrc":"11287:118:10","nodeType":"YulBlock","src":"11287:118:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"11309:6:10","nodeType":"YulIdentifier","src":"11309:6:10"},{"kind":"number","nativeSrc":"11317:1:10","nodeType":"YulLiteral","src":"11317:1:10","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"11305:3:10","nodeType":"YulIdentifier","src":"11305:3:10"},"nativeSrc":"11305:14:10","nodeType":"YulFunctionCall","src":"11305:14:10"},{"hexValue":"4e6f7420656e6f756768204554482073656e7420746f2062757920616e792074","kind":"string","nativeSrc":"11321:34:10","nodeType":"YulLiteral","src":"11321:34:10","type":"","value":"Not enough ETH sent to buy any t"}],"functionName":{"name":"mstore","nativeSrc":"11298:6:10","nodeType":"YulIdentifier","src":"11298:6:10"},"nativeSrc":"11298:58:10","nodeType":"YulFunctionCall","src":"11298:58:10"},"nativeSrc":"11298:58:10","nodeType":"YulExpressionStatement","src":"11298:58:10"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"11377:6:10","nodeType":"YulIdentifier","src":"11377:6:10"},{"kind":"number","nativeSrc":"11385:2:10","nodeType":"YulLiteral","src":"11385:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11373:3:10","nodeType":"YulIdentifier","src":"11373:3:10"},"nativeSrc":"11373:15:10","nodeType":"YulFunctionCall","src":"11373:15:10"},{"hexValue":"6f6b656e73","kind":"string","nativeSrc":"11390:7:10","nodeType":"YulLiteral","src":"11390:7:10","type":"","value":"okens"}],"functionName":{"name":"mstore","nativeSrc":"11366:6:10","nodeType":"YulIdentifier","src":"11366:6:10"},"nativeSrc":"11366:32:10","nodeType":"YulFunctionCall","src":"11366:32:10"},"nativeSrc":"11366:32:10","nodeType":"YulExpressionStatement","src":"11366:32:10"}]},"name":"store_literal_in_memory_2635e0c891a3ce0373fd39c7acb0b02d0a3d29985ab4f087fed4e787bad23846","nativeSrc":"11181:224:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"11279:6:10","nodeType":"YulTypedName","src":"11279:6:10","type":""}],"src":"11181:224:10"},{"body":{"nativeSrc":"11557:220:10","nodeType":"YulBlock","src":"11557:220:10","statements":[{"nativeSrc":"11567:74:10","nodeType":"YulAssignment","src":"11567:74:10","value":{"arguments":[{"name":"pos","nativeSrc":"11633:3:10","nodeType":"YulIdentifier","src":"11633:3:10"},{"kind":"number","nativeSrc":"11638:2:10","nodeType":"YulLiteral","src":"11638:2:10","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"11574:58:10","nodeType":"YulIdentifier","src":"11574:58:10"},"nativeSrc":"11574:67:10","nodeType":"YulFunctionCall","src":"11574:67:10"},"variableNames":[{"name":"pos","nativeSrc":"11567:3:10","nodeType":"YulIdentifier","src":"11567:3:10"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"11739:3:10","nodeType":"YulIdentifier","src":"11739:3:10"}],"functionName":{"name":"store_literal_in_memory_2635e0c891a3ce0373fd39c7acb0b02d0a3d29985ab4f087fed4e787bad23846","nativeSrc":"11650:88:10","nodeType":"YulIdentifier","src":"11650:88:10"},"nativeSrc":"11650:93:10","nodeType":"YulFunctionCall","src":"11650:93:10"},"nativeSrc":"11650:93:10","nodeType":"YulExpressionStatement","src":"11650:93:10"},{"nativeSrc":"11752:19:10","nodeType":"YulAssignment","src":"11752:19:10","value":{"arguments":[{"name":"pos","nativeSrc":"11763:3:10","nodeType":"YulIdentifier","src":"11763:3:10"},{"kind":"number","nativeSrc":"11768:2:10","nodeType":"YulLiteral","src":"11768:2:10","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"11759:3:10","nodeType":"YulIdentifier","src":"11759:3:10"},"nativeSrc":"11759:12:10","nodeType":"YulFunctionCall","src":"11759:12:10"},"variableNames":[{"name":"end","nativeSrc":"11752:3:10","nodeType":"YulIdentifier","src":"11752:3:10"}]}]},"name":"abi_encode_t_stringliteral_2635e0c891a3ce0373fd39c7acb0b02d0a3d29985ab4f087fed4e787bad23846_to_t_string_memory_ptr_fromStack","nativeSrc":"11411:366:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"11545:3:10","nodeType":"YulTypedName","src":"11545:3:10","type":""}],"returnVariables":[{"name":"end","nativeSrc":"11553:3:10","nodeType":"YulTypedName","src":"11553:3:10","type":""}],"src":"11411:366:10"},{"body":{"nativeSrc":"11954:248:10","nodeType":"YulBlock","src":"11954:248:10","statements":[{"nativeSrc":"11964:26:10","nodeType":"YulAssignment","src":"11964:26:10","value":{"arguments":[{"name":"headStart","nativeSrc":"11976:9:10","nodeType":"YulIdentifier","src":"11976:9:10"},{"kind":"number","nativeSrc":"11987:2:10","nodeType":"YulLiteral","src":"11987:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11972:3:10","nodeType":"YulIdentifier","src":"11972:3:10"},"nativeSrc":"11972:18:10","nodeType":"YulFunctionCall","src":"11972:18:10"},"variableNames":[{"name":"tail","nativeSrc":"11964:4:10","nodeType":"YulIdentifier","src":"11964:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12011:9:10","nodeType":"YulIdentifier","src":"12011:9:10"},{"kind":"number","nativeSrc":"12022:1:10","nodeType":"YulLiteral","src":"12022:1:10","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"12007:3:10","nodeType":"YulIdentifier","src":"12007:3:10"},"nativeSrc":"12007:17:10","nodeType":"YulFunctionCall","src":"12007:17:10"},{"arguments":[{"name":"tail","nativeSrc":"12030:4:10","nodeType":"YulIdentifier","src":"12030:4:10"},{"name":"headStart","nativeSrc":"12036:9:10","nodeType":"YulIdentifier","src":"12036:9:10"}],"functionName":{"name":"sub","nativeSrc":"12026:3:10","nodeType":"YulIdentifier","src":"12026:3:10"},"nativeSrc":"12026:20:10","nodeType":"YulFunctionCall","src":"12026:20:10"}],"functionName":{"name":"mstore","nativeSrc":"12000:6:10","nodeType":"YulIdentifier","src":"12000:6:10"},"nativeSrc":"12000:47:10","nodeType":"YulFunctionCall","src":"12000:47:10"},"nativeSrc":"12000:47:10","nodeType":"YulExpressionStatement","src":"12000:47:10"},{"nativeSrc":"12056:139:10","nodeType":"YulAssignment","src":"12056:139:10","value":{"arguments":[{"name":"tail","nativeSrc":"12190:4:10","nodeType":"YulIdentifier","src":"12190:4:10"}],"functionName":{"name":"abi_encode_t_stringliteral_2635e0c891a3ce0373fd39c7acb0b02d0a3d29985ab4f087fed4e787bad23846_to_t_string_memory_ptr_fromStack","nativeSrc":"12064:124:10","nodeType":"YulIdentifier","src":"12064:124:10"},"nativeSrc":"12064:131:10","nodeType":"YulFunctionCall","src":"12064:131:10"},"variableNames":[{"name":"tail","nativeSrc":"12056:4:10","nodeType":"YulIdentifier","src":"12056:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_2635e0c891a3ce0373fd39c7acb0b02d0a3d29985ab4f087fed4e787bad23846__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"11783:419:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11934:9:10","nodeType":"YulTypedName","src":"11934:9:10","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"11949:4:10","nodeType":"YulTypedName","src":"11949:4:10","type":""}],"src":"11783:419:10"},{"body":{"nativeSrc":"12334:206:10","nodeType":"YulBlock","src":"12334:206:10","statements":[{"nativeSrc":"12344:26:10","nodeType":"YulAssignment","src":"12344:26:10","value":{"arguments":[{"name":"headStart","nativeSrc":"12356:9:10","nodeType":"YulIdentifier","src":"12356:9:10"},{"kind":"number","nativeSrc":"12367:2:10","nodeType":"YulLiteral","src":"12367:2:10","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"12352:3:10","nodeType":"YulIdentifier","src":"12352:3:10"},"nativeSrc":"12352:18:10","nodeType":"YulFunctionCall","src":"12352:18:10"},"variableNames":[{"name":"tail","nativeSrc":"12344:4:10","nodeType":"YulIdentifier","src":"12344:4:10"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"12424:6:10","nodeType":"YulIdentifier","src":"12424:6:10"},{"arguments":[{"name":"headStart","nativeSrc":"12437:9:10","nodeType":"YulIdentifier","src":"12437:9:10"},{"kind":"number","nativeSrc":"12448:1:10","nodeType":"YulLiteral","src":"12448:1:10","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"12433:3:10","nodeType":"YulIdentifier","src":"12433:3:10"},"nativeSrc":"12433:17:10","nodeType":"YulFunctionCall","src":"12433:17:10"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"12380:43:10","nodeType":"YulIdentifier","src":"12380:43:10"},"nativeSrc":"12380:71:10","nodeType":"YulFunctionCall","src":"12380:71:10"},"nativeSrc":"12380:71:10","nodeType":"YulExpressionStatement","src":"12380:71:10"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"12505:6:10","nodeType":"YulIdentifier","src":"12505:6:10"},{"arguments":[{"name":"headStart","nativeSrc":"12518:9:10","nodeType":"YulIdentifier","src":"12518:9:10"},{"kind":"number","nativeSrc":"12529:2:10","nodeType":"YulLiteral","src":"12529:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12514:3:10","nodeType":"YulIdentifier","src":"12514:3:10"},"nativeSrc":"12514:18:10","nodeType":"YulFunctionCall","src":"12514:18:10"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"12461:43:10","nodeType":"YulIdentifier","src":"12461:43:10"},"nativeSrc":"12461:72:10","nodeType":"YulFunctionCall","src":"12461:72:10"},"nativeSrc":"12461:72:10","nodeType":"YulExpressionStatement","src":"12461:72:10"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"12208:332:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12298:9:10","nodeType":"YulTypedName","src":"12298:9:10","type":""},{"name":"value1","nativeSrc":"12310:6:10","nodeType":"YulTypedName","src":"12310:6:10","type":""},{"name":"value0","nativeSrc":"12318:6:10","nodeType":"YulTypedName","src":"12318:6:10","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"12329:4:10","nodeType":"YulTypedName","src":"12329:4:10","type":""}],"src":"12208:332:10"},{"body":{"nativeSrc":"12652:62:10","nodeType":"YulBlock","src":"12652:62:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"12674:6:10","nodeType":"YulIdentifier","src":"12674:6:10"},{"kind":"number","nativeSrc":"12682:1:10","nodeType":"YulLiteral","src":"12682:1:10","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"12670:3:10","nodeType":"YulIdentifier","src":"12670:3:10"},"nativeSrc":"12670:14:10","nodeType":"YulFunctionCall","src":"12670:14:10"},{"hexValue":"4e6f2045544820746f207769746864726177","kind":"string","nativeSrc":"12686:20:10","nodeType":"YulLiteral","src":"12686:20:10","type":"","value":"No ETH to withdraw"}],"functionName":{"name":"mstore","nativeSrc":"12663:6:10","nodeType":"YulIdentifier","src":"12663:6:10"},"nativeSrc":"12663:44:10","nodeType":"YulFunctionCall","src":"12663:44:10"},"nativeSrc":"12663:44:10","nodeType":"YulExpressionStatement","src":"12663:44:10"}]},"name":"store_literal_in_memory_9df16c5c3e9f487854502591282f9dbd29044f6d3f3bf4c9daa5d3460486dd95","nativeSrc":"12546:168:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"12644:6:10","nodeType":"YulTypedName","src":"12644:6:10","type":""}],"src":"12546:168:10"},{"body":{"nativeSrc":"12866:220:10","nodeType":"YulBlock","src":"12866:220:10","statements":[{"nativeSrc":"12876:74:10","nodeType":"YulAssignment","src":"12876:74:10","value":{"arguments":[{"name":"pos","nativeSrc":"12942:3:10","nodeType":"YulIdentifier","src":"12942:3:10"},{"kind":"number","nativeSrc":"12947:2:10","nodeType":"YulLiteral","src":"12947:2:10","type":"","value":"18"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"12883:58:10","nodeType":"YulIdentifier","src":"12883:58:10"},"nativeSrc":"12883:67:10","nodeType":"YulFunctionCall","src":"12883:67:10"},"variableNames":[{"name":"pos","nativeSrc":"12876:3:10","nodeType":"YulIdentifier","src":"12876:3:10"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"13048:3:10","nodeType":"YulIdentifier","src":"13048:3:10"}],"functionName":{"name":"store_literal_in_memory_9df16c5c3e9f487854502591282f9dbd29044f6d3f3bf4c9daa5d3460486dd95","nativeSrc":"12959:88:10","nodeType":"YulIdentifier","src":"12959:88:10"},"nativeSrc":"12959:93:10","nodeType":"YulFunctionCall","src":"12959:93:10"},"nativeSrc":"12959:93:10","nodeType":"YulExpressionStatement","src":"12959:93:10"},{"nativeSrc":"13061:19:10","nodeType":"YulAssignment","src":"13061:19:10","value":{"arguments":[{"name":"pos","nativeSrc":"13072:3:10","nodeType":"YulIdentifier","src":"13072:3:10"},{"kind":"number","nativeSrc":"13077:2:10","nodeType":"YulLiteral","src":"13077:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"13068:3:10","nodeType":"YulIdentifier","src":"13068:3:10"},"nativeSrc":"13068:12:10","nodeType":"YulFunctionCall","src":"13068:12:10"},"variableNames":[{"name":"end","nativeSrc":"13061:3:10","nodeType":"YulIdentifier","src":"13061:3:10"}]}]},"name":"abi_encode_t_stringliteral_9df16c5c3e9f487854502591282f9dbd29044f6d3f3bf4c9daa5d3460486dd95_to_t_string_memory_ptr_fromStack","nativeSrc":"12720:366:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"12854:3:10","nodeType":"YulTypedName","src":"12854:3:10","type":""}],"returnVariables":[{"name":"end","nativeSrc":"12862:3:10","nodeType":"YulTypedName","src":"12862:3:10","type":""}],"src":"12720:366:10"},{"body":{"nativeSrc":"13263:248:10","nodeType":"YulBlock","src":"13263:248:10","statements":[{"nativeSrc":"13273:26:10","nodeType":"YulAssignment","src":"13273:26:10","value":{"arguments":[{"name":"headStart","nativeSrc":"13285:9:10","nodeType":"YulIdentifier","src":"13285:9:10"},{"kind":"number","nativeSrc":"13296:2:10","nodeType":"YulLiteral","src":"13296:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"13281:3:10","nodeType":"YulIdentifier","src":"13281:3:10"},"nativeSrc":"13281:18:10","nodeType":"YulFunctionCall","src":"13281:18:10"},"variableNames":[{"name":"tail","nativeSrc":"13273:4:10","nodeType":"YulIdentifier","src":"13273:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13320:9:10","nodeType":"YulIdentifier","src":"13320:9:10"},{"kind":"number","nativeSrc":"13331:1:10","nodeType":"YulLiteral","src":"13331:1:10","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"13316:3:10","nodeType":"YulIdentifier","src":"13316:3:10"},"nativeSrc":"13316:17:10","nodeType":"YulFunctionCall","src":"13316:17:10"},{"arguments":[{"name":"tail","nativeSrc":"13339:4:10","nodeType":"YulIdentifier","src":"13339:4:10"},{"name":"headStart","nativeSrc":"13345:9:10","nodeType":"YulIdentifier","src":"13345:9:10"}],"functionName":{"name":"sub","nativeSrc":"13335:3:10","nodeType":"YulIdentifier","src":"13335:3:10"},"nativeSrc":"13335:20:10","nodeType":"YulFunctionCall","src":"13335:20:10"}],"functionName":{"name":"mstore","nativeSrc":"13309:6:10","nodeType":"YulIdentifier","src":"13309:6:10"},"nativeSrc":"13309:47:10","nodeType":"YulFunctionCall","src":"13309:47:10"},"nativeSrc":"13309:47:10","nodeType":"YulExpressionStatement","src":"13309:47:10"},{"nativeSrc":"13365:139:10","nodeType":"YulAssignment","src":"13365:139:10","value":{"arguments":[{"name":"tail","nativeSrc":"13499:4:10","nodeType":"YulIdentifier","src":"13499:4:10"}],"functionName":{"name":"abi_encode_t_stringliteral_9df16c5c3e9f487854502591282f9dbd29044f6d3f3bf4c9daa5d3460486dd95_to_t_string_memory_ptr_fromStack","nativeSrc":"13373:124:10","nodeType":"YulIdentifier","src":"13373:124:10"},"nativeSrc":"13373:131:10","nodeType":"YulFunctionCall","src":"13373:131:10"},"variableNames":[{"name":"tail","nativeSrc":"13365:4:10","nodeType":"YulIdentifier","src":"13365:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_9df16c5c3e9f487854502591282f9dbd29044f6d3f3bf4c9daa5d3460486dd95__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"13092:419:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"13243:9:10","nodeType":"YulTypedName","src":"13243:9:10","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"13258:4:10","nodeType":"YulTypedName","src":"13258:4:10","type":""}],"src":"13092:419:10"},{"body":{"nativeSrc":"13630:34:10","nodeType":"YulBlock","src":"13630:34:10","statements":[{"nativeSrc":"13640:18:10","nodeType":"YulAssignment","src":"13640:18:10","value":{"name":"pos","nativeSrc":"13655:3:10","nodeType":"YulIdentifier","src":"13655:3:10"},"variableNames":[{"name":"updated_pos","nativeSrc":"13640:11:10","nodeType":"YulIdentifier","src":"13640:11:10"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"13517:147:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"13602:3:10","nodeType":"YulTypedName","src":"13602:3:10","type":""},{"name":"length","nativeSrc":"13607:6:10","nodeType":"YulTypedName","src":"13607:6:10","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"13618:11:10","nodeType":"YulTypedName","src":"13618:11:10","type":""}],"src":"13517:147:10"},{"body":{"nativeSrc":"13776:8:10","nodeType":"YulBlock","src":"13776:8:10","statements":[]},"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nativeSrc":"13670:114:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"13768:6:10","nodeType":"YulTypedName","src":"13768:6:10","type":""}],"src":"13670:114:10"},{"body":{"nativeSrc":"13953:235:10","nodeType":"YulBlock","src":"13953:235:10","statements":[{"nativeSrc":"13963:90:10","nodeType":"YulAssignment","src":"13963:90:10","value":{"arguments":[{"name":"pos","nativeSrc":"14046:3:10","nodeType":"YulIdentifier","src":"14046:3:10"},{"kind":"number","nativeSrc":"14051:1:10","nodeType":"YulLiteral","src":"14051:1:10","type":"","value":"0"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"13970:75:10","nodeType":"YulIdentifier","src":"13970:75:10"},"nativeSrc":"13970:83:10","nodeType":"YulFunctionCall","src":"13970:83:10"},"variableNames":[{"name":"pos","nativeSrc":"13963:3:10","nodeType":"YulIdentifier","src":"13963:3:10"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"14151:3:10","nodeType":"YulIdentifier","src":"14151:3:10"}],"functionName":{"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nativeSrc":"14062:88:10","nodeType":"YulIdentifier","src":"14062:88:10"},"nativeSrc":"14062:93:10","nodeType":"YulFunctionCall","src":"14062:93:10"},"nativeSrc":"14062:93:10","nodeType":"YulExpressionStatement","src":"14062:93:10"},{"nativeSrc":"14164:18:10","nodeType":"YulAssignment","src":"14164:18:10","value":{"arguments":[{"name":"pos","nativeSrc":"14175:3:10","nodeType":"YulIdentifier","src":"14175:3:10"},{"kind":"number","nativeSrc":"14180:1:10","nodeType":"YulLiteral","src":"14180:1:10","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"14171:3:10","nodeType":"YulIdentifier","src":"14171:3:10"},"nativeSrc":"14171:11:10","nodeType":"YulFunctionCall","src":"14171:11:10"},"variableNames":[{"name":"end","nativeSrc":"14164:3:10","nodeType":"YulIdentifier","src":"14164:3:10"}]}]},"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"13790:398:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"13941:3:10","nodeType":"YulTypedName","src":"13941:3:10","type":""}],"returnVariables":[{"name":"end","nativeSrc":"13949:3:10","nodeType":"YulTypedName","src":"13949:3:10","type":""}],"src":"13790:398:10"},{"body":{"nativeSrc":"14382:191:10","nodeType":"YulBlock","src":"14382:191:10","statements":[{"nativeSrc":"14393:154:10","nodeType":"YulAssignment","src":"14393:154:10","value":{"arguments":[{"name":"pos","nativeSrc":"14543:3:10","nodeType":"YulIdentifier","src":"14543:3:10"}],"functionName":{"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"14400:141:10","nodeType":"YulIdentifier","src":"14400:141:10"},"nativeSrc":"14400:147:10","nodeType":"YulFunctionCall","src":"14400:147:10"},"variableNames":[{"name":"pos","nativeSrc":"14393:3:10","nodeType":"YulIdentifier","src":"14393:3:10"}]},{"nativeSrc":"14557:10:10","nodeType":"YulAssignment","src":"14557:10:10","value":{"name":"pos","nativeSrc":"14564:3:10","nodeType":"YulIdentifier","src":"14564:3:10"},"variableNames":[{"name":"end","nativeSrc":"14557:3:10","nodeType":"YulIdentifier","src":"14557:3:10"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"14194:379:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"14369:3:10","nodeType":"YulTypedName","src":"14369:3:10","type":""}],"returnVariables":[{"name":"end","nativeSrc":"14378:3:10","nodeType":"YulTypedName","src":"14378:3:10","type":""}],"src":"14194:379:10"},{"body":{"nativeSrc":"14685:63:10","nodeType":"YulBlock","src":"14685:63:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"14707:6:10","nodeType":"YulIdentifier","src":"14707:6:10"},{"kind":"number","nativeSrc":"14715:1:10","nodeType":"YulLiteral","src":"14715:1:10","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"14703:3:10","nodeType":"YulIdentifier","src":"14703:3:10"},"nativeSrc":"14703:14:10","nodeType":"YulFunctionCall","src":"14703:14:10"},{"hexValue":"455448207472616e73666572206661696c6564","kind":"string","nativeSrc":"14719:21:10","nodeType":"YulLiteral","src":"14719:21:10","type":"","value":"ETH transfer failed"}],"functionName":{"name":"mstore","nativeSrc":"14696:6:10","nodeType":"YulIdentifier","src":"14696:6:10"},"nativeSrc":"14696:45:10","nodeType":"YulFunctionCall","src":"14696:45:10"},"nativeSrc":"14696:45:10","nodeType":"YulExpressionStatement","src":"14696:45:10"}]},"name":"store_literal_in_memory_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd","nativeSrc":"14579:169:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"14677:6:10","nodeType":"YulTypedName","src":"14677:6:10","type":""}],"src":"14579:169:10"},{"body":{"nativeSrc":"14900:220:10","nodeType":"YulBlock","src":"14900:220:10","statements":[{"nativeSrc":"14910:74:10","nodeType":"YulAssignment","src":"14910:74:10","value":{"arguments":[{"name":"pos","nativeSrc":"14976:3:10","nodeType":"YulIdentifier","src":"14976:3:10"},{"kind":"number","nativeSrc":"14981:2:10","nodeType":"YulLiteral","src":"14981:2:10","type":"","value":"19"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"14917:58:10","nodeType":"YulIdentifier","src":"14917:58:10"},"nativeSrc":"14917:67:10","nodeType":"YulFunctionCall","src":"14917:67:10"},"variableNames":[{"name":"pos","nativeSrc":"14910:3:10","nodeType":"YulIdentifier","src":"14910:3:10"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"15082:3:10","nodeType":"YulIdentifier","src":"15082:3:10"}],"functionName":{"name":"store_literal_in_memory_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd","nativeSrc":"14993:88:10","nodeType":"YulIdentifier","src":"14993:88:10"},"nativeSrc":"14993:93:10","nodeType":"YulFunctionCall","src":"14993:93:10"},"nativeSrc":"14993:93:10","nodeType":"YulExpressionStatement","src":"14993:93:10"},{"nativeSrc":"15095:19:10","nodeType":"YulAssignment","src":"15095:19:10","value":{"arguments":[{"name":"pos","nativeSrc":"15106:3:10","nodeType":"YulIdentifier","src":"15106:3:10"},{"kind":"number","nativeSrc":"15111:2:10","nodeType":"YulLiteral","src":"15111:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"15102:3:10","nodeType":"YulIdentifier","src":"15102:3:10"},"nativeSrc":"15102:12:10","nodeType":"YulFunctionCall","src":"15102:12:10"},"variableNames":[{"name":"end","nativeSrc":"15095:3:10","nodeType":"YulIdentifier","src":"15095:3:10"}]}]},"name":"abi_encode_t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd_to_t_string_memory_ptr_fromStack","nativeSrc":"14754:366:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"14888:3:10","nodeType":"YulTypedName","src":"14888:3:10","type":""}],"returnVariables":[{"name":"end","nativeSrc":"14896:3:10","nodeType":"YulTypedName","src":"14896:3:10","type":""}],"src":"14754:366:10"},{"body":{"nativeSrc":"15297:248:10","nodeType":"YulBlock","src":"15297:248:10","statements":[{"nativeSrc":"15307:26:10","nodeType":"YulAssignment","src":"15307:26:10","value":{"arguments":[{"name":"headStart","nativeSrc":"15319:9:10","nodeType":"YulIdentifier","src":"15319:9:10"},{"kind":"number","nativeSrc":"15330:2:10","nodeType":"YulLiteral","src":"15330:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"15315:3:10","nodeType":"YulIdentifier","src":"15315:3:10"},"nativeSrc":"15315:18:10","nodeType":"YulFunctionCall","src":"15315:18:10"},"variableNames":[{"name":"tail","nativeSrc":"15307:4:10","nodeType":"YulIdentifier","src":"15307:4:10"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15354:9:10","nodeType":"YulIdentifier","src":"15354:9:10"},{"kind":"number","nativeSrc":"15365:1:10","nodeType":"YulLiteral","src":"15365:1:10","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"15350:3:10","nodeType":"YulIdentifier","src":"15350:3:10"},"nativeSrc":"15350:17:10","nodeType":"YulFunctionCall","src":"15350:17:10"},{"arguments":[{"name":"tail","nativeSrc":"15373:4:10","nodeType":"YulIdentifier","src":"15373:4:10"},{"name":"headStart","nativeSrc":"15379:9:10","nodeType":"YulIdentifier","src":"15379:9:10"}],"functionName":{"name":"sub","nativeSrc":"15369:3:10","nodeType":"YulIdentifier","src":"15369:3:10"},"nativeSrc":"15369:20:10","nodeType":"YulFunctionCall","src":"15369:20:10"}],"functionName":{"name":"mstore","nativeSrc":"15343:6:10","nodeType":"YulIdentifier","src":"15343:6:10"},"nativeSrc":"15343:47:10","nodeType":"YulFunctionCall","src":"15343:47:10"},"nativeSrc":"15343:47:10","nodeType":"YulExpressionStatement","src":"15343:47:10"},{"nativeSrc":"15399:139:10","nodeType":"YulAssignment","src":"15399:139:10","value":{"arguments":[{"name":"tail","nativeSrc":"15533:4:10","nodeType":"YulIdentifier","src":"15533:4:10"}],"functionName":{"name":"abi_encode_t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd_to_t_string_memory_ptr_fromStack","nativeSrc":"15407:124:10","nodeType":"YulIdentifier","src":"15407:124:10"},"nativeSrc":"15407:131:10","nodeType":"YulFunctionCall","src":"15407:131:10"},"variableNames":[{"name":"tail","nativeSrc":"15399:4:10","nodeType":"YulIdentifier","src":"15399:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"15126:419:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"15277:9:10","nodeType":"YulTypedName","src":"15277:9:10","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"15292:4:10","nodeType":"YulTypedName","src":"15292:4:10","type":""}],"src":"15126:419:10"},{"body":{"nativeSrc":"15705:288:10","nodeType":"YulBlock","src":"15705:288:10","statements":[{"nativeSrc":"15715:26:10","nodeType":"YulAssignment","src":"15715:26:10","value":{"arguments":[{"name":"headStart","nativeSrc":"15727:9:10","nodeType":"YulIdentifier","src":"15727:9:10"},{"kind":"number","nativeSrc":"15738:2:10","nodeType":"YulLiteral","src":"15738:2:10","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"15723:3:10","nodeType":"YulIdentifier","src":"15723:3:10"},"nativeSrc":"15723:18:10","nodeType":"YulFunctionCall","src":"15723:18:10"},"variableNames":[{"name":"tail","nativeSrc":"15715:4:10","nodeType":"YulIdentifier","src":"15715:4:10"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"15795:6:10","nodeType":"YulIdentifier","src":"15795:6:10"},{"arguments":[{"name":"headStart","nativeSrc":"15808:9:10","nodeType":"YulIdentifier","src":"15808:9:10"},{"kind":"number","nativeSrc":"15819:1:10","nodeType":"YulLiteral","src":"15819:1:10","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"15804:3:10","nodeType":"YulIdentifier","src":"15804:3:10"},"nativeSrc":"15804:17:10","nodeType":"YulFunctionCall","src":"15804:17:10"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"15751:43:10","nodeType":"YulIdentifier","src":"15751:43:10"},"nativeSrc":"15751:71:10","nodeType":"YulFunctionCall","src":"15751:71:10"},"nativeSrc":"15751:71:10","nodeType":"YulExpressionStatement","src":"15751:71:10"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"15876:6:10","nodeType":"YulIdentifier","src":"15876:6:10"},{"arguments":[{"name":"headStart","nativeSrc":"15889:9:10","nodeType":"YulIdentifier","src":"15889:9:10"},{"kind":"number","nativeSrc":"15900:2:10","nodeType":"YulLiteral","src":"15900:2:10","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"15885:3:10","nodeType":"YulIdentifier","src":"15885:3:10"},"nativeSrc":"15885:18:10","nodeType":"YulFunctionCall","src":"15885:18:10"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"15832:43:10","nodeType":"YulIdentifier","src":"15832:43:10"},"nativeSrc":"15832:72:10","nodeType":"YulFunctionCall","src":"15832:72:10"},"nativeSrc":"15832:72:10","nodeType":"YulExpressionStatement","src":"15832:72:10"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"15958:6:10","nodeType":"YulIdentifier","src":"15958:6:10"},{"arguments":[{"name":"headStart","nativeSrc":"15971:9:10","nodeType":"YulIdentifier","src":"15971:9:10"},{"kind":"number","nativeSrc":"15982:2:10","nodeType":"YulLiteral","src":"15982:2:10","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"15967:3:10","nodeType":"YulIdentifier","src":"15967:3:10"},"nativeSrc":"15967:18:10","nodeType":"YulFunctionCall","src":"15967:18:10"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"15914:43:10","nodeType":"YulIdentifier","src":"15914:43:10"},"nativeSrc":"15914:72:10","nodeType":"YulFunctionCall","src":"15914:72:10"},"nativeSrc":"15914:72:10","nodeType":"YulExpressionStatement","src":"15914:72:10"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"15551:442:10","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"15661:9:10","nodeType":"YulTypedName","src":"15661:9:10","type":""},{"name":"value2","nativeSrc":"15673:6:10","nodeType":"YulTypedName","src":"15673:6:10","type":""},{"name":"value1","nativeSrc":"15681:6:10","nodeType":"YulTypedName","src":"15681:6:10","type":""},{"name":"value0","nativeSrc":"15689:6:10","nodeType":"YulTypedName","src":"15689:6:10","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"15700:4:10","nodeType":"YulTypedName","src":"15700:4:10","type":""}],"src":"15551:442:10"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_98d47a114e9ec161988edab8b58a654f584563d48ca8de8bde3ee7b5f933c731(memPtr) {\n\n        mstore(add(memPtr, 0), \"Factor must be at least 1.0\")\n\n    }\n\n    function abi_encode_t_stringliteral_98d47a114e9ec161988edab8b58a654f584563d48ca8de8bde3ee7b5f933c731_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_98d47a114e9ec161988edab8b58a654f584563d48ca8de8bde3ee7b5f933c731(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_98d47a114e9ec161988edab8b58a654f584563d48ca8de8bde3ee7b5f933c731__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_98d47a114e9ec161988edab8b58a654f584563d48ca8de8bde3ee7b5f933c731_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_30a3169537af6a19e878efd19359816e5050657af8f1bfb68949c44684f913de(memPtr) {\n\n        mstore(add(memPtr, 0), \"Must send ETH to buy tokens\")\n\n    }\n\n    function abi_encode_t_stringliteral_30a3169537af6a19e878efd19359816e5050657af8f1bfb68949c44684f913de_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_30a3169537af6a19e878efd19359816e5050657af8f1bfb68949c44684f913de(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_30a3169537af6a19e878efd19359816e5050657af8f1bfb68949c44684f913de__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_30a3169537af6a19e878efd19359816e5050657af8f1bfb68949c44684f913de_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4d24bb6fdc16272faa3d9a86eb0993aea2ad4ea79256f2a3f0b4914367982e44(memPtr) {\n\n        mstore(add(memPtr, 0), \"Price calculation error\")\n\n    }\n\n    function abi_encode_t_stringliteral_4d24bb6fdc16272faa3d9a86eb0993aea2ad4ea79256f2a3f0b4914367982e44_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_4d24bb6fdc16272faa3d9a86eb0993aea2ad4ea79256f2a3f0b4914367982e44(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4d24bb6fdc16272faa3d9a86eb0993aea2ad4ea79256f2a3f0b4914367982e44__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4d24bb6fdc16272faa3d9a86eb0993aea2ad4ea79256f2a3f0b4914367982e44_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_2635e0c891a3ce0373fd39c7acb0b02d0a3d29985ab4f087fed4e787bad23846(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not enough ETH sent to buy any t\")\n\n        mstore(add(memPtr, 32), \"okens\")\n\n    }\n\n    function abi_encode_t_stringliteral_2635e0c891a3ce0373fd39c7acb0b02d0a3d29985ab4f087fed4e787bad23846_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_2635e0c891a3ce0373fd39c7acb0b02d0a3d29985ab4f087fed4e787bad23846(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2635e0c891a3ce0373fd39c7acb0b02d0a3d29985ab4f087fed4e787bad23846__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2635e0c891a3ce0373fd39c7acb0b02d0a3d29985ab4f087fed4e787bad23846_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_9df16c5c3e9f487854502591282f9dbd29044f6d3f3bf4c9daa5d3460486dd95(memPtr) {\n\n        mstore(add(memPtr, 0), \"No ETH to withdraw\")\n\n    }\n\n    function abi_encode_t_stringliteral_9df16c5c3e9f487854502591282f9dbd29044f6d3f3bf4c9daa5d3460486dd95_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_9df16c5c3e9f487854502591282f9dbd29044f6d3f3bf4c9daa5d3460486dd95(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9df16c5c3e9f487854502591282f9dbd29044f6d3f3bf4c9daa5d3460486dd95__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9df16c5c3e9f487854502591282f9dbd29044f6d3f3bf4c9daa5d3460486dd95_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd(memPtr) {\n\n        mstore(add(memPtr, 0), \"ETH transfer failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n}\n","id":10,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x11F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x95D89B41 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3BA JUMPI DUP1 PUSH4 0xE086E5EC EQ PUSH2 0x3F7 JUMPI DUP1 PUSH4 0xEB91D37E EQ PUSH2 0x40E JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x439 JUMPI DUP1 PUSH4 0xFD5BAA88 EQ PUSH2 0x462 JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2F2 JUMPI DUP1 PUSH4 0xA6F2AE3A EQ PUSH2 0x31D JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x327 JUMPI DUP1 PUSH4 0xC7876EA4 EQ PUSH2 0x364 JUMPI DUP1 PUSH4 0xCE2A9F62 EQ PUSH2 0x38F JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x34436707 GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x34436707 EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0x6E97B47B EQ PUSH2 0x248 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x273 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2B0 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2C7 JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x124 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x18C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1B7 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1F4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x130 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x139 PUSH2 0x48B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146 SWAP2 SWAP1 PUSH2 0x13C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x176 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x171 SWAP2 SWAP1 PUSH2 0x147C JUMP JUMPDEST PUSH2 0x51D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x183 SWAP2 SWAP1 PUSH2 0x14D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x198 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A1 PUSH2 0x540 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AE SWAP2 SWAP1 PUSH2 0x1501 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D9 SWAP2 SWAP1 PUSH2 0x151C JUMP JUMPDEST PUSH2 0x54A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EB SWAP2 SWAP1 PUSH2 0x14D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x200 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x209 PUSH2 0x579 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x216 SWAP2 SWAP1 PUSH2 0x158B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x246 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x241 SWAP2 SWAP1 PUSH2 0x15A6 JUMP JUMPDEST PUSH2 0x582 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x254 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25D PUSH2 0x5DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26A SWAP2 SWAP1 PUSH2 0x1501 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x29A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x295 SWAP2 SWAP1 PUSH2 0x15D3 JUMP JUMPDEST PUSH2 0x5E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A7 SWAP2 SWAP1 PUSH2 0x1501 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C5 PUSH2 0x62D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2DC PUSH2 0x641 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E9 SWAP2 SWAP1 PUSH2 0x160F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x307 PUSH2 0x66B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x314 SWAP2 SWAP1 PUSH2 0x13C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x325 PUSH2 0x6FD JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x333 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x34E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x349 SWAP2 SWAP1 PUSH2 0x147C JUMP JUMPDEST PUSH2 0x8B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35B SWAP2 SWAP1 PUSH2 0x14D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x370 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x379 PUSH2 0x8D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x386 SWAP2 SWAP1 PUSH2 0x1501 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A4 PUSH2 0x8DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B1 SWAP2 SWAP1 PUSH2 0x1501 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3DC SWAP2 SWAP1 PUSH2 0x162A JUMP JUMPDEST PUSH2 0x8E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3EE SWAP2 SWAP1 PUSH2 0x1501 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x403 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x40C PUSH2 0x967 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x41A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x423 PUSH2 0xA6E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x430 SWAP2 SWAP1 PUSH2 0x1501 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x445 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x460 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45B SWAP2 SWAP1 PUSH2 0x15D3 JUMP JUMPDEST PUSH2 0xB2B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x46E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x489 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x484 SWAP2 SWAP1 PUSH2 0x15A6 JUMP JUMPDEST PUSH2 0xBB1 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x49A SWAP1 PUSH2 0x1699 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4C6 SWAP1 PUSH2 0x1699 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x513 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4E8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x513 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4F6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x528 PUSH2 0xBC3 JUMP JUMPDEST SWAP1 POP PUSH2 0x535 DUP2 DUP6 DUP6 PUSH2 0xBCB JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x555 PUSH2 0xBC3 JUMP JUMPDEST SWAP1 POP PUSH2 0x562 DUP6 DUP3 DUP6 PUSH2 0xBDD JUMP JUMPDEST PUSH2 0x56D DUP6 DUP6 DUP6 PUSH2 0xC72 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x58A PUSH2 0xD66 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP2 LT ISZERO PUSH2 0x5D5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5CC SWAP1 PUSH2 0x1716 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x635 PUSH2 0xD66 JUMP JUMPDEST PUSH2 0x63F PUSH1 0x0 PUSH2 0xDED JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x67A SWAP1 PUSH2 0x1699 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6A6 SWAP1 PUSH2 0x1699 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6F3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6C8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6F3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6D6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLVALUE GT PUSH2 0x740 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x737 SWAP1 PUSH2 0x1782 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x74A PUSH2 0xA6E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x78F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x786 SWAP1 PUSH2 0x17EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xDE0B6B3A7640000 CALLVALUE PUSH2 0x7A6 SWAP2 SWAP1 PUSH2 0x183D JUMP JUMPDEST PUSH2 0x7B0 SWAP2 SWAP1 PUSH2 0x18AE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x7BC PUSH2 0x540 JUMP JUMPDEST SWAP1 POP PUSH11 0x84595161401484A000000 DUP3 DUP3 PUSH2 0x7D6 SWAP2 SWAP1 PUSH2 0x18DF JUMP JUMPDEST GT ISZERO PUSH2 0x7F6 JUMPI DUP1 PUSH11 0x84595161401484A000000 PUSH2 0x7F3 SWAP2 SWAP1 PUSH2 0x1913 JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x839 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x830 SWAP1 PUSH2 0x19B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLVALUE PUSH1 0x8 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x84B SWAP2 SWAP1 PUSH2 0x18DF JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x85C CALLER DUP4 PUSH2 0xEB3 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8FAFEBCAF9D154343DAD25669BFA277F4FBACD7AC6B0C4FED522580E040A0F33 CALLVALUE DUP5 PUSH1 0x40 MLOAD PUSH2 0x8A4 SWAP3 SWAP2 SWAP1 PUSH2 0x19D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x8BC PUSH2 0xBC3 JUMP JUMPDEST SWAP1 POP PUSH2 0x8C9 DUP2 DUP6 DUP6 PUSH2 0xC72 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x96F PUSH2 0xD66 JUMP JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x9B7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9AE SWAP1 PUSH2 0x1A4E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x9C1 PUSH2 0x641 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x9E4 SWAP1 PUSH2 0x1A9F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xA21 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xA26 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xA6A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA61 SWAP1 PUSH2 0x1B00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xA79 PUSH2 0x540 JUMP JUMPDEST SWAP1 POP PUSH11 0x84595161401484A000000 DUP2 LT PUSH2 0xAB6 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 POP POP PUSH2 0xB28 JUMP JUMPDEST PUSH1 0x0 PUSH11 0x84595161401484A000000 PUSH8 0xDE0B6B3A7640000 DUP4 PUSH2 0xAD8 SWAP2 SWAP1 PUSH2 0x183D JUMP JUMPDEST PUSH2 0xAE2 SWAP2 SWAP1 PUSH2 0x18AE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 DUP1 PUSH1 0x7 SLOAD PUSH2 0xAFD SWAP2 SWAP1 PUSH2 0x1913 JUMP JUMPDEST DUP4 PUSH2 0xB08 SWAP2 SWAP1 PUSH2 0x183D JUMP JUMPDEST PUSH2 0xB12 SWAP2 SWAP1 PUSH2 0x18AE JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0xB1F SWAP2 SWAP1 PUSH2 0x18DF JUMP JUMPDEST SWAP1 POP DUP1 SWAP4 POP POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xB33 PUSH2 0xD66 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBA5 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB9C SWAP2 SWAP1 PUSH2 0x160F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBAE DUP2 PUSH2 0xDED JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xBB9 PUSH2 0xD66 JUMP JUMPDEST DUP1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xBD8 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xF35 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBE9 DUP5 DUP5 PUSH2 0x8E0 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0xC6C JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xC5C JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC53 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC6B DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0xF35 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCE4 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCDB SWAP2 SWAP1 PUSH2 0x160F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD56 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD4D SWAP2 SWAP1 PUSH2 0x160F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD61 DUP4 DUP4 DUP4 PUSH2 0x110C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xD6E PUSH2 0xBC3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD8C PUSH2 0x641 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDEB JUMPI PUSH2 0xDAF PUSH2 0xBC3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDE2 SWAP2 SWAP1 PUSH2 0x160F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF25 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF1C SWAP2 SWAP1 PUSH2 0x160F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF31 PUSH1 0x0 DUP4 DUP4 PUSH2 0x110C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFA7 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF9E SWAP2 SWAP1 PUSH2 0x160F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1019 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1010 SWAP2 SWAP1 PUSH2 0x160F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1106 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x10FD SWAP2 SWAP1 PUSH2 0x1501 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x115E JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1152 SWAP2 SWAP1 PUSH2 0x18DF JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1231 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x11EA JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11E1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x127A JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x12C7 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1324 SWAP2 SWAP1 PUSH2 0x1501 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x136B JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1350 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1393 DUP3 PUSH2 0x1331 JUMP JUMPDEST PUSH2 0x139D DUP2 DUP6 PUSH2 0x133C JUMP JUMPDEST SWAP4 POP PUSH2 0x13AD DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x134D JUMP JUMPDEST PUSH2 0x13B6 DUP2 PUSH2 0x1377 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x13DB DUP2 DUP5 PUSH2 0x1388 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1413 DUP3 PUSH2 0x13E8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1423 DUP2 PUSH2 0x1408 JUMP JUMPDEST DUP2 EQ PUSH2 0x142E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1440 DUP2 PUSH2 0x141A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1459 DUP2 PUSH2 0x1446 JUMP JUMPDEST DUP2 EQ PUSH2 0x1464 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1476 DUP2 PUSH2 0x1450 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1493 JUMPI PUSH2 0x1492 PUSH2 0x13E3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x14A1 DUP6 DUP3 DUP7 ADD PUSH2 0x1431 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x14B2 DUP6 DUP3 DUP7 ADD PUSH2 0x1467 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14D1 DUP2 PUSH2 0x14BC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14EC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x14C8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x14FB DUP2 PUSH2 0x1446 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1516 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x14F2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1535 JUMPI PUSH2 0x1534 PUSH2 0x13E3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1543 DUP7 DUP3 DUP8 ADD PUSH2 0x1431 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1554 DUP7 DUP3 DUP8 ADD PUSH2 0x1431 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1565 DUP7 DUP3 DUP8 ADD PUSH2 0x1467 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1585 DUP2 PUSH2 0x156F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15A0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x157C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15BC JUMPI PUSH2 0x15BB PUSH2 0x13E3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x15CA DUP5 DUP3 DUP6 ADD PUSH2 0x1467 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15E9 JUMPI PUSH2 0x15E8 PUSH2 0x13E3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x15F7 DUP5 DUP3 DUP6 ADD PUSH2 0x1431 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1609 DUP2 PUSH2 0x1408 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1624 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1600 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1641 JUMPI PUSH2 0x1640 PUSH2 0x13E3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x164F DUP6 DUP3 DUP7 ADD PUSH2 0x1431 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1660 DUP6 DUP3 DUP7 ADD PUSH2 0x1431 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x16B1 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x16C4 JUMPI PUSH2 0x16C3 PUSH2 0x166A JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x466163746F72206D757374206265206174206C6561737420312E300000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1700 PUSH1 0x1B DUP4 PUSH2 0x133C JUMP JUMPDEST SWAP2 POP PUSH2 0x170B DUP3 PUSH2 0x16CA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x172F DUP2 PUSH2 0x16F3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4D7573742073656E642045544820746F2062757920746F6B656E730000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x176C PUSH1 0x1B DUP4 PUSH2 0x133C JUMP JUMPDEST SWAP2 POP PUSH2 0x1777 DUP3 PUSH2 0x1736 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x179B DUP2 PUSH2 0x175F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x50726963652063616C63756C6174696F6E206572726F72000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17D8 PUSH1 0x17 DUP4 PUSH2 0x133C JUMP JUMPDEST SWAP2 POP PUSH2 0x17E3 DUP3 PUSH2 0x17A2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1807 DUP2 PUSH2 0x17CB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1848 DUP3 PUSH2 0x1446 JUMP JUMPDEST SWAP2 POP PUSH2 0x1853 DUP4 PUSH2 0x1446 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1861 DUP2 PUSH2 0x1446 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1878 JUMPI PUSH2 0x1877 PUSH2 0x180E JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x18B9 DUP3 PUSH2 0x1446 JUMP JUMPDEST SWAP2 POP PUSH2 0x18C4 DUP4 PUSH2 0x1446 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x18D4 JUMPI PUSH2 0x18D3 PUSH2 0x187F JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18EA DUP3 PUSH2 0x1446 JUMP JUMPDEST SWAP2 POP PUSH2 0x18F5 DUP4 PUSH2 0x1446 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x190D JUMPI PUSH2 0x190C PUSH2 0x180E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x191E DUP3 PUSH2 0x1446 JUMP JUMPDEST SWAP2 POP PUSH2 0x1929 DUP4 PUSH2 0x1446 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1941 JUMPI PUSH2 0x1940 PUSH2 0x180E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F756768204554482073656E7420746F2062757920616E792074 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F6B656E73000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19A3 PUSH1 0x25 DUP4 PUSH2 0x133C JUMP JUMPDEST SWAP2 POP PUSH2 0x19AE DUP3 PUSH2 0x1947 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x19D2 DUP2 PUSH2 0x1996 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x19EE PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x14F2 JUMP JUMPDEST PUSH2 0x19FB PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x14F2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E6F2045544820746F2077697468647261770000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A38 PUSH1 0x12 DUP4 PUSH2 0x133C JUMP JUMPDEST SWAP2 POP PUSH2 0x1A43 DUP3 PUSH2 0x1A02 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1A67 DUP2 PUSH2 0x1A2B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A89 PUSH1 0x0 DUP4 PUSH2 0x1A6E JUMP JUMPDEST SWAP2 POP PUSH2 0x1A94 DUP3 PUSH2 0x1A79 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AAA DUP3 PUSH2 0x1A7C JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455448207472616E73666572206661696C656400000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AEA PUSH1 0x13 DUP4 PUSH2 0x133C JUMP JUMPDEST SWAP2 POP PUSH2 0x1AF5 DUP3 PUSH2 0x1AB4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B19 DUP2 PUSH2 0x1ADD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1B35 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1600 JUMP JUMPDEST PUSH2 0x1B42 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x14F2 JUMP JUMPDEST PUSH2 0x1B4F PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x14F2 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH13 0x67E1AFB7515215D4E5071634E0 DUP1 0xC8 BLOBBASEFEE 0xD6 PUSH10 0x3EAEC38B3B3312D2F410 0xE8 PUSH28 0x6764736F6C634300081C003300000000000000000000000000000000 ","sourceMap":"325:3323:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3998:186;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2849:97;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4776:244;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2707:82;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3455:191:9;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;502:47;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3004:116:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;;;;;;;;;;;:::i;:::-;;1638:85;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1981:93:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1895:871:9;;;:::i;:::-;;3315:178:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;393:38:9;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;583:32;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3551:140:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2844:270:9;;;;;;;;;;;;;:::i;:::-;;1237:604;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3179:109:9;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1779:89:2;1824:13;1856:5;1849:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89;:::o;3998:186::-;4071:4;4087:13;4103:12;:10;:12::i;:::-;4087:28;;4125:31;4134:5;4141:7;4150:5;4125:8;:31::i;:::-;4173:4;4166:11;;;3998:186;;;;:::o;2849:97::-;2901:7;2927:12;;2920:19;;2849:97;:::o;4776:244::-;4863:4;4879:15;4897:12;:10;:12::i;:::-;4879:30;;4919:37;4935:4;4941:7;4950:5;4919:15;:37::i;:::-;4966:26;4976:4;4982:2;4986:5;4966:9;:26::i;:::-;5009:4;5002:11;;;4776:244;;;;;:::o;2707:82::-;2756:5;2780:2;2773:9;;2707:82;:::o;3455:191:9:-;1531:13:0;:11;:13::i;:::-;3561:4:9::1;3547:10;:18;;3539:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;3629:10;3607:19;:32;;;;3455:191:::0;:::o;502:47::-;;;;:::o;3004:116:2:-;3069:7;3095:9;:18;3105:7;3095:18;;;;;;;;;;;;;;;;3088:25;;3004:116;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;1981:93:2:-;2028:13;2060:7;2053:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1981:93;:::o;1895:871:9:-;1957:1;1945:9;:13;1937:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;2001:20;2024:17;:15;:17::i;:::-;2001:40;;2074:1;2059:12;:16;2051:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;2186:20;2230:12;2222:4;2210:9;:16;;;;:::i;:::-;2209:33;;;;:::i;:::-;2186:56;;2302:21;2326:13;:11;:13::i;:::-;2302:37;;765:17;2369:12;2353:13;:28;;;;:::i;:::-;:41;2349:113;;;2438:13;765:17;2425:26;;;;:::i;:::-;2410:41;;2349:113;2495:1;2480:12;:16;2472:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;2608:9;2587:17;;:30;;;;;;;:::i;:::-;;;;;;;;2660:31;2666:10;2678:12;2660:5;:31::i;:::-;2723:10;2707:52;;;2735:9;2746:12;2707:52;;;;;;;:::i;:::-;;;;;;;;1927:839;;;1895:871::o;3315:178:2:-;3384:4;3400:13;3416:12;:10;:12::i;:::-;3400:28;;3438:27;3448:5;3455:2;3459:5;3438:9;:27::i;:::-;3482:4;3475:11;;;3315:178;;;;:::o;393:38:9:-;;;;:::o;583:32::-;;;;:::o;3551:140:2:-;3631:7;3657:11;:18;3669:5;3657:18;;;;;;;;;;;;;;;:27;3676:7;3657:27;;;;;;;;;;;;;;;;3650:34;;3551:140;;;;:::o;2844:270:9:-;1531:13:0;:11;:13::i;:::-;2896:15:9::1;2914:21;2896:39;;2963:1;2953:7;:11;2945:42;;;;;;;;;;;;:::i;:::-;;;;;;;;;2999:12;3025:7;:5;:7::i;:::-;3017:21;;3046:7;3017:41;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2998:60;;;3076:7;3068:39;;;;;;;;;;;;:::i;:::-;;;;;;;;;2886:228;;2844:270::o:0;1237:604::-;1285:7;1304:21;1328:13;:11;:13::i;:::-;1304:37;;765:17;1416:13;:27;1412:82;;1466:17;1459:24;;;;;1412:82;1619:20;765:17;1659:4;1643:13;:20;;;;:::i;:::-;1642:35;;;;:::i;:::-;1619:58;;1687:23;1797:4;1776;1754:19;;:26;;;;:::i;:::-;1738:12;:43;;;;:::i;:::-;1737:64;;;;:::i;:::-;1713:9;;:88;;;;:::i;:::-;1687:114;;1819:15;1812:22;;;;;1237:604;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;3179:109:9:-;1531:13:0;:11;:13::i;:::-;3268::9::1;3256:9;:25;;;;3179:109:::0;:::o;656:96:5:-;709:7;735:10;728:17;;656:96;:::o;8726:128:2:-;8810:37;8819:5;8826:7;8835:5;8842:4;8810:8;:37::i;:::-;8726:128;;;:::o;10415:476::-;10514:24;10541:25;10551:5;10558:7;10541:9;:25::i;:::-;10514:52;;10599:17;10580:16;:36;10576:309;;;10655:5;10636:16;:24;10632:130;;;10714:7;10723:16;10741:5;10687:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10632:130;10803:57;10812:5;10819:7;10847:5;10828:16;:24;10854:5;10803:8;:57::i;:::-;10576:309;10504:387;10415:476;;;:::o;5393:300::-;5492:1;5476:18;;:4;:18;;;5472:86;;5544:1;5517:30;;;;;;;;;;;:::i;:::-;;;;;;;;5472:86;5585:1;5571:16;;:2;:16;;;5567:86;;5639:1;5610:32;;;;;;;;;;;:::i;:::-;;;;;;;;5567:86;5662:24;5670:4;5676:2;5680:5;5662:7;:24::i;:::-;5393:300;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7458:208:2:-;7547:1;7528:21;;:7;:21;;;7524:91;;7601:1;7572:32;;;;;;;;;;;:::i;:::-;;;;;;;;7524:91;7624:35;7640:1;7644:7;7653:5;7624:7;:35::i;:::-;7458:208;;:::o;9701:432::-;9830:1;9813:19;;:5;:19;;;9809:89;;9884:1;9855:32;;;;;;;;;;;:::i;:::-;;;;;;;;9809:89;9930:1;9911:21;;:7;:21;;;9907:90;;9983:1;9955:31;;;;;;;;;;;:::i;:::-;;;;;;;;9907:90;10036:5;10006:11;:18;10018:5;10006:18;;;;;;;;;;;;;;;:27;10025:7;10006:27;;;;;;;;;;;;;;;:35;;;;10055:9;10051:76;;;10101:7;10085:31;;10094:5;10085:31;;;10110:5;10085:31;;;;;;:::i;:::-;;;;;;;;10051:76;9701:432;;;;:::o;6008:1107::-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;7:99:10:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:248::-;369:1;379:113;393:6;390:1;387:13;379:113;;;478:1;473:3;469:11;463:18;459:1;454:3;450:11;443:39;415:2;412:1;408:10;403:15;;379:113;;;526:1;517:6;512:3;508:16;501:27;349:186;287:248;;;:::o;541:102::-;582:6;633:2;629:7;624:2;617:5;613:14;609:28;599:38;;541:102;;;:::o;649:377::-;737:3;765:39;798:5;765:39;:::i;:::-;820:71;884:6;879:3;820:71;:::i;:::-;813:78;;900:65;958:6;953:3;946:4;939:5;935:16;900:65;:::i;:::-;990:29;1012:6;990:29;:::i;:::-;985:3;981:39;974:46;;741:285;649:377;;;;:::o;1032:313::-;1145:4;1183:2;1172:9;1168:18;1160:26;;1232:9;1226:4;1222:20;1218:1;1207:9;1203:17;1196:47;1260:78;1333:4;1324:6;1260:78;:::i;:::-;1252:86;;1032:313;;;;:::o;1432:117::-;1541:1;1538;1531:12;1678:126;1715:7;1755:42;1748:5;1744:54;1733:65;;1678:126;;;:::o;1810:96::-;1847:7;1876:24;1894:5;1876:24;:::i;:::-;1865:35;;1810:96;;;:::o;1912:122::-;1985:24;2003:5;1985:24;:::i;:::-;1978:5;1975:35;1965:63;;2024:1;2021;2014:12;1965:63;1912:122;:::o;2040:139::-;2086:5;2124:6;2111:20;2102:29;;2140:33;2167:5;2140:33;:::i;:::-;2040:139;;;;:::o;2185:77::-;2222:7;2251:5;2240:16;;2185:77;;;:::o;2268:122::-;2341:24;2359:5;2341:24;:::i;:::-;2334:5;2331:35;2321:63;;2380:1;2377;2370:12;2321:63;2268:122;:::o;2396:139::-;2442:5;2480:6;2467:20;2458:29;;2496:33;2523:5;2496:33;:::i;:::-;2396:139;;;;:::o;2541:474::-;2609:6;2617;2666:2;2654:9;2645:7;2641:23;2637:32;2634:119;;;2672:79;;:::i;:::-;2634:119;2792:1;2817:53;2862:7;2853:6;2842:9;2838:22;2817:53;:::i;:::-;2807:63;;2763:117;2919:2;2945:53;2990:7;2981:6;2970:9;2966:22;2945:53;:::i;:::-;2935:63;;2890:118;2541:474;;;;;:::o;3021:90::-;3055:7;3098:5;3091:13;3084:21;3073:32;;3021:90;;;:::o;3117:109::-;3198:21;3213:5;3198:21;:::i;:::-;3193:3;3186:34;3117:109;;:::o;3232:210::-;3319:4;3357:2;3346:9;3342:18;3334:26;;3370:65;3432:1;3421:9;3417:17;3408:6;3370:65;:::i;:::-;3232:210;;;;:::o;3448:118::-;3535:24;3553:5;3535:24;:::i;:::-;3530:3;3523:37;3448:118;;:::o;3572:222::-;3665:4;3703:2;3692:9;3688:18;3680:26;;3716:71;3784:1;3773:9;3769:17;3760:6;3716:71;:::i;:::-;3572:222;;;;:::o;3800:619::-;3877:6;3885;3893;3942:2;3930:9;3921:7;3917:23;3913:32;3910:119;;;3948:79;;:::i;:::-;3910:119;4068:1;4093:53;4138:7;4129:6;4118:9;4114:22;4093:53;:::i;:::-;4083:63;;4039:117;4195:2;4221:53;4266:7;4257:6;4246:9;4242:22;4221:53;:::i;:::-;4211:63;;4166:118;4323:2;4349:53;4394:7;4385:6;4374:9;4370:22;4349:53;:::i;:::-;4339:63;;4294:118;3800:619;;;;;:::o;4425:86::-;4460:7;4500:4;4493:5;4489:16;4478:27;;4425:86;;;:::o;4517:112::-;4600:22;4616:5;4600:22;:::i;:::-;4595:3;4588:35;4517:112;;:::o;4635:214::-;4724:4;4762:2;4751:9;4747:18;4739:26;;4775:67;4839:1;4828:9;4824:17;4815:6;4775:67;:::i;:::-;4635:214;;;;:::o;4855:329::-;4914:6;4963:2;4951:9;4942:7;4938:23;4934:32;4931:119;;;4969:79;;:::i;:::-;4931:119;5089:1;5114:53;5159:7;5150:6;5139:9;5135:22;5114:53;:::i;:::-;5104:63;;5060:117;4855:329;;;;:::o;5190:::-;5249:6;5298:2;5286:9;5277:7;5273:23;5269:32;5266:119;;;5304:79;;:::i;:::-;5266:119;5424:1;5449:53;5494:7;5485:6;5474:9;5470:22;5449:53;:::i;:::-;5439:63;;5395:117;5190:329;;;;:::o;5525:118::-;5612:24;5630:5;5612:24;:::i;:::-;5607:3;5600:37;5525:118;;:::o;5649:222::-;5742:4;5780:2;5769:9;5765:18;5757:26;;5793:71;5861:1;5850:9;5846:17;5837:6;5793:71;:::i;:::-;5649:222;;;;:::o;5877:474::-;5945:6;5953;6002:2;5990:9;5981:7;5977:23;5973:32;5970:119;;;6008:79;;:::i;:::-;5970:119;6128:1;6153:53;6198:7;6189:6;6178:9;6174:22;6153:53;:::i;:::-;6143:63;;6099:117;6255:2;6281:53;6326:7;6317:6;6306:9;6302:22;6281:53;:::i;:::-;6271:63;;6226:118;5877:474;;;;;:::o;6357:180::-;6405:77;6402:1;6395:88;6502:4;6499:1;6492:15;6526:4;6523:1;6516:15;6543:320;6587:6;6624:1;6618:4;6614:12;6604:22;;6671:1;6665:4;6661:12;6692:18;6682:81;;6748:4;6740:6;6736:17;6726:27;;6682:81;6810:2;6802:6;6799:14;6779:18;6776:38;6773:84;;6829:18;;:::i;:::-;6773:84;6594:269;6543:320;;;:::o;6869:177::-;7009:29;7005:1;6997:6;6993:14;6986:53;6869:177;:::o;7052:366::-;7194:3;7215:67;7279:2;7274:3;7215:67;:::i;:::-;7208:74;;7291:93;7380:3;7291:93;:::i;:::-;7409:2;7404:3;7400:12;7393:19;;7052:366;;;:::o;7424:419::-;7590:4;7628:2;7617:9;7613:18;7605:26;;7677:9;7671:4;7667:20;7663:1;7652:9;7648:17;7641:47;7705:131;7831:4;7705:131;:::i;:::-;7697:139;;7424:419;;;:::o;7849:177::-;7989:29;7985:1;7977:6;7973:14;7966:53;7849:177;:::o;8032:366::-;8174:3;8195:67;8259:2;8254:3;8195:67;:::i;:::-;8188:74;;8271:93;8360:3;8271:93;:::i;:::-;8389:2;8384:3;8380:12;8373:19;;8032:366;;;:::o;8404:419::-;8570:4;8608:2;8597:9;8593:18;8585:26;;8657:9;8651:4;8647:20;8643:1;8632:9;8628:17;8621:47;8685:131;8811:4;8685:131;:::i;:::-;8677:139;;8404:419;;;:::o;8829:173::-;8969:25;8965:1;8957:6;8953:14;8946:49;8829:173;:::o;9008:366::-;9150:3;9171:67;9235:2;9230:3;9171:67;:::i;:::-;9164:74;;9247:93;9336:3;9247:93;:::i;:::-;9365:2;9360:3;9356:12;9349:19;;9008:366;;;:::o;9380:419::-;9546:4;9584:2;9573:9;9569:18;9561:26;;9633:9;9627:4;9623:20;9619:1;9608:9;9604:17;9597:47;9661:131;9787:4;9661:131;:::i;:::-;9653:139;;9380:419;;;:::o;9805:180::-;9853:77;9850:1;9843:88;9950:4;9947:1;9940:15;9974:4;9971:1;9964:15;9991:410;10031:7;10054:20;10072:1;10054:20;:::i;:::-;10049:25;;10088:20;10106:1;10088:20;:::i;:::-;10083:25;;10143:1;10140;10136:9;10165:30;10183:11;10165:30;:::i;:::-;10154:41;;10344:1;10335:7;10331:15;10328:1;10325:22;10305:1;10298:9;10278:83;10255:139;;10374:18;;:::i;:::-;10255:139;10039:362;9991:410;;;;:::o;10407:180::-;10455:77;10452:1;10445:88;10552:4;10549:1;10542:15;10576:4;10573:1;10566:15;10593:185;10633:1;10650:20;10668:1;10650:20;:::i;:::-;10645:25;;10684:20;10702:1;10684:20;:::i;:::-;10679:25;;10723:1;10713:35;;10728:18;;:::i;:::-;10713:35;10770:1;10767;10763:9;10758:14;;10593:185;;;;:::o;10784:191::-;10824:3;10843:20;10861:1;10843:20;:::i;:::-;10838:25;;10877:20;10895:1;10877:20;:::i;:::-;10872:25;;10920:1;10917;10913:9;10906:16;;10941:3;10938:1;10935:10;10932:36;;;10948:18;;:::i;:::-;10932:36;10784:191;;;;:::o;10981:194::-;11021:4;11041:20;11059:1;11041:20;:::i;:::-;11036:25;;11075:20;11093:1;11075:20;:::i;:::-;11070:25;;11119:1;11116;11112:9;11104:17;;11143:1;11137:4;11134:11;11131:37;;;11148:18;;:::i;:::-;11131:37;10981:194;;;;:::o;11181:224::-;11321:34;11317:1;11309:6;11305:14;11298:58;11390:7;11385:2;11377:6;11373:15;11366:32;11181:224;:::o;11411:366::-;11553:3;11574:67;11638:2;11633:3;11574:67;:::i;:::-;11567:74;;11650:93;11739:3;11650:93;:::i;:::-;11768:2;11763:3;11759:12;11752:19;;11411:366;;;:::o;11783:419::-;11949:4;11987:2;11976:9;11972:18;11964:26;;12036:9;12030:4;12026:20;12022:1;12011:9;12007:17;12000:47;12064:131;12190:4;12064:131;:::i;:::-;12056:139;;11783:419;;;:::o;12208:332::-;12329:4;12367:2;12356:9;12352:18;12344:26;;12380:71;12448:1;12437:9;12433:17;12424:6;12380:71;:::i;:::-;12461:72;12529:2;12518:9;12514:18;12505:6;12461:72;:::i;:::-;12208:332;;;;;:::o;12546:168::-;12686:20;12682:1;12674:6;12670:14;12663:44;12546:168;:::o;12720:366::-;12862:3;12883:67;12947:2;12942:3;12883:67;:::i;:::-;12876:74;;12959:93;13048:3;12959:93;:::i;:::-;13077:2;13072:3;13068:12;13061:19;;12720:366;;;:::o;13092:419::-;13258:4;13296:2;13285:9;13281:18;13273:26;;13345:9;13339:4;13335:20;13331:1;13320:9;13316:17;13309:47;13373:131;13499:4;13373:131;:::i;:::-;13365:139;;13092:419;;;:::o;13517:147::-;13618:11;13655:3;13640:18;;13517:147;;;;:::o;13670:114::-;;:::o;13790:398::-;13949:3;13970:83;14051:1;14046:3;13970:83;:::i;:::-;13963:90;;14062:93;14151:3;14062:93;:::i;:::-;14180:1;14175:3;14171:11;14164:18;;13790:398;;;:::o;14194:379::-;14378:3;14400:147;14543:3;14400:147;:::i;:::-;14393:154;;14564:3;14557:10;;14194:379;;;:::o;14579:169::-;14719:21;14715:1;14707:6;14703:14;14696:45;14579:169;:::o;14754:366::-;14896:3;14917:67;14981:2;14976:3;14917:67;:::i;:::-;14910:74;;14993:93;15082:3;14993:93;:::i;:::-;15111:2;15106:3;15102:12;15095:19;;14754:366;;;:::o;15126:419::-;15292:4;15330:2;15319:9;15315:18;15307:26;;15379:9;15373:4;15369:20;15365:1;15354:9;15350:17;15343:47;15407:131;15533:4;15407:131;:::i;:::-;15399:139;;15126:419;;;:::o;15551:442::-;15700:4;15738:2;15727:9;15723:18;15715:26;;15751:71;15819:1;15808:9;15804:17;15795:6;15751:71;:::i;:::-;15832:72;15900:2;15889:9;15885:18;15876:6;15832:72;:::i;:::-;15914;15982:2;15971:9;15967:18;15958:6;15914:72;:::i;:::-;15551:442;;;;;;:::o"},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","basePrice()":"c7876ea4","buy()":"a6f2ae3a","decimals()":"313ce567","getCurrentPrice()":"eb91d37e","name()":"06fdde03","owner()":"8da5cb5b","priceIncreaseFactor()":"6e97b47b","renounceOwnership()":"715018a6","symbol()":"95d89b41","totalEthCollected()":"ce2a9f62","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b","updateBasePrice(uint256)":"fd5baa88","updatePriceIncreaseFactor(uint256)":"34436707","withdrawETH()":"e086e5ec"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ethAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"name\":\"TokensPurchased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"basePrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buy\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceIncreaseFactor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalEthCollected\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newBasePrice\",\"type\":\"uint256\"}],\"name\":\"updateBasePrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newFactor\",\"type\":\"uint256\"}],\"name\":\"updatePriceIncreaseFactor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC20 token with a dynamic pricing mechanism based on token supply\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"buy()\":{\"details\":\"Buy tokens with ETH\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"getCurrentPrice()\":{\"details\":\"Returns the current token price based on the current supply Price increases as more tokens are purchased\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateBasePrice(uint256)\":{\"details\":\"Update base price (owner only)\"},\"updatePriceIncreaseFactor(uint256)\":{\"details\":\"Update price increase factor (owner only)\",\"params\":{\"_newFactor\":\"New factor multiplied by 1e18 (e.g., 1.5 * 1e18 for 50% increase)\"}},\"withdrawETH()\":{\"details\":\"Withdraw ETH from the contract (owner only)\"}},\"title\":\"DealToken\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MockToken.sol\":\"DealToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"contracts/MockToken.sol\":{\"keccak256\":\"0xd189e03fbcb17a16846cb71a180a3346fd4583a48f7b2c043eeca2f7752dc38d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc6fb84f977555c11bfdd07e307c667bb0dd353abc5d4a1049f7cde186bf4a1e\",\"dweb:/ipfs/QmUcSFgixSpbstU5B7MmrAppdsW1PcZbxTfmtbFG9xZHtC\"]}},\"version\":1}"}}}}}